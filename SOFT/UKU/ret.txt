; generated by ARM C/C++ Compiler, 4.1 [Build 644]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\EXE\ret.o --asm_dir=.\ --list_dir=.\ --depend=.\EXE\ret.d --feedback=.\EXE\UKU2071x_GALV_IBv2.fed --cpu=Cortex-M3 --apcs=interwork -O3 -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\INC\NXP\LPC17xx -D__MICROLIB -DUKU2071x -DEXT_BOARD_V_2 -DWG12232A --omf_browse=.\EXE\ret.crf ret.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  ret_ind PROC
;;;12     //-----------------------------------------------
;;;13     void ret_ind(char r_i,char r_s,int r_c)
000000  4b0a              LDR      r3,|L1.44|
;;;14     {
;;;15     retcnt=r_c;
;;;16     retind=r_i;
000002  60da              STR      r2,[r3,#0xc]  ; retcnt
000004  7018              STRB     r0,[r3,#0]
;;;17     retsub=r_s;
000006  7059              STRB     r1,[r3,#1]
;;;18     }    
000008  4770              BX       lr
;;;19     
                          ENDP

                  ||ret|| PROC
;;;20     //-----------------------------------------------
;;;21     void ret_ind_hndl(void)
;;;22     {
;;;23     if(retcnt)
;;;24     	{
;;;25     	if((--retcnt)==0)
00000a  4908              LDR      r1,|L1.44|
00000c  8108              STRH     r0,[r1,#8]
;;;26     		{
;;;27      		ind=(i_enum)retind;
00000e  4770              BX       lr
;;;28        		sub_ind=retsub;
;;;29        		index_set=sub_ind;
;;;30        		f0=0;
;;;31        		fc0=0;
;;;32        		f1=0;
;;;33        		fc1=0;
;;;34     	 	}
;;;35          }
;;;36     }  
;;;37     
                          ENDP

                  ret_hndl PROC
;;;20     //-----------------------------------------------
;;;21     void ret_ind_hndl(void)
;;;22     {
;;;23     if(retcnt)
;;;24     	{
;;;25     	if((--retcnt)==0)
;;;26     		{
;;;27      		ind=(i_enum)retind;
000010  4806              LDR      r0,|L1.44|
000012  f9b01008          LDRSH    r1,[r0,#8]  ; ret_duty
;;;28        		sub_ind=retsub;
000016  2900              CMP      r1,#0
;;;29        		index_set=sub_ind;
000018  d007              BEQ      |L1.42|
;;;30        		f0=0;
00001a  1e49              SUBS     r1,r1,#1
00001c  b209              SXTH     r1,r1
;;;31        		fc0=0;
00001e  8101              STRH     r1,[r0,#8]
;;;32        		f1=0;
000020  2900              CMP      r1,#0
;;;33        		fc1=0;
000022  d102              BNE      |L1.42|
;;;34     	 	}
;;;35          }
;;;36     }  
000024  4608              MOV      r0,r1
000026  f7ffbffe          B.W      tree_down
                  |L1.42|
00002a  4770              BX       lr
;;;37     
                          ENDP

                  |L1.44|
                          DCD      ||.data||

                          AREA ||area_number.2||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.2||, ||.text||
                  ret_ind_hndl PROC
;;;20     //-----------------------------------------------
;;;21     void ret_ind_hndl(void)
000000  4809              LDR      r0,|L2.40|
;;;22     {
;;;23     if(retcnt)
000002  68c1              LDR      r1,[r0,#0xc]  ; retcnt
000004  2900              CMP      r1,#0
000006  d00d              BEQ      |L2.36|
;;;24     	{
;;;25     	if((--retcnt)==0)
000008  1e49              SUBS     r1,r1,#1
00000a  60c1              STR      r1,[r0,#0xc]  ; retcnt
00000c  d10a              BNE      |L2.36|
;;;26     		{
;;;27      		ind=(i_enum)retind;
00000e  4907              LDR      r1,|L2.44|
000010  7802              LDRB     r2,[r0,#0]  ; retind
000012  700a              STRB     r2,[r1,#0]
;;;28        		sub_ind=retsub;
000014  7842              LDRB     r2,[r0,#1]  ; retsub
000016  704a              STRB     r2,[r1,#1]
;;;29        		index_set=sub_ind;
000018  710a              STRB     r2,[r1,#4]
;;;30        		f0=0;
00001a  2100              MOVS     r1,#0
00001c  70c1              STRB     r1,[r0,#3]
;;;31        		fc0=0;
00001e  7101              STRB     r1,[r0,#4]
;;;32        		f1=0;
000020  7141              STRB     r1,[r0,#5]
;;;33        		fc1=0;
000022  7181              STRB     r1,[r0,#6]
                  |L2.36|
;;;34     	 	}
;;;35          }
;;;36     }  
000024  4770              BX       lr
;;;37     
                          ENDP

000026  0000              DCW      0x0000
                  |L2.40|
                          DCD      ||.data||
                  |L2.44|
                          DCD      a_ind

                          AREA ||area_number.3||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.3||, ||.text||
                  ret_ind_sec PROC
;;;20     //-----------------------------------------------
;;;21     void ret_ind_hndl(void)
000000  4a01              LDR      r2,|L3.8|
;;;22     {
;;;23     if(retcnt)
000002  6111              STR      r1,[r2,#0x10]  ; retcntsec
000004  7090              STRB     r0,[r2,#2]
000006  4770              BX       lr
;;;24     	{
;;;25     	if((--retcnt)==0)
;;;26     		{
;;;27      		ind=(i_enum)retind;
;;;28        		sub_ind=retsub;
;;;29        		index_set=sub_ind;
;;;30        		f0=0;
;;;31        		fc0=0;
;;;32        		f1=0;
;;;33        		fc1=0;
;;;34     	 	}
;;;35          }
;;;36     }  
;;;37     
                          ENDP

                  |L3.8|
                          DCD      ||.data||

                          AREA ||area_number.4||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.4||, ||.text||
                  ret_ind_sec_hndl PROC
;;;20     //-----------------------------------------------
;;;21     void ret_ind_hndl(void)
000000  4808              LDR      r0,|L4.36|
;;;22     {
;;;23     if(retcnt)
000002  6901              LDR      r1,[r0,#0x10]  ; retcntsec
000004  2900              CMP      r1,#0
000006  d00b              BEQ      |L4.32|
;;;24     	{
;;;25     	if((--retcnt)==0)
000008  1e49              SUBS     r1,r1,#1
00000a  6101              STR      r1,[r0,#0x10]  ; retcntsec
00000c  d108              BNE      |L4.32|
;;;26     		{
;;;27      		ind=(i_enum)retind;
00000e  4a06              LDR      r2,|L4.40|
000010  7881              LDRB     r1,[r0,#2]  ; retindsec
000012  7011              STRB     r1,[r2,#0]
;;;28        		sub_ind=retsub;
000014  2100              MOVS     r1,#0
000016  7051              STRB     r1,[r2,#1]
;;;29        		index_set=sub_ind;
000018  70c1              STRB     r1,[r0,#3]
;;;30        		f0=0;
00001a  7101              STRB     r1,[r0,#4]
00001c  7141              STRB     r1,[r0,#5]
;;;31        		fc0=0;
00001e  7181              STRB     r1,[r0,#6]
                  |L4.32|
;;;32        		f1=0;
000020  4770              BX       lr
;;;33        		fc1=0;
;;;34     	 	}
;;;35          }
;;;36     }  
;;;37     
                          ENDP

000022  0000              DCW      0x0000
                  |L4.36|
                          DCD      ||.data||
                  |L4.40|
                          DCD      a_ind

                          AREA ||.data||, DATA, ALIGN=2

                  retind
000000  00                DCB      0x00
                  retsub
000001  00                DCB      0x00
                  retindsec
000002  00                DCB      0x00
                  ||f0||
000003  00                DCB      0x00
                  ||fc0||
000004  00                DCB      0x00
                  ||f1||
000005  00                DCB      0x00
                  ||fc1||
000006  0000              DCB      0x00,0x00
                  ret_duty
000008  00000000          DCB      0x00,0x00,0x00,0x00
                  retcnt
                          DCD      0x00000000
                  retcntsec
                          DCD      0x00000000
