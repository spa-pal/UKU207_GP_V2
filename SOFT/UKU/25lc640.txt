; generated by ARM C/C++ Compiler, 4.1 [Build 644]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\EXE\25lc640.o --asm_dir=.\ --list_dir=.\ --depend=.\EXE\25lc640.d --cpu=Cortex-M3 --apcs=interwork -O3 -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\INC\NXP\LPC17xx -D__MICROLIB -DUKU2071x -DEXT_BOARD_V_2 -DWG12232A --omf_browse=.\EXE\25lc640.crf 25lc640.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  spi1 PROC
;;;10     
;;;11     char spi1(char in)
000000  49ff              LDR      r1,|L1.1024|
;;;12     {
;;;13     
;;;14      
;;;15     
;;;16     LPC_SPI->SPDR=in;
000002  6088              STR      r0,[r1,#8]
                  |L1.4|
;;;17     while(!(LPC_SPI->SPSR&(1<<7)));
000004  6848              LDR      r0,[r1,#4]
000006  0600              LSLS     r0,r0,#24
000008  d5fc              BPL      |L1.4|
;;;18     return LPC_SPI->SPDR;
00000a  6888              LDR      r0,[r1,#8]
00000c  b2c0              UXTB     r0,r0
;;;19     
;;;20      
;;;21     
;;;22     }
00000e  4770              BX       lr
;;;23     
                          ENDP

                  spi1_config PROC
;;;27     //настройка SPI1
;;;28     void spi1_config(void)
000010  48fc              LDR      r0,|L1.1028|
;;;29     { 
;;;30     
;;;31     SET_REG( LPC_PINCON->PINSEL0, 3, 15*2, 2);
000012  6801              LDR      r1,[r0,#0]
000014  f0414140          ORR      r1,r1,#0xc0000000
000018  6001              STR      r1,[r0,#0]
;;;32     SET_REG( LPC_PINCON->PINSEL1, 0, (16-16)*2, 2);
00001a  6841              LDR      r1,[r0,#4]
00001c  f0210103          BIC      r1,r1,#3
000020  6041              STR      r1,[r0,#4]
;;;33     SET_REG( LPC_PINCON->PINSEL1, 3, (17-16)*2, 2);
000022  6841              LDR      r1,[r0,#4]
000024  f041010c          ORR      r1,r1,#0xc
000028  6041              STR      r1,[r0,#4]
;;;34     SET_REG( LPC_PINCON->PINSEL1, 3, (18-16)*2, 2); 
00002a  6841              LDR      r1,[r0,#4]
00002c  f0410130          ORR      r1,r1,#0x30
000030  6041              STR      r1,[r0,#4]
;;;35     /*
;;;36     S1SPCCR=100;
;;;37     S1SPCR=0x3f; */
;;;38     
;;;39     LPC_SPI->SPCCR=32;
000032  48f3              LDR      r0,|L1.1024|
000034  2120              MOVS     r1,#0x20
000036  60c1              STR      r1,[r0,#0xc]
;;;40     LPC_SPI->SPCR=0x20;
000038  6001              STR      r1,[r0,#0]
;;;41     }
00003a  4770              BX       lr
;;;42     
                          ENDP

                  spi1_unconfig PROC
;;;44     //выключение SPI1
;;;45     void spi1_unconfig(void)
00003c  48f1              LDR      r0,|L1.1028|
;;;46     { 
;;;47     
;;;48     SET_REG( LPC_PINCON->PINSEL0, 0, 15*2, 2);
00003e  6801              LDR      r1,[r0,#0]
000040  f0214140          BIC      r1,r1,#0xc0000000
000044  6001              STR      r1,[r0,#0]
;;;49     SET_REG( LPC_PINCON->PINSEL1, 0, (16-16)*2, 2);
000046  6841              LDR      r1,[r0,#4]
000048  f0210103          BIC      r1,r1,#3
00004c  6041              STR      r1,[r0,#4]
;;;50     SET_REG( LPC_PINCON->PINSEL1, 0, (17-16)*2, 2);
00004e  6841              LDR      r1,[r0,#4]
000050  f021010c          BIC      r1,r1,#0xc
000054  6041              STR      r1,[r0,#4]
;;;51     SET_REG( LPC_PINCON->PINSEL1, 0, (18-16)*2, 2);
000056  6841              LDR      r1,[r0,#4]
000058  f0210130          BIC      r1,r1,#0x30
00005c  6041              STR      r1,[r0,#4]
;;;52     
;;;53     LPC_SPI->SPCR=0x00;
00005e  49e8              LDR      r1,|L1.1024|
000060  2000              MOVS     r0,#0
000062  6008              STR      r0,[r1,#0]
;;;54     }
000064  4770              BX       lr
;;;55     
                          ENDP

                  lc640_wren PROC
;;;57     //Разрешение записи
;;;58     void lc640_wren(void)
000066  b500              PUSH     {lr}
;;;59     {
;;;60     
;;;61     spi1_config();
000068  f7fffffe          BL       spi1_config
;;;62     
;;;63     CS_ON
00006c  4ae6              LDR      r2,|L1.1032|
00006e  6810              LDR      r0,[r2,#0]
000070  f4401080          ORR      r0,r0,#0x100000
000074  6010              STR      r0,[r2,#0]
000076  69d0              LDR      r0,[r2,#0x1c]
000078  f4401080          ORR      r0,r0,#0x100000
00007c  61d0              STR      r0,[r2,#0x1c]
;;;64     
;;;65     spi1(0x06); 
00007e  2006              MOVS     r0,#6
000080  f7fffffe          BL       spi1
;;;66     
;;;67     CS_OFF
000084  6810              LDR      r0,[r2,#0]
000086  f4401080          ORR      r0,r0,#0x100000
00008a  6010              STR      r0,[r2,#0]
00008c  6990              LDR      r0,[r2,#0x18]
00008e  f4401080          ORR      r0,r0,#0x100000
000092  6190              STR      r0,[r2,#0x18]
;;;68     
;;;69     spi1_unconfig();
000094  f85deb04          POP      {lr}
000098  e7fe              B        spi1_unconfig
;;;70     }
;;;71     
                          ENDP

                  lc640_rdsr PROC
;;;73     //Чтение из м-мы регистра состояния
;;;74     char lc640_rdsr(void)
00009a  b500              PUSH     {lr}
;;;75     {
;;;76     char temp;
;;;77     
;;;78     spi1_config();
00009c  f7fffffe          BL       spi1_config
;;;79     CS_ON
0000a0  4ad9              LDR      r2,|L1.1032|
0000a2  6810              LDR      r0,[r2,#0]
0000a4  f4401080          ORR      r0,r0,#0x100000
0000a8  6010              STR      r0,[r2,#0]
0000aa  69d0              LDR      r0,[r2,#0x1c]
0000ac  f4401080          ORR      r0,r0,#0x100000
0000b0  61d0              STR      r0,[r2,#0x1c]
;;;80     spi1(0x05);
0000b2  2005              MOVS     r0,#5
0000b4  f7fffffe          BL       spi1
;;;81     temp=spi1(0xff);
0000b8  20ff              MOVS     r0,#0xff
0000ba  f7fffffe          BL       spi1
0000be  4603              MOV      r3,r0
;;;82     CS_OFF
0000c0  6810              LDR      r0,[r2,#0]
0000c2  f4401080          ORR      r0,r0,#0x100000
0000c6  6010              STR      r0,[r2,#0]
0000c8  6990              LDR      r0,[r2,#0x18]
0000ca  f4401080          ORR      r0,r0,#0x100000
0000ce  6190              STR      r0,[r2,#0x18]
;;;83     spi1_unconfig();
0000d0  f7fffffe          BL       spi1_unconfig
;;;84     return temp;
0000d4  4618              MOV      r0,r3
;;;85     }
0000d6  bd00              POP      {pc}
;;;86     
                          ENDP

                  lc640_read PROC
;;;88     //Чтение из м-мы байта по адр. ADR
;;;89     int lc640_read(int ADR)
0000d8  e92d4001          PUSH.W   {r0,lr}
                  |L1.220|
;;;90     {
;;;91     int temp;
;;;92     temp=0;
;;;93     
;;;94     while(lc640_rdsr()&0x01)
0000dc  f7fffffe          BL       lc640_rdsr
0000e0  07c0              LSLS     r0,r0,#31
0000e2  d1fb              BNE      |L1.220|
;;;95     	{
;;;96     	}
;;;97     spi1_config();
0000e4  f7fffffe          BL       spi1_config
;;;98     CS_ON
0000e8  4ac7              LDR      r2,|L1.1032|
0000ea  6810              LDR      r0,[r2,#0]
0000ec  f4401080          ORR      r0,r0,#0x100000
0000f0  6010              STR      r0,[r2,#0]
0000f2  69d0              LDR      r0,[r2,#0x1c]
0000f4  f4401080          ORR      r0,r0,#0x100000
0000f8  61d0              STR      r0,[r2,#0x1c]
;;;99     CS_ON
0000fa  6810              LDR      r0,[r2,#0]
0000fc  f4401080          ORR      r0,r0,#0x100000
000100  6010              STR      r0,[r2,#0]
000102  69d0              LDR      r0,[r2,#0x1c]
000104  f4401080          ORR      r0,r0,#0x100000
000108  61d0              STR      r0,[r2,#0x1c]
;;;100    //temp_short[0]=PINSEL1;	
;;;101    //
;;;102    //IO0DIR|=1UL<<17;
;;;103    //IO0CLR|=1UL<<17;
;;;104    spi1(0x03);
00010a  2003              MOVS     r0,#3
00010c  f7fffffe          BL       spi1
;;;105    temp=*(((char*)&ADR)+1);
000110  f89d0001          LDRB     r0,[sp,#1]
;;;106    spi1(temp);
000114  f7fffffe          BL       spi1
;;;107    temp=*((char*)&ADR);
000118  f89d0000          LDRB     r0,[sp,#0]
;;;108    spi1(temp);
00011c  f7fffffe          BL       spi1
;;;109    temp=spi1(0xff);
000120  20ff              MOVS     r0,#0xff
000122  f7fffffe          BL       spi1
000126  4603              MOV      r3,r0
;;;110    //IO0SET|=1UL<<17;
;;;111    CS_OFF
000128  6810              LDR      r0,[r2,#0]
00012a  f4401080          ORR      r0,r0,#0x100000
00012e  6010              STR      r0,[r2,#0]
000130  6990              LDR      r0,[r2,#0x18]
000132  f4401080          ORR      r0,r0,#0x100000
000136  6190              STR      r0,[r2,#0x18]
;;;112    CS_OFF
000138  6810              LDR      r0,[r2,#0]
00013a  f4401080          ORR      r0,r0,#0x100000
00013e  6010              STR      r0,[r2,#0]
000140  6990              LDR      r0,[r2,#0x18]
000142  f4401080          ORR      r0,r0,#0x100000
000146  6190              STR      r0,[r2,#0x18]
;;;113    spi1_unconfig();
000148  f7fffffe          BL       spi1_unconfig
;;;114    return temp;
00014c  4618              MOV      r0,r3
;;;115    
;;;116    }
00014e  bd08              POP      {r3,pc}
;;;117    
                          ENDP

                  lc640_read_int PROC
;;;119    //Чтение из м-мы слова по адр. ADR
;;;120    int lc640_read_int(int ADR)
000150  e92d4001          PUSH.W   {r0,lr}
                  |L1.340|
;;;121    {
;;;122    char temp;
;;;123    int temp_i;
;;;124    
;;;125    
;;;126    //LPC_GPIO0->FIODIR|=0x00000002;
;;;127    //LPC_GPIO0->FIOSET|=0x00000002;
;;;128    
;;;129    
;;;130    
;;;131    while(lc640_rdsr()&0x01)
000154  f7fffffe          BL       lc640_rdsr
000158  07c0              LSLS     r0,r0,#31
00015a  d1fb              BNE      |L1.340|
;;;132    	{
;;;133    	}
;;;134    
;;;135    //lc640_rdsr();
;;;136    //IO0DIR_bit.P0_11=1;
;;;137    //IO0SET_bit.P0_11=1;
;;;138    spi1_config();
00015c  f7fffffe          BL       spi1_config
;;;139    CS_ON
000160  4aa9              LDR      r2,|L1.1032|
000162  6810              LDR      r0,[r2,#0]
000164  f4401080          ORR      r0,r0,#0x100000
000168  6010              STR      r0,[r2,#0]
00016a  69d0              LDR      r0,[r2,#0x1c]
00016c  f4401080          ORR      r0,r0,#0x100000
000170  61d0              STR      r0,[r2,#0x1c]
;;;140    spi1(0x03);
000172  2003              MOVS     r0,#3
000174  f7fffffe          BL       spi1
;;;141    temp=*(((char*)&ADR)+1);
000178  f89d0001          LDRB     r0,[sp,#1]
;;;142    spi1(temp);
00017c  f7fffffe          BL       spi1
;;;143    temp=*((char*)&ADR);
000180  f89d0000          LDRB     r0,[sp,#0]
;;;144    spi1(temp);
000184  f7fffffe          BL       spi1
;;;145    temp=spi1(0xff);
000188  20ff              MOVS     r0,#0xff
00018a  f7fffffe          BL       spi1
00018e  4603              MOV      r3,r0
;;;146    temp_i=spi1(0xff);
000190  20ff              MOVS     r0,#0xff
000192  f7fffffe          BL       spi1
;;;147    temp_i<<=8;
;;;148    temp_i+=temp;
000196  eb032300          ADD      r3,r3,r0,LSL #8
;;;149    CS_OFF
00019a  6810              LDR      r0,[r2,#0]
00019c  f4401080          ORR      r0,r0,#0x100000
0001a0  6010              STR      r0,[r2,#0]
0001a2  6990              LDR      r0,[r2,#0x18]
0001a4  f4401080          ORR      r0,r0,#0x100000
0001a8  6190              STR      r0,[r2,#0x18]
;;;150    CS_OFF
0001aa  6810              LDR      r0,[r2,#0]
0001ac  f4401080          ORR      r0,r0,#0x100000
0001b0  6010              STR      r0,[r2,#0]
0001b2  6990              LDR      r0,[r2,#0x18]
0001b4  f4401080          ORR      r0,r0,#0x100000
0001b8  6190              STR      r0,[r2,#0x18]
;;;151    spi1_unconfig();
0001ba  f7fffffe          BL       spi1_unconfig
;;;152    
;;;153    //LPC_GPIO0->FIOCLR|=0x00000002;
;;;154    return temp_i;
0001be  4618              MOV      r0,r3
;;;155    }
0001c0  bd08              POP      {r3,pc}
;;;156    
                          ENDP

                  lc640_read_long PROC
;;;158    //Чтение из м-мы 4 байт по адр. ADR
;;;159    long lc640_read_long(int ADR)
0001c2  b531              PUSH     {r0,r4,r5,lr}
                  |L1.452|
;;;160    {
;;;161    char temp0,temp1,temp2;
;;;162    long temp_i;
;;;163    while(lc640_rdsr()&0x01)
0001c4  f7fffffe          BL       lc640_rdsr
0001c8  07c0              LSLS     r0,r0,#31
0001ca  d1fb              BNE      |L1.452|
;;;164    	{
;;;165    	}
;;;166    spi1_config();
0001cc  f7fffffe          BL       spi1_config
;;;167    CS_ON
0001d0  4a8d              LDR      r2,|L1.1032|
0001d2  6810              LDR      r0,[r2,#0]
0001d4  f4401080          ORR      r0,r0,#0x100000
0001d8  6010              STR      r0,[r2,#0]
0001da  69d0              LDR      r0,[r2,#0x1c]
0001dc  f4401080          ORR      r0,r0,#0x100000
0001e0  61d0              STR      r0,[r2,#0x1c]
;;;168    spi1(0x03);
0001e2  2003              MOVS     r0,#3
0001e4  f7fffffe          BL       spi1
;;;169    temp0=*(((char*)&ADR)+1);
0001e8  f89d0001          LDRB     r0,[sp,#1]
;;;170    spi1(temp0);
0001ec  f7fffffe          BL       spi1
;;;171    temp0=*((char*)&ADR);
0001f0  f89d0000          LDRB     r0,[sp,#0]
;;;172    spi1(temp0);
0001f4  f7fffffe          BL       spi1
;;;173    temp0=spi1(0xff);
0001f8  20ff              MOVS     r0,#0xff
0001fa  f7fffffe          BL       spi1
0001fe  4603              MOV      r3,r0
;;;174    temp1=spi1(0xff);
000200  20ff              MOVS     r0,#0xff
000202  f7fffffe          BL       spi1
000206  4604              MOV      r4,r0
;;;175    temp2=spi1(0xff);
000208  20ff              MOVS     r0,#0xff
00020a  f7fffffe          BL       spi1
00020e  4605              MOV      r5,r0
;;;176    temp_i=spi1(0xff);
000210  20ff              MOVS     r0,#0xff
000212  f7fffffe          BL       spi1
;;;177    temp_i<<=8;
;;;178    temp_i+=temp2;
000216  eb052000          ADD      r0,r5,r0,LSL #8
;;;179    temp_i<<=8;
;;;180    temp_i+=temp1;
00021a  eb042000          ADD      r0,r4,r0,LSL #8
;;;181    temp_i<<=8;
;;;182    temp_i+=temp0;
00021e  eb032300          ADD      r3,r3,r0,LSL #8
;;;183    CS_OFF
000222  6810              LDR      r0,[r2,#0]
000224  f4401080          ORR      r0,r0,#0x100000
000228  6010              STR      r0,[r2,#0]
00022a  6990              LDR      r0,[r2,#0x18]
00022c  f4401080          ORR      r0,r0,#0x100000
000230  6190              STR      r0,[r2,#0x18]
;;;184    CS_OFF
000232  6810              LDR      r0,[r2,#0]
000234  f4401080          ORR      r0,r0,#0x100000
000238  6010              STR      r0,[r2,#0]
00023a  6990              LDR      r0,[r2,#0x18]
00023c  f4401080          ORR      r0,r0,#0x100000
000240  6190              STR      r0,[r2,#0x18]
;;;185    spi1_unconfig();
000242  f7fffffe          BL       spi1_unconfig
;;;186    return temp_i;
000246  4618              MOV      r0,r3
;;;187    }
000248  bd38              POP      {r3-r5,pc}
;;;188    
                          ENDP

                  lc640_read_long_ptr PROC
;;;190    //Чтение из м-мы 4 байт по адр. ADR
;;;191    void lc640_read_long_ptr(int ADR,char* out_ptr)
00024a  b513              PUSH     {r0,r1,r4,lr}
;;;192    {
00024c  ea4f0401          MOV.W    r4,r1
                  |L1.592|
;;;193    char temp0/*,temp1,temp2*/;
;;;194    //long temp_i;
;;;195    while(lc640_rdsr()&0x01)
000250  f7fffffe          BL       lc640_rdsr
000254  07c0              LSLS     r0,r0,#31
000256  d1fb              BNE      |L1.592|
;;;196    	{
;;;197    	}
;;;198    spi1_config();
000258  f7fffffe          BL       spi1_config
;;;199    CS_ON
00025c  4a6a              LDR      r2,|L1.1032|
00025e  6810              LDR      r0,[r2,#0]
000260  f4401080          ORR      r0,r0,#0x100000
000264  6010              STR      r0,[r2,#0]
000266  69d0              LDR      r0,[r2,#0x1c]
000268  f4401080          ORR      r0,r0,#0x100000
00026c  61d0              STR      r0,[r2,#0x1c]
;;;200    spi1(0x03);
00026e  2003              MOVS     r0,#3
000270  f7fffffe          BL       spi1
;;;201    temp0=*(((char*)&ADR)+1);
000274  f89d0001          LDRB     r0,[sp,#1]
;;;202    spi1(temp0);
000278  f7fffffe          BL       spi1
;;;203    temp0=*((char*)&ADR);
00027c  f89d0000          LDRB     r0,[sp,#0]
;;;204    spi1(temp0);
000280  f7fffffe          BL       spi1
;;;205    out_ptr[0]=spi1(0xff);
000284  20ff              MOVS     r0,#0xff
000286  f7fffffe          BL       spi1
00028a  7020              STRB     r0,[r4,#0]
;;;206    out_ptr[1]=spi1(0xff);
00028c  20ff              MOVS     r0,#0xff
00028e  f7fffffe          BL       spi1
000292  7060              STRB     r0,[r4,#1]
;;;207    out_ptr[2]=spi1(0xff);
000294  20ff              MOVS     r0,#0xff
000296  f7fffffe          BL       spi1
00029a  70a0              STRB     r0,[r4,#2]
;;;208    out_ptr[3]=spi1(0xff);
00029c  20ff              MOVS     r0,#0xff
00029e  f7fffffe          BL       spi1
0002a2  70e0              STRB     r0,[r4,#3]
;;;209    CS_OFF
0002a4  6810              LDR      r0,[r2,#0]
0002a6  f4401080          ORR      r0,r0,#0x100000
0002aa  6010              STR      r0,[r2,#0]
0002ac  6990              LDR      r0,[r2,#0x18]
0002ae  f4401080          ORR      r0,r0,#0x100000
0002b2  6190              STR      r0,[r2,#0x18]
;;;210    CS_OFF
0002b4  6810              LDR      r0,[r2,#0]
0002b6  f4401080          ORR      r0,r0,#0x100000
0002ba  6010              STR      r0,[r2,#0]
0002bc  6990              LDR      r0,[r2,#0x18]
0002be  f4401080          ORR      r0,r0,#0x100000
0002c2  6190              STR      r0,[r2,#0x18]
;;;211    spi1_unconfig();
0002c4  e8bd401c          POP      {r2-r4,lr}
0002c8  e7fe              B        spi1_unconfig
;;;212    }
;;;213    
                          ENDP

                  lc640_read_str PROC
;;;215    //Чтение из м-мы N байт по адр. ADR
;;;216    void lc640_read_str(int ADR, char* ram_ptr, char num)
0002ca  b577              PUSH     {r0-r2,r4-r6,lr}
;;;217    {
0002cc  460d              MOV      r5,r1
0002ce  4616              MOV      r6,r2
                  |L1.720|
;;;218    char temp0,i;
;;;219    while(lc640_rdsr()&0x01)
0002d0  f7fffffe          BL       lc640_rdsr
0002d4  07c0              LSLS     r0,r0,#31
0002d6  d1fb              BNE      |L1.720|
;;;220    	{
;;;221    	}
;;;222    spi1_config();
0002d8  f7fffffe          BL       spi1_config
;;;223    CS_ON
0002dc  4b4a              LDR      r3,|L1.1032|
0002de  6818              LDR      r0,[r3,#0]
0002e0  f4401080          ORR      r0,r0,#0x100000
0002e4  6018              STR      r0,[r3,#0]
0002e6  69d8              LDR      r0,[r3,#0x1c]
0002e8  f4401080          ORR      r0,r0,#0x100000
0002ec  61d8              STR      r0,[r3,#0x1c]
;;;224    spi1(0x03);
0002ee  2003              MOVS     r0,#3
0002f0  f7fffffe          BL       spi1
;;;225    temp0=*(((char*)&ADR)+1);
0002f4  f89d0001          LDRB     r0,[sp,#1]
;;;226    spi1(temp0);
0002f8  f7fffffe          BL       spi1
;;;227    temp0=*((char*)&ADR);
0002fc  f89d0000          LDRB     r0,[sp,#0]
;;;228    spi1(temp0);
000300  f7fffffe          BL       spi1
;;;229    
;;;230    for(i=0;i<num;i++)
000304  2400              MOVS     r4,#0
000306  e006              B        |L1.790|
                  |L1.776|
;;;231    	{
;;;232    	*ram_ptr++=spi1(0xff);
000308  20ff              MOVS     r0,#0xff
00030a  f7fffffe          BL       spi1
00030e  1c64              ADDS     r4,r4,#1              ;230
000310  f8050b01          STRB     r0,[r5],#1
000314  b2e4              UXTB     r4,r4                 ;230
                  |L1.790|
000316  42b4              CMP      r4,r6                 ;230
000318  d3f6              BCC      |L1.776|
;;;233    	}
;;;234    CS_OFF
00031a  6818              LDR      r0,[r3,#0]
00031c  f4401080          ORR      r0,r0,#0x100000
000320  6018              STR      r0,[r3,#0]
000322  6998              LDR      r0,[r3,#0x18]
000324  f4401080          ORR      r0,r0,#0x100000
000328  6198              STR      r0,[r3,#0x18]
;;;235    CS_OFF
00032a  6818              LDR      r0,[r3,#0]
00032c  f4401080          ORR      r0,r0,#0x100000
000330  6018              STR      r0,[r3,#0]
000332  6998              LDR      r0,[r3,#0x18]
000334  f4401080          ORR      r0,r0,#0x100000
000338  6198              STR      r0,[r3,#0x18]
;;;236    spi1_unconfig();
00033a  e8bd407e          POP      {r1-r6,lr}
00033e  e7fe              B        spi1_unconfig
;;;237    }
;;;238    
                          ENDP

                  lc640_write PROC
;;;240    //Запись байта in по адресу ADR
;;;241    char lc640_write(int ADR,char in)
000340  b513              PUSH     {r0,r1,r4,lr}
;;;242    {
000342  460c              MOV      r4,r1
                  |L1.836|
;;;243    char temp; 
;;;244    
;;;245    while(lc640_rdsr()&0x01)
000344  f7fffffe          BL       lc640_rdsr
000348  07c0              LSLS     r0,r0,#31
00034a  d1fb              BNE      |L1.836|
;;;246    	{
;;;247    	}
;;;248    lc640_wren();
00034c  f7fffffe          BL       lc640_wren
;;;249    spi1_config();	
000350  f7fffffe          BL       spi1_config
;;;250    CS_ON
000354  4a2c              LDR      r2,|L1.1032|
000356  6810              LDR      r0,[r2,#0]
000358  f4401080          ORR      r0,r0,#0x100000
00035c  6010              STR      r0,[r2,#0]
00035e  69d0              LDR      r0,[r2,#0x1c]
000360  f4401080          ORR      r0,r0,#0x100000
000364  61d0              STR      r0,[r2,#0x1c]
;;;251    spi1(0x02);
000366  2002              MOVS     r0,#2
000368  f7fffffe          BL       spi1
;;;252    temp=*(((char*)&ADR)+1);
00036c  f89d0001          LDRB     r0,[sp,#1]
;;;253    spi1(temp);
000370  f7fffffe          BL       spi1
;;;254    temp=*((char*)&ADR);
000374  f89d0000          LDRB     r0,[sp,#0]
;;;255    spi1(temp);
000378  f7fffffe          BL       spi1
;;;256    temp=spi1(in);
00037c  4620              MOV      r0,r4
00037e  f7fffffe          BL       spi1
000382  4603              MOV      r3,r0
;;;257    CS_OFF
000384  6810              LDR      r0,[r2,#0]
000386  f4401080          ORR      r0,r0,#0x100000
00038a  6010              STR      r0,[r2,#0]
00038c  6990              LDR      r0,[r2,#0x18]
00038e  f4401080          ORR      r0,r0,#0x100000
000392  6190              STR      r0,[r2,#0x18]
;;;258    CS_OFF
000394  6810              LDR      r0,[r2,#0]
000396  f4401080          ORR      r0,r0,#0x100000
00039a  6010              STR      r0,[r2,#0]
00039c  6990              LDR      r0,[r2,#0x18]
00039e  f4401080          ORR      r0,r0,#0x100000
0003a2  6190              STR      r0,[r2,#0x18]
;;;259    spi1_unconfig(); 
0003a4  f7fffffe          BL       spi1_unconfig
;;;260    return temp;
0003a8  4618              MOV      r0,r3
;;;261    }
0003aa  bd1c              POP      {r2-r4,pc}
;;;262    
                          ENDP

                  lc640_write_int PROC
;;;264    //Запись слова in по адресу ADR
;;;265    char lc640_write_int(short ADR,short in)
0003ac  e92d4003          PUSH.W   {r0,r1,lr}
                  |L1.944|
;;;266    {
;;;267    char temp; 
;;;268    while(lc640_rdsr()&0x01)
0003b0  f7fffffe          BL       lc640_rdsr
0003b4  07c0              LSLS     r0,r0,#31
0003b6  d1fb              BNE      |L1.944|
;;;269    	{
;;;270    	}
;;;271    lc640_wren();
0003b8  f7fffffe          BL       lc640_wren
;;;272    spi1_config();	
0003bc  f7fffffe          BL       spi1_config
;;;273    CS_ON
0003c0  4a11              LDR      r2,|L1.1032|
0003c2  6810              LDR      r0,[r2,#0]
0003c4  f4401080          ORR      r0,r0,#0x100000
0003c8  6010              STR      r0,[r2,#0]
0003ca  69d0              LDR      r0,[r2,#0x1c]
0003cc  f4401080          ORR      r0,r0,#0x100000
0003d0  61d0              STR      r0,[r2,#0x1c]
;;;274    spi1(0x02);
0003d2  2002              MOVS     r0,#2
0003d4  f7fffffe          BL       spi1
;;;275    temp=*(((char*)&ADR)+1);
0003d8  f89d0001          LDRB     r0,[sp,#1]
;;;276    spi1(temp);
0003dc  f7fffffe          BL       spi1
;;;277    temp=*((char*)&ADR);
0003e0  f89d0000          LDRB     r0,[sp,#0]
;;;278    spi1(temp);
0003e4  f7fffffe          BL       spi1
;;;279    temp=*((char*)&in);
0003e8  f89d0004          LDRB     r0,[sp,#4]
;;;280    spi1(temp);
0003ec  f7fffffe          BL       spi1
;;;281    temp=*(((char*)&in)+1);
0003f0  f89d3005          LDRB     r3,[sp,#5]
;;;282    spi1(temp);
0003f4  4618              MOV      r0,r3
0003f6  f7fffffe          BL       spi1
;;;283    CS_OFF
0003fa  6810              LDR      r0,[r2,#0]
0003fc  e006              B        |L1.1036|
0003fe  0000              DCW      0x0000
                  |L1.1024|
                          DCD      0x40020000
                  |L1.1028|
                          DCD      0x4002c000
                  |L1.1032|
                          DCD      0x2009c000
                  |L1.1036|
00040c  f4401080          ORR      r0,r0,#0x100000
000410  6010              STR      r0,[r2,#0]
000412  6990              LDR      r0,[r2,#0x18]
000414  f4401080          ORR      r0,r0,#0x100000
000418  6190              STR      r0,[r2,#0x18]
;;;284    CS_OFF
00041a  6810              LDR      r0,[r2,#0]
00041c  f4401080          ORR      r0,r0,#0x100000
000420  6010              STR      r0,[r2,#0]
000422  6990              LDR      r0,[r2,#0x18]
000424  f4401080          ORR      r0,r0,#0x100000
000428  6190              STR      r0,[r2,#0x18]
;;;285    spi1_unconfig();
00042a  f7fffffe          BL       spi1_unconfig
;;;286    
;;;287    
;;;288    /*
;;;289    while(lc640_rdsr()&0x01)
;;;290    	{
;;;291    	}
;;;292    lc640_wren();
;;;293    spi1_config();	
;;;294    CS_ON
;;;295    spi1(0x02);
;;;296    temp=EE_EE_WRITE_CNT/256;
;;;297    spi1(temp);
;;;298    temp=EE_EE_WRITE_CNT%256;
;;;299    spi1(temp);
;;;300    temp=(EE_WRITE_CNT+1)/256;
;;;301    spi1(temp);
;;;302    temp=(EE_WRITE_CNT+1)%256;
;;;303    spi1(temp);
;;;304    CS_OFF
;;;305    CS_OFF
;;;306    spi1_unconfig();
;;;307    */
;;;308    
;;;309    return temp;
00042e  4618              MOV      r0,r3
;;;310    }  
000430  bd0c              POP      {r2,r3,pc}
;;;311    
                          ENDP

                  lc640_write_long PROC
;;;313    //Запись 4 байт in по адресу ADR
;;;314    char lc640_write_long(int ADR,long in)
000432  b503              PUSH     {r0,r1,lr}
                  |L1.1076|
;;;315    {
;;;316    char temp; 
;;;317    
;;;318    while(lc640_rdsr()&0x01)
000434  f7fffffe          BL       lc640_rdsr
000438  07c0              LSLS     r0,r0,#31
00043a  d1fb              BNE      |L1.1076|
;;;319    	{
;;;320    	}
;;;321    lc640_wren();	
00043c  f7fffffe          BL       lc640_wren
;;;322    spi1_config();
000440  f7fffffe          BL       spi1_config
;;;323    CS_ON
000444  4a3c              LDR      r2,|L1.1336|
000446  6810              LDR      r0,[r2,#0]
000448  f4401080          ORR      r0,r0,#0x100000
00044c  6010              STR      r0,[r2,#0]
00044e  69d0              LDR      r0,[r2,#0x1c]
000450  f4401080          ORR      r0,r0,#0x100000
000454  61d0              STR      r0,[r2,#0x1c]
;;;324    spi1(0x02);
000456  2002              MOVS     r0,#2
000458  f7fffffe          BL       spi1
;;;325    temp=*(((char*)&ADR)+1);
00045c  f89d0001          LDRB     r0,[sp,#1]
;;;326    spi1(temp);
000460  f7fffffe          BL       spi1
;;;327    temp=*((char*)&ADR);
000464  f89d0000          LDRB     r0,[sp,#0]
;;;328    spi1(temp);
000468  f7fffffe          BL       spi1
;;;329    temp=*((char*)&in);
00046c  f89d0004          LDRB     r0,[sp,#4]
;;;330    spi1(temp);
000470  f7fffffe          BL       spi1
;;;331    temp=*(((char*)&in)+1);
000474  f89d0005          LDRB     r0,[sp,#5]
;;;332    spi1(temp);
000478  f7fffffe          BL       spi1
;;;333    temp=*(((char*)&in)+2);
00047c  f89d0006          LDRB     r0,[sp,#6]
;;;334    spi1(temp);
000480  f7fffffe          BL       spi1
;;;335    temp=*(((char*)&in)+3);
000484  f89d3007          LDRB     r3,[sp,#7]
;;;336    spi1(temp);           
000488  4618              MOV      r0,r3
00048a  f7fffffe          BL       spi1
;;;337    CS_OFF
00048e  6810              LDR      r0,[r2,#0]
000490  f4401080          ORR      r0,r0,#0x100000
000494  6010              STR      r0,[r2,#0]
000496  6990              LDR      r0,[r2,#0x18]
000498  f4401080          ORR      r0,r0,#0x100000
00049c  6190              STR      r0,[r2,#0x18]
;;;338    CS_OFF  
00049e  6810              LDR      r0,[r2,#0]
0004a0  f4401080          ORR      r0,r0,#0x100000
0004a4  6010              STR      r0,[r2,#0]
0004a6  6990              LDR      r0,[r2,#0x18]
0004a8  f4401080          ORR      r0,r0,#0x100000
0004ac  6190              STR      r0,[r2,#0x18]
;;;339    spi1_unconfig();
0004ae  f7fffffe          BL       spi1_unconfig
;;;340    return temp;
0004b2  4618              MOV      r0,r3
;;;341    }
0004b4  bd0c              POP      {r2,r3,pc}
;;;342    
                          ENDP

                  lc640_write_long_ptr PROC
;;;344    //Запись 4 байт in по адресу ADR
;;;345    char lc640_write_long_ptr(int ADR,char* in)
0004b6  b513              PUSH     {r0,r1,r4,lr}
;;;346    {
0004b8  ea4f0401          MOV.W    r4,r1
                  |L1.1212|
;;;347    char temp; 
;;;348    
;;;349    while(lc640_rdsr()&0x01)
0004bc  f7fffffe          BL       lc640_rdsr
0004c0  07c0              LSLS     r0,r0,#31
0004c2  d1fb              BNE      |L1.1212|
;;;350    	{
;;;351    	}
;;;352    lc640_wren();	
0004c4  f7fffffe          BL       lc640_wren
;;;353    spi1_config();
0004c8  f7fffffe          BL       spi1_config
;;;354    CS_ON
0004cc  4a1a              LDR      r2,|L1.1336|
0004ce  6810              LDR      r0,[r2,#0]
0004d0  f4401080          ORR      r0,r0,#0x100000
0004d4  6010              STR      r0,[r2,#0]
0004d6  69d0              LDR      r0,[r2,#0x1c]
0004d8  f4401080          ORR      r0,r0,#0x100000
0004dc  61d0              STR      r0,[r2,#0x1c]
;;;355    spi1(0x02);
0004de  2002              MOVS     r0,#2
0004e0  f7fffffe          BL       spi1
;;;356    temp=*(((char*)&ADR)+1);
0004e4  f89d0001          LDRB     r0,[sp,#1]
;;;357    spi1(temp);
0004e8  f7fffffe          BL       spi1
;;;358    temp=*((char*)&ADR);
0004ec  f89d0000          LDRB     r0,[sp,#0]
;;;359    spi1(temp);
0004f0  f7fffffe          BL       spi1
;;;360    temp=in[0];
0004f4  7820              LDRB     r0,[r4,#0]
;;;361    spi1(temp);
0004f6  f7fffffe          BL       spi1
;;;362    temp=in[1];
0004fa  7860              LDRB     r0,[r4,#1]
;;;363    spi1(temp);
0004fc  f7fffffe          BL       spi1
;;;364    temp=in[2];
000500  78a0              LDRB     r0,[r4,#2]
;;;365    spi1(temp);
000502  f7fffffe          BL       spi1
;;;366    temp=in[3];
000506  78e3              LDRB     r3,[r4,#3]
;;;367    spi1(temp);
000508  4618              MOV      r0,r3
00050a  f7fffffe          BL       spi1
;;;368    
;;;369    CS_OFF
00050e  6810              LDR      r0,[r2,#0]
000510  f4401080          ORR      r0,r0,#0x100000
000514  6010              STR      r0,[r2,#0]
000516  6990              LDR      r0,[r2,#0x18]
000518  f4401080          ORR      r0,r0,#0x100000
00051c  6190              STR      r0,[r2,#0x18]
;;;370    CS_OFF  
00051e  6810              LDR      r0,[r2,#0]
000520  f4401080          ORR      r0,r0,#0x100000
000524  6010              STR      r0,[r2,#0]
000526  6990              LDR      r0,[r2,#0x18]
000528  f4401080          ORR      r0,r0,#0x100000
00052c  6190              STR      r0,[r2,#0x18]
;;;371    spi1_unconfig();
00052e  f7fffffe          BL       spi1_unconfig
;;;372    return temp;
000532  4618              MOV      r0,r3
;;;373    }		
000534  bd1c              POP      {r2-r4,pc}
                          ENDP

000536  0000              DCW      0x0000
                  |L1.1336|
                          DCD      0x2009c000

;*** Start embedded assembler ***

#line 1 "25lc640.c"
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___9_25lc640_c_spi1____REV16|
#line 112 "C:\\Keil\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___9_25lc640_c_spi1____REV16| PROC
#line 113

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___9_25lc640_c_spi1____REVSH|
#line 130
|__asm___9_25lc640_c_spi1____REVSH| PROC
#line 131

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
