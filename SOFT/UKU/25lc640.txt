; generated by ARM C/C++ Compiler, 4.1 [Build 644]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\EXE\25lc640.o --asm_dir=.\ --list_dir=.\ --depend=.\EXE\25lc640.d --feedback=.\EXE\UKU2071x_GALV_IBv2.fed --cpu=Cortex-M3 --apcs=interwork -O3 -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\INC\NXP\LPC17xx -D__MICROLIB -DUKU2071x -DEXT_BOARD_V_2 --omf_browse=.\EXE\25lc640.crf 25lc640.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  spi1 PROC
;;;9      
;;;10     char spi1(char in)
000000  49ff              LDR      r1,|L1.1024|
;;;11     {
;;;12     
;;;13      
;;;14     
;;;15     LPC_SPI->SPDR=in;
000002  6088              STR      r0,[r1,#8]
                  |L1.4|
;;;16     while(!(LPC_SPI->SPSR&(1<<7)));
000004  6848              LDR      r0,[r1,#4]
000006  0600              LSLS     r0,r0,#24
000008  d5fc              BPL      |L1.4|
;;;17     return LPC_SPI->SPDR;
00000a  6888              LDR      r0,[r1,#8]
00000c  b2c0              UXTB     r0,r0
;;;18     
;;;19      
;;;20     
;;;21     }
00000e  4770              BX       lr
;;;22     
                          ENDP

                  spi1_config PROC
;;;26     //настройка SPI1
;;;27     void spi1_config(void)
000010  48fc              LDR      r0,|L1.1028|
;;;28     { 
;;;29     
;;;30     SET_REG( LPC_PINCON->PINSEL0, 3, 15*2, 2);
000012  6801              LDR      r1,[r0,#0]
000014  f0414140          ORR      r1,r1,#0xc0000000
000018  6001              STR      r1,[r0,#0]
;;;31     SET_REG( LPC_PINCON->PINSEL1, 0, (16-16)*2, 2);
00001a  6841              LDR      r1,[r0,#4]
00001c  f0210103          BIC      r1,r1,#3
000020  6041              STR      r1,[r0,#4]
;;;32     SET_REG( LPC_PINCON->PINSEL1, 3, (17-16)*2, 2);
000022  6841              LDR      r1,[r0,#4]
000024  f041010c          ORR      r1,r1,#0xc
000028  6041              STR      r1,[r0,#4]
;;;33     SET_REG( LPC_PINCON->PINSEL1, 3, (18-16)*2, 2); 
00002a  6841              LDR      r1,[r0,#4]
00002c  f0410130          ORR      r1,r1,#0x30
000030  6041              STR      r1,[r0,#4]
;;;34     /*
;;;35     S1SPCCR=100;
;;;36     S1SPCR=0x3f; */
;;;37     
;;;38     LPC_SPI->SPCCR=8;
000032  48f3              LDR      r0,|L1.1024|
000034  2108              MOVS     r1,#8
000036  60c1              STR      r1,[r0,#0xc]
;;;39     LPC_SPI->SPCR=0x20;
000038  2120              MOVS     r1,#0x20
00003a  6001              STR      r1,[r0,#0]
;;;40     }
00003c  4770              BX       lr
;;;41     
                          ENDP

                  spi1_unconfig PROC
;;;43     //выключение SPI1
;;;44     void spi1_unconfig(void)
00003e  48f1              LDR      r0,|L1.1028|
;;;45     { 
;;;46     
;;;47     SET_REG( LPC_PINCON->PINSEL0, 0, 15*2, 2);
000040  6801              LDR      r1,[r0,#0]
000042  f0214140          BIC      r1,r1,#0xc0000000
000046  6001              STR      r1,[r0,#0]
;;;48     SET_REG( LPC_PINCON->PINSEL1, 0, (16-16)*2, 2);
000048  6841              LDR      r1,[r0,#4]
00004a  f0210103          BIC      r1,r1,#3
00004e  6041              STR      r1,[r0,#4]
;;;49     SET_REG( LPC_PINCON->PINSEL1, 0, (17-16)*2, 2);
000050  6841              LDR      r1,[r0,#4]
000052  f021010c          BIC      r1,r1,#0xc
000056  6041              STR      r1,[r0,#4]
;;;50     SET_REG( LPC_PINCON->PINSEL1, 0, (18-16)*2, 2);
000058  6841              LDR      r1,[r0,#4]
00005a  f0210130          BIC      r1,r1,#0x30
00005e  6041              STR      r1,[r0,#4]
;;;51     
;;;52     LPC_SPI->SPCR=0x00;
000060  49e7              LDR      r1,|L1.1024|
000062  2000              MOVS     r0,#0
000064  6008              STR      r0,[r1,#0]
;;;53     }
000066  4770              BX       lr
;;;54     
                          ENDP

                  lc640_wren PROC
;;;56     //Разрешение записи
;;;57     void lc640_wren(void)
000068  b500              PUSH     {lr}
;;;58     {
;;;59     
;;;60     spi1_config();
00006a  f7fffffe          BL       spi1_config
;;;61     
;;;62     CS_ON
00006e  4ae6              LDR      r2,|L1.1032|
000070  6810              LDR      r0,[r2,#0]
000072  f4401080          ORR      r0,r0,#0x100000
000076  6010              STR      r0,[r2,#0]
000078  69d0              LDR      r0,[r2,#0x1c]
00007a  f4401080          ORR      r0,r0,#0x100000
00007e  61d0              STR      r0,[r2,#0x1c]
;;;63     
;;;64     spi1(0x06); 
000080  2006              MOVS     r0,#6
000082  f7fffffe          BL       spi1
;;;65     
;;;66     CS_OFF
000086  6810              LDR      r0,[r2,#0]
000088  f4401080          ORR      r0,r0,#0x100000
00008c  6010              STR      r0,[r2,#0]
00008e  6990              LDR      r0,[r2,#0x18]
000090  f4401080          ORR      r0,r0,#0x100000
000094  6190              STR      r0,[r2,#0x18]
;;;67     
;;;68     spi1_unconfig();
000096  f85deb04          POP      {lr}
00009a  e7fe              B        spi1_unconfig
;;;69     }
;;;70     
                          ENDP

                  lc640_rdsr PROC
;;;72     //Чтение из м-мы регистра состояния
;;;73     char lc640_rdsr(void)
00009c  b500              PUSH     {lr}
;;;74     {
;;;75     char temp;
;;;76     
;;;77     spi1_config();
00009e  f7fffffe          BL       spi1_config
;;;78     CS_ON
0000a2  4ad9              LDR      r2,|L1.1032|
0000a4  6810              LDR      r0,[r2,#0]
0000a6  f4401080          ORR      r0,r0,#0x100000
0000aa  6010              STR      r0,[r2,#0]
0000ac  69d0              LDR      r0,[r2,#0x1c]
0000ae  f4401080          ORR      r0,r0,#0x100000
0000b2  61d0              STR      r0,[r2,#0x1c]
;;;79     spi1(0x05);
0000b4  2005              MOVS     r0,#5
0000b6  f7fffffe          BL       spi1
;;;80     temp=spi1(0xff);
0000ba  20ff              MOVS     r0,#0xff
0000bc  f7fffffe          BL       spi1
0000c0  4603              MOV      r3,r0
;;;81     CS_OFF
0000c2  6810              LDR      r0,[r2,#0]
0000c4  f4401080          ORR      r0,r0,#0x100000
0000c8  6010              STR      r0,[r2,#0]
0000ca  6990              LDR      r0,[r2,#0x18]
0000cc  f4401080          ORR      r0,r0,#0x100000
0000d0  6190              STR      r0,[r2,#0x18]
;;;82     spi1_unconfig();
0000d2  f7fffffe          BL       spi1_unconfig
;;;83     return temp;
0000d6  4618              MOV      r0,r3
;;;84     }
0000d8  bd00              POP      {pc}
;;;85     
                          ENDP

                  lc640_read PROC
;;;87     //Чтение из м-мы байта по адр. ADR
;;;88     int lc640_read(int ADR)
0000da  b501              PUSH     {r0,lr}
                  |L1.220|
;;;89     {
;;;90     int temp;
;;;91     temp=0;
;;;92     
;;;93     while(lc640_rdsr()&0x01)
0000dc  f7fffffe          BL       lc640_rdsr
0000e0  07c0              LSLS     r0,r0,#31
0000e2  d1fb              BNE      |L1.220|
;;;94     	{
;;;95     	}
;;;96     spi1_config();
0000e4  f7fffffe          BL       spi1_config
;;;97     CS_ON
0000e8  4ac7              LDR      r2,|L1.1032|
0000ea  6810              LDR      r0,[r2,#0]
0000ec  f4401080          ORR      r0,r0,#0x100000
0000f0  6010              STR      r0,[r2,#0]
0000f2  69d0              LDR      r0,[r2,#0x1c]
0000f4  f4401080          ORR      r0,r0,#0x100000
0000f8  61d0              STR      r0,[r2,#0x1c]
;;;98     CS_ON
0000fa  6810              LDR      r0,[r2,#0]
0000fc  f4401080          ORR      r0,r0,#0x100000
000100  6010              STR      r0,[r2,#0]
000102  69d0              LDR      r0,[r2,#0x1c]
000104  f4401080          ORR      r0,r0,#0x100000
000108  61d0              STR      r0,[r2,#0x1c]
;;;99     //temp_short[0]=PINSEL1;	
;;;100    //
;;;101    //IO0DIR|=1UL<<17;
;;;102    //IO0CLR|=1UL<<17;
;;;103    spi1(0x03);
00010a  2003              MOVS     r0,#3
00010c  f7fffffe          BL       spi1
;;;104    temp=*(((char*)&ADR)+1);
000110  f89d0001          LDRB     r0,[sp,#1]
;;;105    spi1(temp);
000114  f7fffffe          BL       spi1
;;;106    temp=*((char*)&ADR);
000118  f89d0000          LDRB     r0,[sp,#0]
;;;107    spi1(temp);
00011c  f7fffffe          BL       spi1
;;;108    temp=spi1(0xff);
000120  20ff              MOVS     r0,#0xff
000122  f7fffffe          BL       spi1
000126  4603              MOV      r3,r0
;;;109    //IO0SET|=1UL<<17;
;;;110    CS_OFF
000128  6810              LDR      r0,[r2,#0]
00012a  f4401080          ORR      r0,r0,#0x100000
00012e  6010              STR      r0,[r2,#0]
000130  6990              LDR      r0,[r2,#0x18]
000132  f4401080          ORR      r0,r0,#0x100000
000136  6190              STR      r0,[r2,#0x18]
;;;111    CS_OFF
000138  6810              LDR      r0,[r2,#0]
00013a  f4401080          ORR      r0,r0,#0x100000
00013e  6010              STR      r0,[r2,#0]
000140  6990              LDR      r0,[r2,#0x18]
000142  f4401080          ORR      r0,r0,#0x100000
000146  6190              STR      r0,[r2,#0x18]
;;;112    spi1_unconfig();
000148  f7fffffe          BL       spi1_unconfig
;;;113    return temp;
00014c  4618              MOV      r0,r3
;;;114    
;;;115    }
00014e  bd08              POP      {r3,pc}
;;;116    
                          ENDP

                  lc640_read_int PROC
;;;118    //Чтение из м-мы слова по адр. ADR
;;;119    int lc640_read_int(int ADR)
000150  e92d4001          PUSH.W   {r0,lr}
                  |L1.340|
;;;120    {
;;;121    char temp;
;;;122    int temp_i;
;;;123    
;;;124    
;;;125    //LPC_GPIO0->FIODIR|=0x00000002;
;;;126    //LPC_GPIO0->FIOSET|=0x00000002;
;;;127    
;;;128    
;;;129    
;;;130    while(lc640_rdsr()&0x01)
000154  f7fffffe          BL       lc640_rdsr
000158  07c0              LSLS     r0,r0,#31
00015a  d1fb              BNE      |L1.340|
;;;131    	{
;;;132    	}
;;;133    
;;;134    //lc640_rdsr();
;;;135    //IO0DIR_bit.P0_11=1;
;;;136    //IO0SET_bit.P0_11=1;
;;;137    spi1_config();
00015c  f7fffffe          BL       spi1_config
;;;138    CS_ON
000160  4aa9              LDR      r2,|L1.1032|
000162  6810              LDR      r0,[r2,#0]
000164  f4401080          ORR      r0,r0,#0x100000
000168  6010              STR      r0,[r2,#0]
00016a  69d0              LDR      r0,[r2,#0x1c]
00016c  f4401080          ORR      r0,r0,#0x100000
000170  61d0              STR      r0,[r2,#0x1c]
;;;139    spi1(0x03);
000172  2003              MOVS     r0,#3
000174  f7fffffe          BL       spi1
;;;140    temp=*(((char*)&ADR)+1);
000178  f89d0001          LDRB     r0,[sp,#1]
;;;141    spi1(temp);
00017c  f7fffffe          BL       spi1
;;;142    temp=*((char*)&ADR);
000180  f89d0000          LDRB     r0,[sp,#0]
;;;143    spi1(temp);
000184  f7fffffe          BL       spi1
;;;144    temp=spi1(0xff);
000188  20ff              MOVS     r0,#0xff
00018a  f7fffffe          BL       spi1
00018e  4603              MOV      r3,r0
;;;145    temp_i=spi1(0xff);
000190  20ff              MOVS     r0,#0xff
000192  f7fffffe          BL       spi1
;;;146    temp_i<<=8;
;;;147    temp_i+=temp;
000196  eb032300          ADD      r3,r3,r0,LSL #8
;;;148    CS_OFF
00019a  6810              LDR      r0,[r2,#0]
00019c  f4401080          ORR      r0,r0,#0x100000
0001a0  6010              STR      r0,[r2,#0]
0001a2  6990              LDR      r0,[r2,#0x18]
0001a4  f4401080          ORR      r0,r0,#0x100000
0001a8  6190              STR      r0,[r2,#0x18]
;;;149    CS_OFF
0001aa  6810              LDR      r0,[r2,#0]
0001ac  f4401080          ORR      r0,r0,#0x100000
0001b0  6010              STR      r0,[r2,#0]
0001b2  6990              LDR      r0,[r2,#0x18]
0001b4  f4401080          ORR      r0,r0,#0x100000
0001b8  6190              STR      r0,[r2,#0x18]
;;;150    spi1_unconfig();
0001ba  f7fffffe          BL       spi1_unconfig
;;;151    
;;;152    //LPC_GPIO0->FIOCLR|=0x00000002;
;;;153    return temp_i;
0001be  4618              MOV      r0,r3
;;;154    }
0001c0  bd08              POP      {r3,pc}
;;;155    
                          ENDP

                  lc640_read_long PROC
;;;157    //Чтение из м-мы 4 байт по адр. ADR
;;;158    long lc640_read_long(int ADR)
0001c2  b531              PUSH     {r0,r4,r5,lr}
                  |L1.452|
;;;159    {
;;;160    char temp0,temp1,temp2;
;;;161    long temp_i;
;;;162    while(lc640_rdsr()&0x01)
0001c4  f7fffffe          BL       lc640_rdsr
0001c8  07c0              LSLS     r0,r0,#31
0001ca  d1fb              BNE      |L1.452|
;;;163    	{
;;;164    	}
;;;165    spi1_config();
0001cc  f7fffffe          BL       spi1_config
;;;166    CS_ON
0001d0  4a8d              LDR      r2,|L1.1032|
0001d2  6810              LDR      r0,[r2,#0]
0001d4  f4401080          ORR      r0,r0,#0x100000
0001d8  6010              STR      r0,[r2,#0]
0001da  69d0              LDR      r0,[r2,#0x1c]
0001dc  f4401080          ORR      r0,r0,#0x100000
0001e0  61d0              STR      r0,[r2,#0x1c]
;;;167    spi1(0x03);
0001e2  2003              MOVS     r0,#3
0001e4  f7fffffe          BL       spi1
;;;168    temp0=*(((char*)&ADR)+1);
0001e8  f89d0001          LDRB     r0,[sp,#1]
;;;169    spi1(temp0);
0001ec  f7fffffe          BL       spi1
;;;170    temp0=*((char*)&ADR);
0001f0  f89d0000          LDRB     r0,[sp,#0]
;;;171    spi1(temp0);
0001f4  f7fffffe          BL       spi1
;;;172    temp0=spi1(0xff);
0001f8  20ff              MOVS     r0,#0xff
0001fa  f7fffffe          BL       spi1
0001fe  4603              MOV      r3,r0
;;;173    temp1=spi1(0xff);
000200  20ff              MOVS     r0,#0xff
000202  f7fffffe          BL       spi1
000206  4604              MOV      r4,r0
;;;174    temp2=spi1(0xff);
000208  20ff              MOVS     r0,#0xff
00020a  f7fffffe          BL       spi1
00020e  4605              MOV      r5,r0
;;;175    temp_i=spi1(0xff);
000210  20ff              MOVS     r0,#0xff
000212  f7fffffe          BL       spi1
;;;176    temp_i<<=8;
;;;177    temp_i+=temp2;
000216  eb052000          ADD      r0,r5,r0,LSL #8
;;;178    temp_i<<=8;
;;;179    temp_i+=temp1;
00021a  eb042000          ADD      r0,r4,r0,LSL #8
;;;180    temp_i<<=8;
;;;181    temp_i+=temp0;
00021e  eb032300          ADD      r3,r3,r0,LSL #8
;;;182    CS_OFF
000222  6810              LDR      r0,[r2,#0]
000224  f4401080          ORR      r0,r0,#0x100000
000228  6010              STR      r0,[r2,#0]
00022a  6990              LDR      r0,[r2,#0x18]
00022c  f4401080          ORR      r0,r0,#0x100000
000230  6190              STR      r0,[r2,#0x18]
;;;183    CS_OFF
000232  6810              LDR      r0,[r2,#0]
000234  f4401080          ORR      r0,r0,#0x100000
000238  6010              STR      r0,[r2,#0]
00023a  6990              LDR      r0,[r2,#0x18]
00023c  f4401080          ORR      r0,r0,#0x100000
000240  6190              STR      r0,[r2,#0x18]
;;;184    spi1_unconfig();
000242  f7fffffe          BL       spi1_unconfig
;;;185    return temp_i;
000246  4618              MOV      r0,r3
;;;186    }
000248  bd38              POP      {r3-r5,pc}
;;;187    
                          ENDP

                  lc640_read_long_ptr PROC
;;;189    //Чтение из м-мы 4 байт по адр. ADR
;;;190    void lc640_read_long_ptr(int ADR,char* out_ptr)
00024a  b513              PUSH     {r0,r1,r4,lr}
;;;191    {
00024c  ea4f0401          MOV.W    r4,r1
                  |L1.592|
;;;192    char temp0/*,temp1,temp2*/;
;;;193    //long temp_i;
;;;194    while(lc640_rdsr()&0x01)
000250  f7fffffe          BL       lc640_rdsr
000254  07c0              LSLS     r0,r0,#31
000256  d1fb              BNE      |L1.592|
;;;195    	{
;;;196    	}
;;;197    spi1_config();
000258  f7fffffe          BL       spi1_config
;;;198    CS_ON
00025c  4a6a              LDR      r2,|L1.1032|
00025e  6810              LDR      r0,[r2,#0]
000260  f4401080          ORR      r0,r0,#0x100000
000264  6010              STR      r0,[r2,#0]
000266  69d0              LDR      r0,[r2,#0x1c]
000268  f4401080          ORR      r0,r0,#0x100000
00026c  61d0              STR      r0,[r2,#0x1c]
;;;199    spi1(0x03);
00026e  2003              MOVS     r0,#3
000270  f7fffffe          BL       spi1
;;;200    temp0=*(((char*)&ADR)+1);
000274  f89d0001          LDRB     r0,[sp,#1]
;;;201    spi1(temp0);
000278  f7fffffe          BL       spi1
;;;202    temp0=*((char*)&ADR);
00027c  f89d0000          LDRB     r0,[sp,#0]
;;;203    spi1(temp0);
000280  f7fffffe          BL       spi1
;;;204    out_ptr[0]=spi1(0xff);
000284  20ff              MOVS     r0,#0xff
000286  f7fffffe          BL       spi1
00028a  7020              STRB     r0,[r4,#0]
;;;205    out_ptr[1]=spi1(0xff);
00028c  20ff              MOVS     r0,#0xff
00028e  f7fffffe          BL       spi1
000292  7060              STRB     r0,[r4,#1]
;;;206    out_ptr[2]=spi1(0xff);
000294  20ff              MOVS     r0,#0xff
000296  f7fffffe          BL       spi1
00029a  70a0              STRB     r0,[r4,#2]
;;;207    out_ptr[3]=spi1(0xff);
00029c  20ff              MOVS     r0,#0xff
00029e  f7fffffe          BL       spi1
0002a2  70e0              STRB     r0,[r4,#3]
;;;208    CS_OFF
0002a4  6810              LDR      r0,[r2,#0]
0002a6  f4401080          ORR      r0,r0,#0x100000
0002aa  6010              STR      r0,[r2,#0]
0002ac  6990              LDR      r0,[r2,#0x18]
0002ae  f4401080          ORR      r0,r0,#0x100000
0002b2  6190              STR      r0,[r2,#0x18]
;;;209    CS_OFF
0002b4  6810              LDR      r0,[r2,#0]
0002b6  f4401080          ORR      r0,r0,#0x100000
0002ba  6010              STR      r0,[r2,#0]
0002bc  6990              LDR      r0,[r2,#0x18]
0002be  f4401080          ORR      r0,r0,#0x100000
0002c2  6190              STR      r0,[r2,#0x18]
;;;210    spi1_unconfig();
0002c4  e8bd401c          POP      {r2-r4,lr}
0002c8  e7fe              B        spi1_unconfig
;;;211    }
;;;212    
                          ENDP

                  lc640_write_int PROC
;;;263    //Запись слова in по адресу ADR
;;;264    char lc640_write_int(short ADR,short in)
0002ca  b503              PUSH     {r0,r1,lr}
                  |L1.716|
;;;265    {
;;;266    char temp; 
;;;267    while(lc640_rdsr()&0x01)
0002cc  f7fffffe          BL       lc640_rdsr
0002d0  07c0              LSLS     r0,r0,#31
0002d2  d1fb              BNE      |L1.716|
;;;268    	{
;;;269    	}
;;;270    lc640_wren();
0002d4  f7fffffe          BL       lc640_wren
;;;271    spi1_config();	
0002d8  f7fffffe          BL       spi1_config
;;;272    CS_ON
0002dc  4a4a              LDR      r2,|L1.1032|
0002de  6810              LDR      r0,[r2,#0]
0002e0  f4401080          ORR      r0,r0,#0x100000
0002e4  6010              STR      r0,[r2,#0]
0002e6  69d0              LDR      r0,[r2,#0x1c]
0002e8  f4401080          ORR      r0,r0,#0x100000
0002ec  61d0              STR      r0,[r2,#0x1c]
;;;273    spi1(0x02);
0002ee  2002              MOVS     r0,#2
0002f0  f7fffffe          BL       spi1
;;;274    temp=*(((char*)&ADR)+1);
0002f4  f89d0001          LDRB     r0,[sp,#1]
;;;275    spi1(temp);
0002f8  f7fffffe          BL       spi1
;;;276    temp=*((char*)&ADR);
0002fc  f89d0000          LDRB     r0,[sp,#0]
;;;277    spi1(temp);
000300  f7fffffe          BL       spi1
;;;278    temp=*((char*)&in);
000304  f89d0004          LDRB     r0,[sp,#4]
;;;279    spi1(temp);
000308  f7fffffe          BL       spi1
;;;280    temp=*(((char*)&in)+1);
00030c  f89d3005          LDRB     r3,[sp,#5]
;;;281    spi1(temp);
000310  4618              MOV      r0,r3
000312  f7fffffe          BL       spi1
;;;282    CS_OFF
000316  6810              LDR      r0,[r2,#0]
000318  f4401080          ORR      r0,r0,#0x100000
00031c  6010              STR      r0,[r2,#0]
00031e  6990              LDR      r0,[r2,#0x18]
000320  f4401080          ORR      r0,r0,#0x100000
000324  6190              STR      r0,[r2,#0x18]
;;;283    CS_OFF
000326  6810              LDR      r0,[r2,#0]
000328  f4401080          ORR      r0,r0,#0x100000
00032c  6010              STR      r0,[r2,#0]
00032e  6990              LDR      r0,[r2,#0x18]
000330  f4401080          ORR      r0,r0,#0x100000
000334  6190              STR      r0,[r2,#0x18]
;;;284    spi1_unconfig();
000336  f7fffffe          BL       spi1_unconfig
;;;285    return temp;
00033a  4618              MOV      r0,r3
;;;286    }  
00033c  bd0c              POP      {r2,r3,pc}
;;;287    
                          ENDP

                  lc640_write_long PROC
;;;289    //Запись 4 байт in по адресу ADR
;;;290    char lc640_write_long(int ADR,long in)
00033e  b503              PUSH     {r0,r1,lr}
                  |L1.832|
;;;291    {
;;;292    char temp; 
;;;293    
;;;294    while(lc640_rdsr()&0x01)
000340  f7fffffe          BL       lc640_rdsr
000344  07c0              LSLS     r0,r0,#31
000346  d1fb              BNE      |L1.832|
;;;295    	{
;;;296    	}
;;;297    lc640_wren();	
000348  f7fffffe          BL       lc640_wren
;;;298    spi1_config();
00034c  f7fffffe          BL       spi1_config
;;;299    CS_ON
000350  4a2d              LDR      r2,|L1.1032|
000352  6810              LDR      r0,[r2,#0]
000354  f4401080          ORR      r0,r0,#0x100000
000358  6010              STR      r0,[r2,#0]
00035a  69d0              LDR      r0,[r2,#0x1c]
00035c  f4401080          ORR      r0,r0,#0x100000
000360  61d0              STR      r0,[r2,#0x1c]
;;;300    spi1(0x02);
000362  2002              MOVS     r0,#2
000364  f7fffffe          BL       spi1
;;;301    temp=*(((char*)&ADR)+1);
000368  f89d0001          LDRB     r0,[sp,#1]
;;;302    spi1(temp);
00036c  f7fffffe          BL       spi1
;;;303    temp=*((char*)&ADR);
000370  f89d0000          LDRB     r0,[sp,#0]
;;;304    spi1(temp);
000374  f7fffffe          BL       spi1
;;;305    temp=*((char*)&in);
000378  f89d0004          LDRB     r0,[sp,#4]
;;;306    spi1(temp);
00037c  f7fffffe          BL       spi1
;;;307    temp=*(((char*)&in)+1);
000380  f89d0005          LDRB     r0,[sp,#5]
;;;308    spi1(temp);
000384  f7fffffe          BL       spi1
;;;309    temp=*(((char*)&in)+2);
000388  f89d0006          LDRB     r0,[sp,#6]
;;;310    spi1(temp);
00038c  f7fffffe          BL       spi1
;;;311    temp=*(((char*)&in)+3);
000390  f89d3007          LDRB     r3,[sp,#7]
;;;312    spi1(temp);           
000394  4618              MOV      r0,r3
000396  f7fffffe          BL       spi1
;;;313    CS_OFF
00039a  6810              LDR      r0,[r2,#0]
00039c  f4401080          ORR      r0,r0,#0x100000
0003a0  6010              STR      r0,[r2,#0]
0003a2  6990              LDR      r0,[r2,#0x18]
0003a4  f4401080          ORR      r0,r0,#0x100000
0003a8  6190              STR      r0,[r2,#0x18]
;;;314    CS_OFF  
0003aa  6810              LDR      r0,[r2,#0]
0003ac  f4401080          ORR      r0,r0,#0x100000
0003b0  6010              STR      r0,[r2,#0]
0003b2  6990              LDR      r0,[r2,#0x18]
0003b4  f4401080          ORR      r0,r0,#0x100000
0003b8  6190              STR      r0,[r2,#0x18]
;;;315    spi1_unconfig();
0003ba  f7fffffe          BL       spi1_unconfig
;;;316    return temp;
0003be  4618              MOV      r0,r3
;;;317    }
0003c0  bd0c              POP      {r2,r3,pc}
;;;318    
                          ENDP

                  lc640_write_long_ptr PROC
;;;320    //Запись 4 байт in по адресу ADR
;;;321    char lc640_write_long_ptr(int ADR,char* in)
0003c2  b513              PUSH     {r0,r1,r4,lr}
;;;322    {
0003c4  ea4f0401          MOV.W    r4,r1
                  |L1.968|
;;;323    char temp; 
;;;324    
;;;325    while(lc640_rdsr()&0x01)
0003c8  f7fffffe          BL       lc640_rdsr
0003cc  07c0              LSLS     r0,r0,#31
0003ce  d1fb              BNE      |L1.968|
;;;326    	{
;;;327    	}
;;;328    lc640_wren();	
0003d0  f7fffffe          BL       lc640_wren
;;;329    spi1_config();
0003d4  f7fffffe          BL       spi1_config
;;;330    CS_ON
0003d8  4a0b              LDR      r2,|L1.1032|
0003da  6810              LDR      r0,[r2,#0]
0003dc  f4401080          ORR      r0,r0,#0x100000
0003e0  6010              STR      r0,[r2,#0]
0003e2  69d0              LDR      r0,[r2,#0x1c]
0003e4  f4401080          ORR      r0,r0,#0x100000
0003e8  61d0              STR      r0,[r2,#0x1c]
;;;331    spi1(0x02);
0003ea  2002              MOVS     r0,#2
0003ec  f7fffffe          BL       spi1
;;;332    temp=*(((char*)&ADR)+1);
0003f0  f89d0001          LDRB     r0,[sp,#1]
;;;333    spi1(temp);
0003f4  f7fffffe          BL       spi1
;;;334    temp=*((char*)&ADR);
0003f8  f89d0000          LDRB     r0,[sp,#0]
;;;335    spi1(temp);
0003fc  e006              B        |L1.1036|
0003fe  0000              DCW      0x0000
                  |L1.1024|
                          DCD      0x40020000
                  |L1.1028|
                          DCD      0x4002c000
                  |L1.1032|
                          DCD      0x2009c000
                  |L1.1036|
00040c  f7fffffe          BL       spi1
;;;336    temp=in[0];
000410  7820              LDRB     r0,[r4,#0]
;;;337    spi1(temp);
000412  f7fffffe          BL       spi1
;;;338    temp=in[1];
000416  7860              LDRB     r0,[r4,#1]
;;;339    spi1(temp);
000418  f7fffffe          BL       spi1
;;;340    temp=in[2];
00041c  78a0              LDRB     r0,[r4,#2]
;;;341    spi1(temp);
00041e  f7fffffe          BL       spi1
;;;342    temp=in[3];
000422  78e3              LDRB     r3,[r4,#3]
;;;343    spi1(temp);
000424  4618              MOV      r0,r3
000426  f7fffffe          BL       spi1
;;;344    
;;;345    CS_OFF
00042a  6810              LDR      r0,[r2,#0]
00042c  f4401080          ORR      r0,r0,#0x100000
000430  6010              STR      r0,[r2,#0]
000432  6990              LDR      r0,[r2,#0x18]
000434  f4401080          ORR      r0,r0,#0x100000
000438  6190              STR      r0,[r2,#0x18]
;;;346    CS_OFF  
00043a  6810              LDR      r0,[r2,#0]
00043c  f4401080          ORR      r0,r0,#0x100000
000440  6010              STR      r0,[r2,#0]
000442  6990              LDR      r0,[r2,#0x18]
000444  f4401080          ORR      r0,r0,#0x100000
000448  6190              STR      r0,[r2,#0x18]
;;;347    spi1_unconfig();
00044a  f7fffffe          BL       spi1_unconfig
;;;348    return temp;
00044e  4618              MOV      r0,r3
;;;349    }		
000450  bd1c              POP      {r2-r4,pc}
                          ENDP


                          AREA ||area_number.2||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.2||, ||.text||
                  lc640_read_str PROC
;;;9      
;;;10     char spi1(char in)
000000  b577              PUSH     {r0-r2,r4-r6,lr}
;;;11     {
;;;12     
;;;13      
;;;14     
;;;15     LPC_SPI->SPDR=in;
000002  460d              MOV      r5,r1
;;;16     while(!(LPC_SPI->SPSR&(1<<7)));
000004  ea4f0602          MOV.W    r6,r2
                  |L2.8|
000008  f7fffffe          BL       lc640_rdsr
;;;17     return LPC_SPI->SPDR;
00000c  07c0              LSLS     r0,r0,#31
;;;18     
;;;19      
;;;20     
;;;21     }
00000e  d1fb              BNE      |L2.8|
000010  f7fffffe          BL       spi1_config
000014  4b19              LDR      r3,|L2.124|
000016  6818              LDR      r0,[r3,#0]
000018  f4401080          ORR      r0,r0,#0x100000
00001c  6018              STR      r0,[r3,#0]
00001e  69d8              LDR      r0,[r3,#0x1c]
000020  f4401080          ORR      r0,r0,#0x100000
000024  61d8              STR      r0,[r3,#0x1c]
000026  2003              MOVS     r0,#3
000028  f7fffffe          BL       spi1
00002c  f89d0001          LDRB     r0,[sp,#1]
000030  f7fffffe          BL       spi1
000034  f89d0000          LDRB     r0,[sp,#0]
000038  f7fffffe          BL       spi1
00003c  2400              MOVS     r4,#0
00003e  e006              B        |L2.78|
                  |L2.64|
000040  20ff              MOVS     r0,#0xff
000042  f7fffffe          BL       spi1
000046  1c64              ADDS     r4,r4,#1
000048  f8050b01          STRB     r0,[r5],#1
00004c  b2e4              UXTB     r4,r4
                  |L2.78|
00004e  42b4              CMP      r4,r6
000050  d3f6              BCC      |L2.64|
000052  6818              LDR      r0,[r3,#0]
000054  f4401080          ORR      r0,r0,#0x100000
000058  6018              STR      r0,[r3,#0]
00005a  6998              LDR      r0,[r3,#0x18]
00005c  f4401080          ORR      r0,r0,#0x100000
000060  6198              STR      r0,[r3,#0x18]
000062  6818              LDR      r0,[r3,#0]
000064  f4401080          ORR      r0,r0,#0x100000
000068  6018              STR      r0,[r3,#0]
00006a  6998              LDR      r0,[r3,#0x18]
00006c  f4401080          ORR      r0,r0,#0x100000
000070  6198              STR      r0,[r3,#0x18]
000072  e8bd407e          POP      {r1-r6,lr}
000076  f7ffbffe          B.W      spi1_unconfig
;;;22     
                          ENDP

00007a  0000              DCW      0x0000
                  |L2.124|
                          DCD      0x2009c000

                          AREA ||area_number.3||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.3||, ||.text||
                  lc640_write PROC
;;;9      
;;;10     char spi1(char in)
000000  b513              PUSH     {r0,r1,r4,lr}
;;;11     {
;;;12     
;;;13      
;;;14     
;;;15     LPC_SPI->SPDR=in;
000002  460c              MOV      r4,r1
                  |L3.4|
;;;16     while(!(LPC_SPI->SPSR&(1<<7)));
000004  f7fffffe          BL       lc640_rdsr
000008  07c0              LSLS     r0,r0,#31
;;;17     return LPC_SPI->SPDR;
00000a  d1fb              BNE      |L3.4|
00000c  f7fffffe          BL       lc640_wren
;;;18     
;;;19      
;;;20     
;;;21     }
000010  f7fffffe          BL       spi1_config
000014  4a15              LDR      r2,|L3.108|
000016  6810              LDR      r0,[r2,#0]
000018  f4401080          ORR      r0,r0,#0x100000
00001c  6010              STR      r0,[r2,#0]
00001e  69d0              LDR      r0,[r2,#0x1c]
000020  f4401080          ORR      r0,r0,#0x100000
000024  61d0              STR      r0,[r2,#0x1c]
000026  2002              MOVS     r0,#2
000028  f7fffffe          BL       spi1
00002c  f89d0001          LDRB     r0,[sp,#1]
000030  f7fffffe          BL       spi1
000034  f89d0000          LDRB     r0,[sp,#0]
000038  f7fffffe          BL       spi1
00003c  4620              MOV      r0,r4
00003e  f7fffffe          BL       spi1
000042  4603              MOV      r3,r0
000044  6810              LDR      r0,[r2,#0]
000046  f4401080          ORR      r0,r0,#0x100000
00004a  6010              STR      r0,[r2,#0]
00004c  6990              LDR      r0,[r2,#0x18]
00004e  f4401080          ORR      r0,r0,#0x100000
000052  6190              STR      r0,[r2,#0x18]
000054  6810              LDR      r0,[r2,#0]
000056  f4401080          ORR      r0,r0,#0x100000
00005a  6010              STR      r0,[r2,#0]
00005c  6990              LDR      r0,[r2,#0x18]
00005e  f4401080          ORR      r0,r0,#0x100000
000062  6190              STR      r0,[r2,#0x18]
000064  f7fffffe          BL       spi1_unconfig
000068  4618              MOV      r0,r3
00006a  bd1c              POP      {r2-r4,pc}
;;;22     
                          ENDP

                  |L3.108|
                          DCD      0x2009c000
