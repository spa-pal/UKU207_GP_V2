; generated by ARM C/C++ Compiler, 4.1 [Build 644]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\EXE\snmp_data_file.o --asm_dir=.\ --list_dir=.\ --depend=.\EXE\snmp_data_file.d --feedback=.\EXE\UKU2071x_GALV_IBv2.fed --cpu=Cortex-M3 --apcs=interwork -O3 -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\INC\NXP\LPC17xx -D__MICROLIB -DUKU2071x -DEXT_BOARD_V_2 --omf_browse=.\EXE\snmp_data_file.crf snmp_data_file.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  snmp_data PROC
;;;178    //-----------------------------------------------
;;;179    void snmp_data (void) 
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;180    {
;;;181    char i;
;;;182    
;;;183    snmp_mains_power_voltage=net_U;
000004  48fc              LDR      r0,|L1.1016|
000006  4efd              LDR      r6,|L1.1020|
;;;184    snmp_mains_power_frequency=net_F;/*
;;;185    snmp_mains_power_status=0; 
;;;186    #if(UKU_VERSION==900)
;;;187    snmp_mains_power_status=2;
;;;188    #endif
;;;189    if(St&0x01)snmp_mains_power_status|=0x01;
;;;190    if(St&0x01)snmp_mains_power_alarm=1;
;;;191    
;;;192    
;;;193    
;;;194    
;;;195    
;;;196    for(i=0;i<snmp_numofevents;i++)event2snmp(i);
;;;197    //snmp_bpsnumber[0]=1;
;;;198    //snmp_bpsnumber[1]=2;
;;;199    
;;;200    snmp_sernum=AUSW_MAIN_NUMBER;
;;;201    snmp_sernum_lsb=0x1122;
;;;202    snmp_sernum_msb=0x3344;
;;;203    snmp_device_code=AUSW_MAIN;
;;;204    
;;;205    //memcpy(snmp_location,"lkhg;la",);
;;;206    
;;;207    
;;;208    snmp_numofbat=1;
;;;209    
;;;210    */
;;;211    
;;;212    /**/
;;;213    snmp_out_voltage=load_U;
;;;214    snmp_out_current=load_I;
;;;215    /**/
;;;216    
;;;217    //snmp_numofbat=NUMBAT;
;;;218    snmp_num_of_psu=NUMIST;
;;;219    snmp_max_time_of_process=T_PROC_MAX/60;
000008  213c              MOVS     r1,#0x3c
00000a  8800              LDRH     r0,[r0,#0]            ;183  ; net_U
00000c  85b0              STRH     r0,[r6,#0x2c]         ;183
00000e  48fc              LDR      r0,|L1.1024|
;;;220    snmp_time_visualisation=TIME_VISION;
;;;221    snmp_pult_time_mode=TIME_VISION_PULT;
;;;222    snmp_load_current_measure_mode=I_LOAD_MODE;	
;;;223    snmp_main_menu_mode=main_menu_mode;
;;;224    if(restart_enable==reON) snmp_restart_enabled=1;
000010  2701              MOVS     r7,#1
000012  8800              LDRH     r0,[r0,#0]            ;184  ; net_F
000014  85f0              STRH     r0,[r6,#0x2e]         ;184
000016  48fb              LDR      r0,|L1.1028|
000018  8800              LDRH     r0,[r0,#0]            ;213  ; load_U
00001a  8630              STRH     r0,[r6,#0x30]         ;213
00001c  48fa              LDR      r0,|L1.1032|
00001e  8800              LDRH     r0,[r0,#0]            ;214  ; load_I
000020  8670              STRH     r0,[r6,#0x32]         ;214
000022  48fa              LDR      r0,|L1.1036|
000024  8800              LDRH     r0,[r0,#0]            ;218  ; NUMIST
000026  8070              STRH     r0,[r6,#2]            ;218
000028  48f9              LDR      r0,|L1.1040|
00002a  6800              LDR      r0,[r0,#0]            ;219  ; T_PROC_MAX
00002c  fb90f0f1          SDIV     r0,r0,r1              ;219
000030  80b0              STRH     r0,[r6,#4]            ;219
000032  48f8              LDR      r0,|L1.1044|
;;;225    else snmp_restart_enabled=0; 
000034  2100              MOVS     r1,#0
000036  8800              LDRH     r0,[r0,#0]            ;220  ; TIME_VISION
000038  80f0              STRH     r0,[r6,#6]            ;220
00003a  48f7              LDR      r0,|L1.1048|
00003c  8800              LDRH     r0,[r0,#0]            ;221  ; TIME_VISION_PULT
00003e  8130              STRH     r0,[r6,#8]            ;221
000040  48f6              LDR      r0,|L1.1052|
000042  8800              LDRH     r0,[r0,#0]            ;222  ; I_LOAD_MODE
000044  8170              STRH     r0,[r6,#0xa]          ;222
000046  48f6              LDR      r0,|L1.1056|
000048  7800              LDRB     r0,[r0,#0]            ;223  ; main_menu_mode
00004a  81b0              STRH     r0,[r6,#0xc]          ;223
00004c  48f5              LDR      r0,|L1.1060|
00004e  7800              LDRB     r0,[r0,#0]            ;224  ; restart_enable
000050  2801              CMP      r0,#1                 ;224
000052  d066              BEQ      |L1.290|
000054  81f1              STRH     r1,[r6,#0xe]
                  |L1.86|
;;;226    snmp_modbus_adress=MODBUS_ADRESS;
000056  48f4              LDR      r0,|L1.1064|
;;;227    snmp_modbus_baudrate=MODBUS_BAUDRATE*10U;
;;;228    
;;;229    //snmp_numofavt=NUMAVT;
;;;230    //snmp_numofdt=NUMDT;
;;;231    //snmp_numofsk=NUMSK;
;;;232    //snmp_numofevents=lc640_read_int(CNT_EVENT_LOG);
;;;233    
;;;234    snmp_energy_vvod_phase_a=Uvv_eb2[0];
;;;235    snmp_energy_vvod_phase_b=Uvv_eb2[1];
;;;236    snmp_energy_vvod_phase_c=Uvv_eb2[2];
;;;237    snmp_energy_pes_phase_a=Upes_eb2[0];
;;;238    snmp_energy_pes_phase_b=Upes_eb2[1];
;;;239    snmp_energy_pes_phase_c=Upes_eb2[2];
;;;240    
;;;241    snmp_energy_total_energy=power_summary;
;;;242    snmp_energy_current_energy=power_current;
;;;243    
;;;244    
;;;245    
;;;246    {
;;;247    char i;
;;;248    
;;;249    for(i=0;i<16;i++)
;;;250    	{
;;;251    	snmp_bps_number[i]=i+1;
000058  f8dfa3e4          LDR      r10,|L1.1088|
;;;252    	snmp_bps_voltage[i]=bps[i]._Uii;
00005c  f8df93e4          LDR      r9,|L1.1092|
000060  8800              LDRH     r0,[r0,#0]            ;226  ; MODBUS_ADRESS
000062  f8260f10          STRH     r0,[r6,#0x10]!        ;226
000066  48f1              LDR      r0,|L1.1068|
000068  f10a0520          ADD      r5,r10,#0x20
;;;253    	snmp_bps_current[i]=bps[i]._Ii;
00006c  f1050c20          ADD      r12,r5,#0x20
000070  f9b00000          LDRSH    r0,[r0,#0]            ;227  ; MODBUS_BAUDRATE
;;;254    	snmp_bps_temperature[i]=bps[i]._Ti;
000074  f1050840          ADD      r8,r5,#0x40
000078  eb000080          ADD      r0,r0,r0,LSL #2       ;227
00007c  0040              LSLS     r0,r0,#1              ;227
00007e  6430              STR      r0,[r6,#0x40]         ;234  ; snmp_modbus_baudrate
000080  48eb              LDR      r0,|L1.1072|
;;;255    	snmp_bps_stat[i]=bps[i]._av;
000082  f1050b60          ADD      r11,r5,#0x60
000086  8802              LDRH     r2,[r0,#0]            ;234  ; Uvv_eb2
000088  8572              STRH     r2,[r6,#0x2a]         ;234
00008a  8842              LDRH     r2,[r0,#2]            ;235  ; Uvv_eb2
00008c  85b2              STRH     r2,[r6,#0x2c]         ;235
00008e  8880              LDRH     r0,[r0,#4]            ;236  ; Uvv_eb2
000090  85f0              STRH     r0,[r6,#0x2e]         ;236
000092  48e8              LDR      r0,|L1.1076|
000094  8802              LDRH     r2,[r0,#0]            ;237  ; Upes_eb2
000096  8632              STRH     r2,[r6,#0x30]         ;237
000098  8842              LDRH     r2,[r0,#2]            ;238  ; Upes_eb2
00009a  8672              STRH     r2,[r6,#0x32]         ;238
00009c  8880              LDRH     r0,[r0,#4]            ;239  ; Upes_eb2
00009e  86b0              STRH     r0,[r6,#0x34]         ;239
0000a0  48e5              LDR      r0,|L1.1080|
0000a2  6800              LDR      r0,[r0,#0]            ;241  ; power_summary
0000a4  64f0              STR      r0,[r6,#0x4c]         ;242  ; snmp_energy_total_energy
0000a6  48e5              LDR      r0,|L1.1084|
0000a8  8800              LDRH     r0,[r0,#0]            ;242  ; power_current
0000aa  86f0              STRH     r0,[r6,#0x36]         ;242
0000ac  f1a60610          SUB      r6,r6,#0x10           ;242
0000b0  f04f0000          MOV      r0,#0                 ;249
                  |L1.180|
0000b4  ebc002c0          RSB      r2,r0,r0,LSL #3       ;252
0000b8  eb020442          ADD      r4,r2,r2,LSL #1       ;252
0000bc  1c43              ADDS     r3,r0,#1              ;251
0000be  eb090284          ADD      r2,r9,r4,LSL #2       ;252
0000c2  f82a3010          STRH     r3,[r10,r0,LSL #1]    ;251
0000c6  6994              LDR      r4,[r2,#0x18]         ;252
0000c8  f8254010          STRH     r4,[r5,r0,LSL #1]     ;252
0000cc  6a14              LDR      r4,[r2,#0x20]         ;253
0000ce  f82c4010          STRH     r4,[r12,r0,LSL #1]    ;253
0000d2  6a54              LDR      r4,[r2,#0x24]         ;254
0000d4  f8284010          STRH     r4,[r8,r0,LSL #1]     ;254
0000d8  7854              LDRB     r4,[r2,#1]
0000da  f82b4010          STRH     r4,[r11,r0,LSL #1]
0000de  b2d8              UXTB     r0,r3                 ;249
0000e0  2810              CMP      r0,#0x10              ;249
0000e2  d3e7              BCC      |L1.180|
;;;256    	}
;;;257    }
;;;258    
;;;259    
;;;260    
;;;261    
;;;262    												//Байт состояния БПСа.
;;;263    
;;;264    /*if(St_[0]&(1<<2))snmp_bps_stat[0]=(1<<3); 							//авария по Umin
;;;265    else if(St_[0]&(1<<3))snmp_bps_stat[0]=(1<<2); 						//авария по Umax
;;;266    else if(bps[0]._av&(1<<0))snmp_bps_stat[0]=(1<<1); 						//авария по Tmax
;;;267    else if(St_[0]&(1<<5))snmp_bps_stat[0]=(1<<5); 						//заблокирован
;;;268    else if((!(St_[0]&0x3c))&&(!St&0x01)&&(!OFFBP1))snmp_bps_stat[0]=1; 		//Работает
;;;269    */
;;;270    /*
;;;271    snmp_bps_number[1]=2;
;;;272    snmp_bps_voltage[1]=bps[1]._Uii;
;;;273    snmp_bps_current[1]=bps[1]._Ii;
;;;274    snmp_bps_temperature[1]=bps[1]._Ti;
;;;275    snmp_bps_stat[1]=bps[1]._av;
;;;276    */
;;;277    												//Байт состояния БПСа.
;;;278    /*if(St_[1]&(1<<2))snmp_bps_stat[1]=(1<<3); 							//авария по Umin
;;;279    else if(St_[1]&(1<<3))snmp_bps_stat[1]=(1<<2); 						//авария по Umax
;;;280    else if(St_[1]&(1<<4))snmp_bps_stat[1]=(1<<1); 						//авария по Tmax
;;;281    else if(St_[1]&(1<<5))snmp_bps_stat[1]=(1<<5); 						//заблокирован
;;;282    else if((!(St_[1]&0x3c))&&(!St&0x01)&&(!OFFBP2))snmp_bps_stat[1]=1; 		//Работает
;;;283    */
;;;284    /*
;;;285    snmp_bps_number[2]=3;
;;;286    snmp_bps_voltage[2]=bps[2]._Uii;
;;;287    snmp_bps_current[2]=bps[2]._Ii;
;;;288    snmp_bps_temperature[2]=bps[2]._Ti;
;;;289    snmp_bps_stat[2]=bps[2]._av;
;;;290    
;;;291    snmp_bps_number[3]=4;
;;;292    snmp_bps_voltage[3]=bps[3]._Uii;
;;;293    snmp_bps_current[3]=bps[3]._Ii;
;;;294    snmp_bps_temperature[3]=bps[3]._Ti;
;;;295    snmp_bps_stat[3]=bps[3]._av;
;;;296    
;;;297    snmp_bps_number[4]=5;
;;;298    snmp_bps_voltage[4]=bps[4]._Uii;
;;;299    snmp_bps_current[4]=bps[4]._Ii;
;;;300    snmp_bps_temperature[4]=bps[4]._Ti;
;;;301    snmp_bps_stat[4]=bps[4]._av;
;;;302    
;;;303    snmp_bps_number[5]=6;
;;;304    snmp_bps_voltage[5]=bps[5]._Uii;
;;;305    snmp_bps_current[5]=bps[5]._Ii;
;;;306    snmp_bps_temperature[5]=bps[5]._Ti;
;;;307    snmp_bps_stat[5]=bps[5]._av;
;;;308    
;;;309    snmp_bps_number[6]=7;
;;;310    snmp_bps_voltage[6]=bps[6]._Uii;
;;;311    snmp_bps_current[6]=bps[6]._Ii;
;;;312    snmp_bps_temperature[6]=bps[6]._Ti;
;;;313    snmp_bps_stat[6]=bps[6]._av;
;;;314    
;;;315    snmp_bps_number[7]=8;
;;;316    snmp_bps_voltage[7]=bps[7]._Uii;
;;;317    snmp_bps_current[7]=bps[7]._Ii;
;;;318    snmp_bps_temperature[7]=bps[7]._Ti;
;;;319    snmp_bps_stat[7]=bps[7]._av;
;;;320    */
;;;321    
;;;322    
;;;323    snmp_U_up=U_up;  	
0000e4  48d8              LDR      r0,|L1.1096|
0000e6  8800              LDRH     r0,[r0,#0]  ; U_up
0000e8  8270              STRH     r0,[r6,#0x12]
;;;324    snmp_I_ug=I_ug; 	
0000ea  48d8              LDR      r0,|L1.1100|
0000ec  8800              LDRH     r0,[r0,#0]  ; I_ug
0000ee  82b0              STRH     r0,[r6,#0x14]
;;;325    snmp_U_maxg=U_maxg;  	
0000f0  48d7              LDR      r0,|L1.1104|
0000f2  8800              LDRH     r0,[r0,#0]  ; U_maxg
0000f4  82f0              STRH     r0,[r6,#0x16]
;;;326    snmp_I_maxp=I_maxp; 	
0000f6  48d7              LDR      r0,|L1.1108|
0000f8  8800              LDRH     r0,[r0,#0]  ; I_maxp
0000fa  8330              STRH     r0,[r6,#0x18]
;;;327    if(T_PROC_PS_MODE==1)snmp_time_p=0L;
0000fc  48d6              LDR      r0,|L1.1112|
0000fe  8800              LDRH     r0,[r0,#0]  ; T_PROC_PS_MODE
000100  2801              CMP      r0,#1
000102  d010              BEQ      |L1.294|
;;;328    else snmp_time_p=T_PROC_PS;  	
000104  48d5              LDR      r0,|L1.1116|
000106  6800              LDR      r0,[r0,#0]  ; T_PROC_PS
000108  6570              STR      r0,[r6,#0x54]  ; snmp_time_p
                  |L1.266|
;;;329    if(T_PROC_GS_MODE==1)snmp_time_g=0L;
00010a  48d5              LDR      r0,|L1.1120|
00010c  8800              LDRH     r0,[r0,#0]  ; T_PROC_GS_MODE
00010e  2801              CMP      r0,#1
000110  d00b              BEQ      |L1.298|
;;;330    else snmp_time_g=T_PROC_GS;
000112  48d4              LDR      r0,|L1.1124|
000114  6800              LDR      r0,[r0,#0]  ; T_PROC_GS
000116  65b0              STR      r0,[r6,#0x58]  ; snmp_time_g
                  |L1.280|
;;;331    
;;;332    
;;;333    if(REV_STAT) snmp_reverse_state=0;
000118  48d3              LDR      r0,|L1.1128|
00011a  7805              LDRB     r5,[r0,#0]  ; REV_STAT
00011c  b13d              CBZ      r5,|L1.302|
00011e  8371              STRH     r1,[r6,#0x1a]
000120  e006              B        |L1.304|
                  |L1.290|
000122  81f7              STRH     r7,[r6,#0xe]          ;224
000124  e797              B        |L1.86|
                  |L1.294|
000126  6571              STR      r1,[r6,#0x54]         ;327  ; snmp_time_p
000128  e7ef              B        |L1.266|
                  |L1.298|
00012a  65b1              STR      r1,[r6,#0x58]         ;329  ; snmp_time_g
00012c  e7f4              B        |L1.280|
                  |L1.302|
;;;334    else snmp_reverse_state=1;
00012e  8377              STRH     r7,[r6,#0x1a]
                  |L1.304|
;;;335    if(AVT_REV_IS_ON)snmp_avtoreverse_enable=1;
000130  48ce              LDR      r0,|L1.1132|
000132  8800              LDRH     r0,[r0,#0]  ; AVT_REV_IS_ON
000134  b108              CBZ      r0,|L1.314|
000136  83b7              STRH     r7,[r6,#0x1c]
000138  e000              B        |L1.316|
                  |L1.314|
;;;336    else snmp_avtoreverse_enable=0;
00013a  83b1              STRH     r1,[r6,#0x1c]
                  |L1.316|
;;;337    snmp_avtoreverse_ff_time=AVT_REV_TIME_FF;
00013c  48cc              LDR      r0,|L1.1136|
;;;338    snmp_avtoreverse_rew_time=AVT_REV_TIME_REW;
;;;339    snmp_avtoreverse_pause_time=AVT_REV_TIME_PAUSE;
;;;340    snmp_avtoreverse_ff_i=AVT_REV_I_NOM_FF;  	
;;;341    snmp_avtoreverse_rew_i=AVT_REV_I_NOM_REW; 	
;;;342    snmp_avtoreverse_ff_u=AVT_REV_U_NOM_FF; 	
;;;343    snmp_avtoreverse_rew_u=AVT_REV_U_NOM_REW;  	
;;;344    
;;;345    
;;;346    
;;;347    /*
;;;348    snmp_bat_voltage=Ubat;
;;;349    snmp_bat_current=Ibat;
;;;350    snmp_bat_temperature=t_b;
;;;351    if(BAT_C_REAL==0x5555)
;;;352    	{
;;;353    	snmp_bat_capacity=BAT_C_NOM*10;												    11
;;;354    	}
;;;355    else
;;;356    	{
;;;357    	snmp_bat_capacity=BAT_C_REAL;
;;;358    	}
;;;359    snmp_bat_charge=zar_percent;
;;;360    snmp_bat_status=0;
;;;361    if(St&0x02)snmp_bat_status|=0x01;
;;;362    if(Ibat>0)snmp_bat_status|=0x02;
;;;363    
;;;364    
;;;365    if(spc_stat==spc_OFF) snmp_spc_stat=0;
;;;366    else if(spc_stat==spc_KE) snmp_spc_stat=1;
;;;367    else if(spc_stat==spc_VZ) snmp_spc_stat=10;
;;;368    
;;;369    
;;;370    snmp_main_bps=MAIN_IST+1;
;;;371    snmp_zv_en=ZV_ON;
;;;372    snmp_alarm_auto_disable=AV_OFF_AVT;
;;;373    snmp_bat_test_time=TBAT;
;;;374    snmp_u_max=UMAX;
;;;375    snmp_u_0_grad=UB0;
;;;376    snmp_u_20_grad=UB20;
;;;377    snmp_u_sign=USIGN;
;;;378    snmp_u_min_power=UMN;
;;;379    snmp_u_withouth_bat=U0B;
;;;380    snmp_control_current=IKB;
;;;381    snmp_max_charge_current=IZMAX;
;;;382    snmp_max_current=IMAX;
;;;383    snmp_max_current_koef=KIMAX;
;;;384    snmp_up_charge_koef=KVZ;
;;;385    snmp_powerup_psu_timeout=TZAS;
;;;386    snmp_max_temperature=TMAX;*/
;;;387    
;;;388    for(i=0;i<12;i++)
;;;389    	{
;;;390    	snmp_avt_number[i]=i+1;
00013e  4cd3              LDR      r4,|L1.1164|
;;;391    	if(avt_stat[i]==avtOFF)snmp_avt_stat[i]=0;
000140  f8dfc34c          LDR      r12,|L1.1168|
000144  8800              LDRH     r0,[r0,#0]            ;337  ; AVT_REV_TIME_FF
000146  83f0              STRH     r0,[r6,#0x1e]         ;337
000148  48ca              LDR      r0,|L1.1140|
00014a  f104030c          ADD      r3,r4,#0xc
00014e  8800              LDRH     r0,[r0,#0]            ;338  ; AVT_REV_TIME_REW
000150  8430              STRH     r0,[r6,#0x20]         ;338
000152  48c9              LDR      r0,|L1.1144|
000154  8800              LDRH     r0,[r0,#0]            ;339  ; AVT_REV_TIME_PAUSE
000156  8470              STRH     r0,[r6,#0x22]         ;339
000158  48c8              LDR      r0,|L1.1148|
00015a  8800              LDRH     r0,[r0,#0]            ;340  ; AVT_REV_I_NOM_FF
00015c  84b0              STRH     r0,[r6,#0x24]         ;340
00015e  48c8              LDR      r0,|L1.1152|
000160  8800              LDRH     r0,[r0,#0]            ;341  ; AVT_REV_I_NOM_REW
000162  84f0              STRH     r0,[r6,#0x26]         ;341
000164  48c7              LDR      r0,|L1.1156|
000166  8800              LDRH     r0,[r0,#0]            ;342  ; AVT_REV_U_NOM_FF
000168  8530              STRH     r0,[r6,#0x28]         ;342
00016a  48c7              LDR      r0,|L1.1160|
00016c  8800              LDRH     r0,[r0,#0]            ;343  ; AVT_REV_U_NOM_REW
00016e  8570              STRH     r0,[r6,#0x2a]         ;343
000170  2000              MOVS     r0,#0                 ;388
                  |L1.370|
000172  1c42              ADDS     r2,r0,#1              ;390
000174  5422              STRB     r2,[r4,r0]            ;390
000176  f81c8000          LDRB     r8,[r12,r0]
00017a  f1b80f00          CMP      r8,#0
00017e  d016              BEQ      |L1.430|
;;;392    	else snmp_avt_stat[i]=1;
000180  541f              STRB     r7,[r3,r0]
                  |L1.386|
000182  b2d0              UXTB     r0,r2                 ;388
000184  280c              CMP      r0,#0xc               ;388
000186  d3f4              BCC      |L1.370|
;;;393    	}
;;;394    
;;;395    for(i=0;i<4;i++)
;;;396    	{
;;;397    	snmp_sk_number[i]=i+1;
;;;398    	snmp_sk_state[i]=0;
;;;399    	if(sk_in_drv_stat>0)snmp_sk_state[0]=1;
000188  4ac2              LDR      r2,|L1.1172|
00018a  f8dfc270          LDR      r12,|L1.1020|
00018e  2000              MOVS     r0,#0                 ;395
000190  f10c0c64          ADD      r12,r12,#0x64         ;397
000194  f9b24000          LDRSH    r4,[r2,#0]
000198  f10c0308          ADD      r3,r12,#8             ;398
                  |L1.412|
00019c  1c42              ADDS     r2,r0,#1              ;397
00019e  f82c2010          STRH     r2,[r12,r0,LSL #1]    ;397
0001a2  f8231010          STRH     r1,[r3,r0,LSL #1]     ;398
0001a6  2c00              CMP      r4,#0
0001a8  dd03              BLE      |L1.434|
0001aa  801f              STRH     r7,[r3,#0]
0001ac  e002              B        |L1.436|
                  |L1.430|
0001ae  5419              STRB     r1,[r3,r0]            ;391
0001b0  e7e7              B        |L1.386|
                  |L1.434|
;;;400    	else snmp_sk_state[0]=0;
0001b2  8019              STRH     r1,[r3,#0]
                  |L1.436|
0001b4  b2d0              UXTB     r0,r2                 ;395
0001b6  2804              CMP      r0,#4                 ;395
0001b8  d3f0              BCC      |L1.412|
;;;401    	}
;;;402    
;;;403    
;;;404    snmp_ips_state_flags=0;
;;;405    
;;;406    if(work_stat==wsCAP) 
0001ba  48b7              LDR      r0,|L1.1176|
0001bc  f8a61048          STRH     r1,[r6,#0x48]         ;404
0001c0  7800              LDRB     r0,[r0,#0]  ; work_stat
0001c2  2803              CMP      r0,#3
0001c4  d001              BEQ      |L1.458|
;;;407    	{
;;;408    	if(bRAZR) 			snmp_ips_state_flags&=~(1<<0);
;;;409    	else 				snmp_ips_state_flags|= (1<<0);
;;;410    	}
;;;411    else 
;;;412    	{
;;;413    	if(REV_STAT==rsREW)	snmp_ips_state_flags&=~(1<<0);
0001c6  b935              CBNZ     r5,|L1.470|
0001c8  e002              B        |L1.464|
                  |L1.458|
0001ca  48b4              LDR      r0,|L1.1180|
0001cc  7800              LDRB     r0,[r0,#0]            ;408  ; bRAZR
0001ce  b110              CBZ      r0,|L1.470|
                  |L1.464|
0001d0  f0210001          BIC      r0,r1,#1              ;408
0001d4  e001              B        |L1.474|
                  |L1.470|
0001d6  f0410001          ORR      r0,r1,#1              ;409
                  |L1.474|
0001da  f8a60048          STRH     r0,[r6,#0x48]
;;;414    	else 				snmp_ips_state_flags|= (1<<0);
;;;415    	}
;;;416    
;;;417    if(bCURRENT_STAB==0)	snmp_ips_state_flags&=~(1<<1);
0001de  48b0              LDR      r0,|L1.1184|
0001e0  7800              LDRB     r0,[r0,#0]  ; bCURRENT_STAB
0001e2  2800              CMP      r0,#0
;;;418    else 					snmp_ips_state_flags|= (1<<1);
0001e4  f8b60048          LDRH     r0,[r6,#0x48]  ; snmp_ips_state_flags
0001e8  d022              BEQ      |L1.560|
0001ea  f0400002          ORR      r0,r0,#2
0001ee  bf00              NOP      
                  |L1.496|
0001f0  f8a60048          STRH     r0,[r6,#0x48]
;;;419    									
;;;420    if(bVOLT_IS_NORM==0)	snmp_ips_state_flags&=~(1<<2);
0001f4  48ab              LDR      r0,|L1.1188|
0001f6  7800              LDRB     r0,[r0,#0]  ; bVOLT_IS_NORM
0001f8  2800              CMP      r0,#0
;;;421    else 					snmp_ips_state_flags|= (1<<2);
0001fa  f8b60048          LDRH     r0,[r6,#0x48]  ; snmp_ips_state_flags
0001fe  d01a              BEQ      |L1.566|
000200  f0400004          ORR      r0,r0,#4
                  |L1.516|
000204  f8a60048          STRH     r0,[r6,#0x48]
;;;422    
;;;423    if(bVOLT_IS_NOT_UP==0)	snmp_ips_state_flags&=~(1<<3);
000208  48a7              LDR      r0,|L1.1192|
00020a  7800              LDRB     r0,[r0,#0]  ; bVOLT_IS_NOT_UP
00020c  2800              CMP      r0,#0
;;;424    else 					snmp_ips_state_flags|= (1<<3);
00020e  f8b60048          LDRH     r0,[r6,#0x48]  ; snmp_ips_state_flags
000212  d013              BEQ      |L1.572|
000214  f0400008          ORR      r0,r0,#8
                  |L1.536|
000218  f8260f48          STRH     r0,[r6,#0x48]!
;;;425    
;;;426    if(bVOLT_IS_NOT_DOWN==0)snmp_ips_state_flags&=~(1<<4);
00021c  48a3              LDR      r0,|L1.1196|
00021e  7800              LDRB     r0,[r0,#0]  ; bVOLT_IS_NOT_DOWN
000220  2800              CMP      r0,#0
;;;427    else 					snmp_ips_state_flags|= (1<<4);
000222  8830              LDRH     r0,[r6,#0]  ; snmp_ips_state_flags
000224  d00d              BEQ      |L1.578|
000226  f0400010          ORR      r0,r0,#0x10
                  |L1.554|
00022a  8030              STRH     r0,[r6,#0]            ;426
;;;428    
;;;429    }
00022c  e8bd8ff0          POP      {r4-r11,pc}
                  |L1.560|
000230  f0200002          BIC      r0,r0,#2              ;417
000234  e7dc              B        |L1.496|
                  |L1.566|
000236  f0200004          BIC      r0,r0,#4              ;420
00023a  e7e3              B        |L1.516|
                  |L1.572|
00023c  f0200008          BIC      r0,r0,#8              ;423
000240  e7ea              B        |L1.536|
                  |L1.578|
000242  f0200010          BIC      r0,r0,#0x10           ;426
000246  e7f0              B        |L1.554|
;;;430    
                          ENDP

                  snmp_num_of_psu_write PROC
;;;454    //-----------------------------------------------
;;;455    void snmp_num_of_psu_write (int mode)
000248  2801              CMP      r0,#1
;;;456    {
;;;457    if(mode==MIB_WRITE)
00024a  d105              BNE      |L1.600|
;;;458    	{
;;;459    	lc640_write_int(EE_NUMIST,snmp_num_of_psu);
00024c  486b              LDR      r0,|L1.1020|
00024e  f9b01002          LDRSH    r1,[r0,#2]  ; snmp_num_of_psu
000252  2098              MOVS     r0,#0x98
000254  f7ffbffe          B.W      lc640_write_int
                  |L1.600|
;;;460    	}
;;;461    }
000258  4770              BX       lr
;;;462    
                          ENDP

                  snmp_max_time_of_process_write PROC
;;;463    //-----------------------------------------------
;;;464    void snmp_max_time_of_process_write(int mode)
00025a  2801              CMP      r0,#1
;;;465    {
;;;466    if(mode==MIB_WRITE)
00025c  d108              BNE      |L1.624|
;;;467    	{
;;;468    	lc640_write_long(EE_T_PROC_MAX,snmp_max_time_of_process*60);
00025e  4867              LDR      r0,|L1.1020|
000260  f9b00004          LDRSH    r0,[r0,#4]  ; snmp_max_time_of_process
000264  ebc01000          RSB      r0,r0,r0,LSL #4
000268  0081              LSLS     r1,r0,#2
00026a  20e0              MOVS     r0,#0xe0
00026c  f7ffbffe          B.W      lc640_write_long
                  |L1.624|
;;;469    	}
;;;470    }
000270  4770              BX       lr
;;;471    
                          ENDP

                  snmp_time_visualisation_write PROC
;;;472    //-----------------------------------------------
;;;473    void snmp_time_visualisation_write(int mode) 
000272  2801              CMP      r0,#1
;;;474    {
;;;475    if(mode==MIB_WRITE)
000274  d105              BNE      |L1.642|
;;;476    	{
;;;477    	lc640_write_int(EE_TIME_VISION,snmp_time_visualisation);
000276  4861              LDR      r0,|L1.1020|
000278  f9b01006          LDRSH    r1,[r0,#6]  ; snmp_time_visualisation
00027c  20e4              MOVS     r0,#0xe4
00027e  f7ffbffe          B.W      lc640_write_int
                  |L1.642|
;;;478    	}
;;;479    }
000282  4770              BX       lr
;;;480    
                          ENDP

                  snmp_pult_time_mode_write PROC
;;;481    //-----------------------------------------------
;;;482    void snmp_pult_time_mode_write(int mode)
000284  2801              CMP      r0,#1
;;;483    {
;;;484    if(mode==MIB_WRITE)
000286  d105              BNE      |L1.660|
;;;485    	{
;;;486    	lc640_write_int(EE_TIME_VISION_PULT,snmp_pult_time_mode);
000288  485c              LDR      r0,|L1.1020|
00028a  f9b01008          LDRSH    r1,[r0,#8]  ; snmp_pult_time_mode
00028e  20e6              MOVS     r0,#0xe6
000290  f7ffbffe          B.W      lc640_write_int
                  |L1.660|
;;;487    	}
;;;488    }  	
000294  4770              BX       lr
;;;489    //-----------------------------------------------
                          ENDP

                  snmp_load_current_measure_mode_write PROC
;;;490    void snmp_load_current_measure_mode_write(int mode)
000296  2801              CMP      r0,#1
;;;491    {
;;;492    if(mode==MIB_WRITE)
000298  d105              BNE      |L1.678|
;;;493    	{
;;;494    	lc640_write_int(EE_I_LOAD_MODE,snmp_load_current_measure_mode);
00029a  4858              LDR      r0,|L1.1020|
00029c  f9b0100a          LDRSH    r1,[r0,#0xa]  ; snmp_load_current_measure_mode
0002a0  20e8              MOVS     r0,#0xe8
0002a2  f7ffbffe          B.W      lc640_write_int
                  |L1.678|
;;;495    	}
;;;496    }
0002a6  4770              BX       lr
;;;497    //-----------------------------------------------
                          ENDP

                  snmp_main_menu_mode_write PROC
;;;498    void snmp_main_menu_mode_write(int mode)
0002a8  2801              CMP      r0,#1
;;;499    {
;;;500    if(mode==MIB_WRITE)
0002aa  d107              BNE      |L1.700|
;;;501    	{
;;;502    	if((snmp_main_menu_mode>=0)&&(snmp_main_menu_mode<=3))lc640_write_int(EE_MAIN_MENU_MODE,snmp_main_menu_mode);
0002ac  4853              LDR      r0,|L1.1020|
0002ae  f9b0100c          LDRSH    r1,[r0,#0xc]  ; snmp_main_menu_mode
0002b2  2903              CMP      r1,#3
0002b4  d802              BHI      |L1.700|
0002b6  20ea              MOVS     r0,#0xea
0002b8  f7ffbffe          B.W      lc640_write_int
                  |L1.700|
;;;503    	}
;;;504    }
0002bc  4770              BX       lr
;;;505    
                          ENDP

                  snmp_restart_enabled_write PROC
;;;506    //-----------------------------------------------
;;;507    void snmp_restart_enabled_write(int mode)
0002be  2801              CMP      r0,#1
;;;508    {
;;;509    if(mode==MIB_WRITE)
0002c0  d10a              BNE      |L1.728|
;;;510    	{
;;;511    	if(snmp_restart_enabled!=reON)lc640_write_int(EE_RESTART_ENABLED,reON);
0002c2  484e              LDR      r0,|L1.1020|
0002c4  89c1              LDRH     r1,[r0,#0xe]  ; snmp_restart_enabled
0002c6  f44f7081          MOV      r0,#0x102
0002ca  2901              CMP      r1,#1
0002cc  d001              BEQ      |L1.722|
0002ce  2101              MOVS     r1,#1
0002d0  e000              B        |L1.724|
                  |L1.722|
;;;512    	else lc640_write_int(EE_RESTART_ENABLED,reOFF);
0002d2  2100              MOVS     r1,#0
                  |L1.724|
0002d4  f7ffbffe          B.W      lc640_write_int
                  |L1.728|
;;;513    	}
;;;514    }
0002d8  4770              BX       lr
;;;515    
                          ENDP

                  snmp_modbus_adress_write PROC
;;;516    //-----------------------------------------------
;;;517    void snmp_modbus_adress_write(int mode)
0002da  2801              CMP      r0,#1
;;;518    {
;;;519    if(mode==MIB_WRITE)
0002dc  d108              BNE      |L1.752|
;;;520    	{
;;;521    	if((snmp_modbus_adress>=1)&&(snmp_modbus_adress<=254))lc640_write_int(EE_MODBUS_ADRESS,snmp_modbus_adress);
0002de  4847              LDR      r0,|L1.1020|
0002e0  f9b01010          LDRSH    r1,[r0,#0x10]  ; snmp_modbus_adress
0002e4  1e48              SUBS     r0,r1,#1
0002e6  28fd              CMP      r0,#0xfd
0002e8  d802              BHI      |L1.752|
0002ea  20f4              MOVS     r0,#0xf4
0002ec  f7ffbffe          B.W      lc640_write_int
                  |L1.752|
;;;522    	}
;;;523    }
0002f0  4770              BX       lr
;;;524    
                          ENDP

                  snmp_modbus_baudrate_write PROC
;;;525    //-----------------------------------------------
;;;526    void snmp_modbus_baudrate_write(int mode)
0002f2  2801              CMP      r0,#1
;;;527    {
;;;528    if(mode==MIB_WRITE)
0002f4  d10e              BNE      |L1.788|
;;;529    	{
;;;530    	if((snmp_modbus_baudrate>=1200)&&(snmp_modbus_baudrate<=57600))lc640_write_int(EE_MODBUS_BAUDRATE,(signed short)(snmp_modbus_baudrate/10));
0002f6  4841              LDR      r0,|L1.1020|
0002f8  f64d4250          MOV      r2,#0xdc50
0002fc  6d00              LDR      r0,[r0,#0x50]  ; snmp_modbus_baudrate
0002fe  f5a06196          SUB      r1,r0,#0x4b0
000302  4291              CMP      r1,r2
000304  d806              BHI      |L1.788|
000306  210a              MOVS     r1,#0xa
000308  fb90f0f1          SDIV     r0,r0,r1
00030c  b201              SXTH     r1,r0
00030e  20f6              MOVS     r0,#0xf6
000310  f7ffbffe          B.W      lc640_write_int
                  |L1.788|
;;;531    	}
;;;532    }
000314  4770              BX       lr
;;;533    
                          ENDP

                  snmp_U_up_write PROC
;;;534    //-----------------------------------------------
;;;535    void snmp_U_up_write(int mode)
000316  b510              PUSH     {r4,lr}
;;;536    {
;;;537    if(mode==MIB_WRITE)
000318  2801              CMP      r0,#1
00031a  d111              BNE      |L1.832|
;;;538    	{
;;;539    	gran(&snmp_U_up,U_MIN,U_MAX);
00031c  4864              LDR      r0,|L1.1200|
00031e  f9b02000          LDRSH    r2,[r0,#0]  ; U_MAX
000322  4864              LDR      r0,|L1.1204|
000324  f9b01000          LDRSH    r1,[r0,#0]  ; U_MIN
000328  4834              LDR      r0,|L1.1020|
00032a  3012              ADDS     r0,r0,#0x12
00032c  f7fffffe          BL       gran
;;;540    	lc640_write_int(EE_U_UP,snmp_U_up);
000330  4832              LDR      r0,|L1.1020|
000332  f9b01012          LDRSH    r1,[r0,#0x12]  ; snmp_U_up
000336  e8bd4010          POP      {r4,lr}
00033a  2022              MOVS     r0,#0x22
00033c  f7ffbffe          B.W      lc640_write_int
                  |L1.832|
;;;541    	}
;;;542    }
000340  bd10              POP      {r4,pc}
;;;543    //-----------------------------------------------
                          ENDP

                  snmp_I_ug_write PROC
;;;544    void snmp_I_ug_write(int mode)
000342  b510              PUSH     {r4,lr}
;;;545    {
;;;546    if(mode==MIB_WRITE)
000344  2801              CMP      r0,#1
000346  d111              BNE      |L1.876|
;;;547    	{
;;;548    	gran(&snmp_I_ug,I_MIN_IPS,I_MAX_IPS);
000348  485b              LDR      r0,|L1.1208|
00034a  f9b02000          LDRSH    r2,[r0,#0]  ; I_MAX_IPS
00034e  485b              LDR      r0,|L1.1212|
000350  f9b01000          LDRSH    r1,[r0,#0]  ; I_MIN_IPS
000354  4829              LDR      r0,|L1.1020|
000356  3014              ADDS     r0,r0,#0x14
000358  f7fffffe          BL       gran
;;;549    	lc640_write_int(EE_I_UG,snmp_I_ug);	
00035c  4827              LDR      r0,|L1.1020|
00035e  f9b01014          LDRSH    r1,[r0,#0x14]  ; snmp_I_ug
000362  e8bd4010          POP      {r4,lr}
000366  2020              MOVS     r0,#0x20
000368  f7ffbffe          B.W      lc640_write_int
                  |L1.876|
;;;550    	}
;;;551    }
00036c  bd10              POP      {r4,pc}
;;;552    
                          ENDP

                  snmp_U_maxg_write PROC
;;;554    //-----------------------------------------------
;;;555    void snmp_U_maxg_write(int mode)
00036e  b510              PUSH     {r4,lr}
;;;556    {
;;;557    if(mode==MIB_WRITE)
000370  2801              CMP      r0,#1
000372  d111              BNE      |L1.920|
;;;558    	{
;;;559    	gran(&snmp_U_maxg,U_MIN,U_MAX);
000374  484e              LDR      r0,|L1.1200|
000376  f9b02000          LDRSH    r2,[r0,#0]  ; U_MAX
00037a  484e              LDR      r0,|L1.1204|
00037c  f9b01000          LDRSH    r1,[r0,#0]  ; U_MIN
000380  481e              LDR      r0,|L1.1020|
000382  3016              ADDS     r0,r0,#0x16
000384  f7fffffe          BL       gran
;;;560    	lc640_write_int(EE_U_MAX_G,snmp_U_maxg);
000388  481c              LDR      r0,|L1.1020|
00038a  f9b01016          LDRSH    r1,[r0,#0x16]  ; snmp_U_maxg
00038e  e8bd4010          POP      {r4,lr}
000392  2076              MOVS     r0,#0x76
000394  f7ffbffe          B.W      lc640_write_int
                  |L1.920|
;;;561    	}
;;;562    }
000398  bd10              POP      {r4,pc}
;;;563    //-----------------------------------------------
                          ENDP

                  snmp_I_maxp_write PROC
;;;564    void snmp_I_maxp_write(int mode)
00039a  b510              PUSH     {r4,lr}
;;;565    {
;;;566    if(mode==MIB_WRITE)
00039c  2801              CMP      r0,#1
00039e  d111              BNE      |L1.964|
;;;567    	{
;;;568    	gran(&snmp_I_maxp,I_MIN_IPS,I_MAX_IPS);
0003a0  4845              LDR      r0,|L1.1208|
0003a2  f9b02000          LDRSH    r2,[r0,#0]  ; I_MAX_IPS
0003a6  4845              LDR      r0,|L1.1212|
0003a8  f9b01000          LDRSH    r1,[r0,#0]  ; I_MIN_IPS
0003ac  4813              LDR      r0,|L1.1020|
0003ae  3018              ADDS     r0,r0,#0x18
0003b0  f7fffffe          BL       gran
;;;569    	lc640_write_int(EE_I_MAX_P,snmp_I_maxp);
0003b4  4811              LDR      r0,|L1.1020|
0003b6  f9b01018          LDRSH    r1,[r0,#0x18]  ; snmp_I_maxp
0003ba  e8bd4010          POP      {r4,lr}
0003be  2078              MOVS     r0,#0x78
0003c0  f7ffbffe          B.W      lc640_write_int
                  |L1.964|
;;;570    	}
;;;571    }
0003c4  bd10              POP      {r4,pc}
;;;572    //-----------------------------------------------
                          ENDP

                  snmp_time_p_write PROC
;;;573    void snmp_time_p_write(int mode)
0003c6  b510              PUSH     {r4,lr}
;;;574    {
;;;575    if(mode==MIB_WRITE)
0003c8  2801              CMP      r0,#1
0003ca  d114              BNE      |L1.1014|
;;;576    	{
;;;577    	if((snmp_time_p<30)||(snmp_time_p>T_PROC_MAX))
0003cc  480b              LDR      r0,|L1.1020|
;;;578    		{
;;;579    		if(snmp_time_p<30)snmp_time_p=29;
;;;580    		else if(snmp_time_p>T_PROC_MAX)snmp_time_p=T_PROC_MAX+1;
;;;581    		lc640_write_int(EE_T_PROC_PS,snmp_time_p);
;;;582    		if(T_PROC_PS_MODE!=1)
0003ce  4c22              LDR      r4,|L1.1112|
0003d0  6d41              LDR      r1,[r0,#0x54]         ;577  ; snmp_time_p
0003d2  291e              CMP      r1,#0x1e              ;577
0003d4  db76              BLT      |L1.1220|
0003d6  4a0e              LDR      r2,|L1.1040|
0003d8  6812              LDR      r2,[r2,#0]            ;577  ; T_PROC_MAX
0003da  4291              CMP      r1,r2                 ;577
0003dc  dd75              BLE      |L1.1226|
0003de  1c52              ADDS     r2,r2,#1              ;580
0003e0  6542              STR      r2,[r0,#0x54]         ;580  ; snmp_time_p
                  |L1.994|
0003e2  6d40              LDR      r0,[r0,#0x54]         ;581  ; snmp_time_p
0003e4  b201              SXTH     r1,r0                 ;581
0003e6  20dc              MOVS     r0,#0xdc              ;581
0003e8  f7fffffe          BL       lc640_write_int
0003ec  8820              LDRH     r0,[r4,#0]  ; T_PROC_PS_MODE
0003ee  2801              CMP      r0,#1
0003f0  d079              BEQ      |L1.1254|
;;;583    			{
;;;584    			T_PROC_PS_MODE=1;	
0003f2  2101              MOVS     r1,#1
;;;585    			lc640_write_int(EE_T_PROC_PS_MODE,T_PROC_PS_MODE);
0003f4  e071              B        |L1.1242|
                  |L1.1014|
0003f6  e076              B        |L1.1254|
                  |L1.1016|
                          DCD      net_U
                  |L1.1020|
                          DCD      ||area_number.12||
                  |L1.1024|
                          DCD      net_F
                  |L1.1028|
                          DCD      load_U
                  |L1.1032|
                          DCD      load_I
                  |L1.1036|
                          DCD      NUMIST
                  |L1.1040|
                          DCD      T_PROC_MAX
                  |L1.1044|
                          DCD      TIME_VISION
                  |L1.1048|
                          DCD      TIME_VISION_PULT
                  |L1.1052|
                          DCD      I_LOAD_MODE
                  |L1.1056|
                          DCD      main_menu_mode
                  |L1.1060|
                          DCD      restart_enable
                  |L1.1064|
                          DCD      MODBUS_ADRESS
                  |L1.1068|
                          DCD      MODBUS_BAUDRATE
                  |L1.1072|
                          DCD      Uvv_eb2
                  |L1.1076|
                          DCD      Upes_eb2
                  |L1.1080|
                          DCD      power_summary
                  |L1.1084|
                          DCD      power_current
                  |L1.1088|
                          DCD      ||area_number.9||
                  |L1.1092|
                          DCD      bps
                  |L1.1096|
                          DCD      U_up
                  |L1.1100|
                          DCD      I_ug
                  |L1.1104|
                          DCD      U_maxg
                  |L1.1108|
                          DCD      I_maxp
                  |L1.1112|
                          DCD      T_PROC_PS_MODE
                  |L1.1116|
                          DCD      T_PROC_PS
                  |L1.1120|
                          DCD      T_PROC_GS_MODE
                  |L1.1124|
                          DCD      T_PROC_GS
                  |L1.1128|
                          DCD      REV_STAT
                  |L1.1132|
                          DCD      AVT_REV_IS_ON
                  |L1.1136|
                          DCD      AVT_REV_TIME_FF
                  |L1.1140|
                          DCD      AVT_REV_TIME_REW
                  |L1.1144|
                          DCD      AVT_REV_TIME_PAUSE
                  |L1.1148|
                          DCD      AVT_REV_I_NOM_FF
                  |L1.1152|
                          DCD      AVT_REV_I_NOM_REW
                  |L1.1156|
                          DCD      AVT_REV_U_NOM_FF
                  |L1.1160|
                          DCD      AVT_REV_U_NOM_REW
                  |L1.1164|
                          DCD      ||area_number.9||+0x104
                  |L1.1168|
                          DCD      avt_stat
                  |L1.1172|
                          DCD      sk_in_drv_stat
                  |L1.1176|
                          DCD      work_stat
                  |L1.1180|
                          DCD      bRAZR
                  |L1.1184|
                          DCD      bCURRENT_STAB
                  |L1.1188|
                          DCD      bVOLT_IS_NORM
                  |L1.1192|
                          DCD      bVOLT_IS_NOT_UP
                  |L1.1196|
                          DCD      bVOLT_IS_NOT_DOWN
                  |L1.1200|
                          DCD      U_MAX
                  |L1.1204|
                          DCD      U_MIN
                  |L1.1208|
                          DCD      I_MAX_IPS
                  |L1.1212|
                          DCD      I_MIN_IPS
0004c0  e000              B        |L1.1220|
0004c2  e002              B        |L1.1226|
                  |L1.1220|
0004c4  211d              MOVS     r1,#0x1d              ;579
0004c6  6541              STR      r1,[r0,#0x54]         ;579  ; snmp_time_p
0004c8  e78b              B        |L1.994|
                  |L1.1226|
;;;586    			}
;;;587    		}
;;;588    	else if((snmp_time_p>=30)&&(snmp_time_p<=T_PROC_MAX))
;;;589    		{
;;;590    		lc640_write_int(EE_T_PROC_PS,snmp_time_p);
0004ca  b209              SXTH     r1,r1
0004cc  20dc              MOVS     r0,#0xdc
0004ce  f7fffffe          BL       lc640_write_int
;;;591    		if(T_PROC_PS_MODE!=0)
0004d2  8820              LDRH     r0,[r4,#0]  ; T_PROC_PS_MODE
0004d4  2800              CMP      r0,#0
0004d6  d006              BEQ      |L1.1254|
;;;592    			{
;;;593    			T_PROC_PS_MODE=0;	
0004d8  2100              MOVS     r1,#0
                  |L1.1242|
0004da  8021              STRH     r1,[r4,#0]
;;;594    			lc640_write_int(EE_T_PROC_PS_MODE,T_PROC_PS_MODE);
0004dc  e8bd4010          POP      {r4,lr}
0004e0  20f0              MOVS     r0,#0xf0
0004e2  f7ffbffe          B.W      lc640_write_int
                  |L1.1254|
;;;595    			}
;;;596    		}
;;;597    	}
;;;598    }
0004e6  bd10              POP      {r4,pc}
;;;599    //-----------------------------------------------
                          ENDP

                  snmp_time_g_write PROC
;;;600    void snmp_time_g_write(int mode)  	
0004e8  b510              PUSH     {r4,lr}
;;;601    {
;;;602    if(mode==MIB_WRITE)
0004ea  2801              CMP      r0,#1
0004ec  d125              BNE      |L1.1338|
;;;603    	{
;;;604    	if((snmp_time_g<30)||(snmp_time_g>T_PROC_MAX))
0004ee  4863              LDR      r0,|L1.1660|
;;;605    		{
;;;606    		if(snmp_time_g<30)snmp_time_g=29;
;;;607    		else if(snmp_time_g>T_PROC_MAX)snmp_time_g=T_PROC_MAX+1;
;;;608    		lc640_write_int(EE_T_PROC_GS,snmp_time_g);
;;;609    		if(T_PROC_GS_MODE!=1)
0004f0  4c63              LDR      r4,|L1.1664|
0004f2  6d81              LDR      r1,[r0,#0x58]         ;604  ; snmp_time_g
0004f4  291e              CMP      r1,#0x1e              ;604
0004f6  db0f              BLT      |L1.1304|
0004f8  4a62              LDR      r2,|L1.1668|
0004fa  6812              LDR      r2,[r2,#0]            ;604  ; T_PROC_MAX
0004fc  4291              CMP      r1,r2                 ;604
0004fe  dd0e              BLE      |L1.1310|
000500  1c52              ADDS     r2,r2,#1              ;607
000502  6582              STR      r2,[r0,#0x58]         ;607  ; snmp_time_g
                  |L1.1284|
000504  6d80              LDR      r0,[r0,#0x58]         ;608  ; snmp_time_g
000506  b201              SXTH     r1,r0                 ;608
000508  20d8              MOVS     r0,#0xd8              ;608
00050a  f7fffffe          BL       lc640_write_int
00050e  8820              LDRH     r0,[r4,#0]  ; T_PROC_GS_MODE
000510  2801              CMP      r0,#1
000512  d012              BEQ      |L1.1338|
;;;610    			{
;;;611    			T_PROC_GS_MODE=1;	
000514  2101              MOVS     r1,#1
;;;612    			lc640_write_int(EE_T_PROC_GS_MODE,T_PROC_GS_MODE);
000516  e00a              B        |L1.1326|
                  |L1.1304|
000518  211d              MOVS     r1,#0x1d              ;606
00051a  6581              STR      r1,[r0,#0x58]         ;606  ; snmp_time_g
00051c  e7f2              B        |L1.1284|
                  |L1.1310|
;;;613    			}
;;;614    		}
;;;615    	else if((snmp_time_g>=30)&&(snmp_time_g<=T_PROC_MAX))
;;;616    		{
;;;617    		lc640_write_int(EE_T_PROC_GS,snmp_time_g);
00051e  b209              SXTH     r1,r1
000520  20d8              MOVS     r0,#0xd8
000522  f7fffffe          BL       lc640_write_int
;;;618    		if(T_PROC_GS_MODE!=0)
000526  8820              LDRH     r0,[r4,#0]  ; T_PROC_GS_MODE
000528  2800              CMP      r0,#0
00052a  d006              BEQ      |L1.1338|
;;;619    			{
;;;620    			T_PROC_GS_MODE=0;	
00052c  2100              MOVS     r1,#0
                  |L1.1326|
00052e  8021              STRH     r1,[r4,#0]
;;;621    			lc640_write_int(EE_T_PROC_GS_MODE,T_PROC_GS_MODE);
000530  e8bd4010          POP      {r4,lr}
000534  20ee              MOVS     r0,#0xee
000536  f7ffbffe          B.W      lc640_write_int
                  |L1.1338|
;;;622    			}
;;;623    		}
;;;624    	}
;;;625    }
00053a  bd10              POP      {r4,pc}
;;;626    
                          ENDP

                  snmp_zv_on_write PROC
;;;629    //-----------------------------------------------
;;;630    void snmp_zv_on_write (int mode)
00053c  4770              BX       lr
;;;631    {
;;;632    if(mode==MIB_WRITE)
;;;633    	{
;;;634    //	lc640_write_int(EE_ZV_ON,snmp_zv_en);
;;;635    	}
;;;636    }
;;;637    
                          ENDP

                  snmp_alarm_auto_disable_write PROC
;;;638    //-----------------------------------------------
;;;639    void snmp_alarm_auto_disable_write (int mode)
00053e  4770              BX       lr
;;;640    {
;;;641    if(mode==MIB_WRITE)
;;;642    	{
;;;643    //     lc640_write_int(EE_AV_OFF_AVT,snmp_alarm_auto_disable);
;;;644    	}
;;;645    }
;;;646    
                          ENDP

                  snmp_bat_test_time_write PROC
;;;647    //-----------------------------------------------
;;;648    void snmp_bat_test_time_write (int mode)
000540  4770              BX       lr
;;;649    {
;;;650    if(mode==MIB_WRITE)
;;;651    	{
;;;652     //    lc640_write_int(EE_TBAT,snmp_bat_test_time);
;;;653    	}
;;;654    }
;;;655    
                          ENDP

                  snmp_u_max_write PROC
;;;656    //-----------------------------------------------
;;;657    void snmp_u_max_write (int mode)
000542  4770              BX       lr
;;;658    {
;;;659    if(mode==MIB_WRITE)
;;;660    	{
;;;661    //     lc640_write_int(EE_UMAX,snmp_u_max);
;;;662    	}
;;;663    }
;;;664    
                          ENDP

                  snmp_u_0_grad_write PROC
;;;665    //-----------------------------------------------
;;;666    void snmp_u_0_grad_write (int mode)
000544  4770              BX       lr
;;;667    {
;;;668    if(mode==MIB_WRITE)
;;;669    	{
;;;670     //    lc640_write_int(EE_UB0,snmp_u_0_grad);
;;;671    	}
;;;672    }
;;;673    //-----------------------------------------------
                          ENDP

                  snmp_u_20_grad_write PROC
;;;674    void snmp_u_20_grad_write (int mode)
000546  4770              BX       lr
;;;675    {
;;;676    if(mode==MIB_WRITE)
;;;677    	{
;;;678    //     lc640_write_int(EE_UB20,snmp_u_20_grad);
;;;679    	}
;;;680    }
;;;681    
                          ENDP

                  snmp_u_sign_write PROC
;;;682    //-----------------------------------------------
;;;683    void snmp_u_sign_write (int mode)
000548  4770              BX       lr
;;;684    {
;;;685    if(mode==MIB_WRITE)
;;;686    	{
;;;687     //    lc640_write_int(EE_USIGN,snmp_u_sign);
;;;688    	}
;;;689    }
;;;690    //-----------------------------------------------
                          ENDP

                  snmp_u_min_power_write PROC
;;;691    void snmp_u_min_power_write (int mode)
00054a  4770              BX       lr
;;;692    {
;;;693    if(mode==MIB_WRITE)
;;;694    	{
;;;695    //     lc640_write_int(EE_UMN,snmp_u_min_power);
;;;696    	}
;;;697    }
;;;698    //-----------------------------------------------
                          ENDP

                  snmp_u_withouth_bat_write PROC
;;;699    void snmp_u_withouth_bat_write (int mode)
00054c  4770              BX       lr
;;;700    {
;;;701    if(mode==MIB_WRITE)
;;;702    	{
;;;703    //     lc640_write_int(EE_U0B,snmp_u_withouth_bat);
;;;704    	}
;;;705    }
;;;706    
                          ENDP

                  snmp_control_current_write PROC
;;;707    //-----------------------------------------------
;;;708    void snmp_control_current_write (int mode)
00054e  4770              BX       lr
;;;709    {
;;;710    if(mode==MIB_WRITE)
;;;711    	{
;;;712    //     lc640_write_int(EE_IKB,snmp_control_current);
;;;713    	}
;;;714    }
;;;715    
                          ENDP

                  snmp_max_charge_current_write PROC
;;;716    //-----------------------------------------------
;;;717    void snmp_max_charge_current_write (int mode)
000550  4770              BX       lr
;;;718    {
;;;719    if(mode==MIB_WRITE)
;;;720    	{
;;;721    //     lc640_write_int(EE_IZMAX,snmp_max_charge_current);
;;;722    	}
;;;723    }
;;;724    
                          ENDP

                  snmp_max_current_write PROC
;;;725    //-----------------------------------------------
;;;726    void snmp_max_current_write (int mode)
000552  2801              CMP      r0,#1
;;;727    {
;;;728    if(mode==MIB_WRITE)
000554  d105              BNE      |L1.1378|
;;;729    	{
;;;730         lc640_write_int(EE_IMAX,snmp_max_current);
000556  4849              LDR      r0,|L1.1660|
000558  f9b0104c          LDRSH    r1,[r0,#0x4c]  ; snmp_max_current
00055c  208c              MOVS     r0,#0x8c
00055e  f7ffbffe          B.W      lc640_write_int
                  |L1.1378|
;;;731    	}
;;;732    }
000562  4770              BX       lr
;;;733    
                          ENDP

                  snmp_max_current_koef_write PROC
;;;734    //-----------------------------------------------
;;;735    void snmp_max_current_koef_write (int mode)
000564  4770              BX       lr
;;;736    {
;;;737    if(mode==MIB_WRITE)
;;;738    	{
;;;739     //    lc640_write_int(EE_KIMAX,snmp_max_current_koef);
;;;740    	}
;;;741    }
;;;742    
                          ENDP

                  snmp_up_charge_koef_write PROC
;;;743    //-----------------------------------------------
;;;744    void snmp_up_charge_koef_write (int mode)
000566  4770              BX       lr
;;;745    {
;;;746    if(mode==MIB_WRITE)
;;;747    	{
;;;748     //    lc640_write_int(EE_KVZ,snmp_up_charge_koef);
;;;749    	}
;;;750    }
;;;751    
                          ENDP

                  snmp_powerup_psu_timeout_write PROC
;;;752    //-----------------------------------------------
;;;753    void snmp_powerup_psu_timeout_write (int mode)
000568  2801              CMP      r0,#1
;;;754    {
;;;755    if(mode==MIB_WRITE)
00056a  d105              BNE      |L1.1400|
;;;756    	{
;;;757         lc640_write_int(EE_TZAS,snmp_powerup_psu_timeout);
00056c  4843              LDR      r0,|L1.1660|
00056e  f9b0104e          LDRSH    r1,[r0,#0x4e]  ; snmp_powerup_psu_timeout
000572  2096              MOVS     r0,#0x96
000574  f7ffbffe          B.W      lc640_write_int
                  |L1.1400|
;;;758    	}
;;;759    }
000578  4770              BX       lr
;;;760    
                          ENDP

                  snmp_max_temperature_write PROC
;;;761    //-----------------------------------------------
;;;762    void snmp_max_temperature_write (int mode)
00057a  4770              BX       lr
;;;763    {
;;;764    if(mode==MIB_WRITE)
;;;765    	{
;;;766     //    lc640_write_int(EE_TMAX,snmp_max_temperature);
;;;767    	}
;;;768    }
;;;769    
                          ENDP

                  snmp_reverse_state_write PROC
;;;770    //-----------------------------------------------
;;;771    void snmp_reverse_state_write (int mode)
00057c  4770              BX       lr
;;;772    {
;;;773    if(mode==MIB_WRITE)
;;;774    	{
;;;775     //    lc640_write_int(EE_KVZ,snmp_up_charge_koef);
;;;776    	}
;;;777    }
;;;778    
                          ENDP

                  snmp_avtoreverse_enable_write PROC
;;;779    //-----------------------------------------------
;;;780    void snmp_avtoreverse_enable_write(int mode)
00057e  2801              CMP      r0,#1
;;;781    {
;;;782    if(mode==MIB_WRITE)
000580  d106              BNE      |L1.1424|
;;;783    	{
;;;784     	lc640_write_int(EE_AVT_REV_IS_ON,snmp_avtoreverse_enable);
000582  483e              LDR      r0,|L1.1660|
000584  f9b0101c          LDRSH    r1,[r0,#0x1c]  ; snmp_avtoreverse_enable
000588  f44f7084          MOV      r0,#0x108
00058c  f7ffbffe          B.W      lc640_write_int
                  |L1.1424|
;;;785    	}
;;;786    }
000590  4770              BX       lr
;;;787    
                          ENDP

                  snmp_avtoreverse_ff_time_write PROC
;;;788    //-----------------------------------------------
;;;789    void snmp_avtoreverse_ff_time_write(int mode)
000592  2801              CMP      r0,#1
;;;790    {
;;;791    if(mode==MIB_WRITE)
000594  d106              BNE      |L1.1444|
;;;792    	{
;;;793     	lc640_write_int(EE_AVT_REV_TIME_FF,snmp_avtoreverse_ff_time);
000596  4839              LDR      r0,|L1.1660|
000598  f9b0101e          LDRSH    r1,[r0,#0x1e]  ; snmp_avtoreverse_ff_time
00059c  f44f7085          MOV      r0,#0x10a
0005a0  f7ffbffe          B.W      lc640_write_int
                  |L1.1444|
;;;794    	}
;;;795    }
0005a4  4770              BX       lr
;;;796    
                          ENDP

                  snmp_avtoreverse_rew_time_write PROC
;;;797    //-----------------------------------------------
;;;798    void snmp_avtoreverse_rew_time_write(int mode)
0005a6  2801              CMP      r0,#1
;;;799    {
;;;800    if(mode==MIB_WRITE)
0005a8  d106              BNE      |L1.1464|
;;;801    	{
;;;802     	lc640_write_int(EE_AVT_REV_TIME_REW,snmp_avtoreverse_rew_time);
0005aa  4834              LDR      r0,|L1.1660|
0005ac  f9b01020          LDRSH    r1,[r0,#0x20]  ; snmp_avtoreverse_rew_time
0005b0  f44f7086          MOV      r0,#0x10c
0005b4  f7ffbffe          B.W      lc640_write_int
                  |L1.1464|
;;;803    	}
;;;804    }
0005b8  4770              BX       lr
;;;805    
                          ENDP

                  snmp_avtoreverse_pause_time_write PROC
;;;806    //-----------------------------------------------
;;;807    void snmp_avtoreverse_pause_time_write(int mode)
0005ba  2801              CMP      r0,#1
;;;808    {
;;;809    if(mode==MIB_WRITE)
0005bc  d106              BNE      |L1.1484|
;;;810    	{
;;;811     	lc640_write_int(EE_AVT_REV_TIME_PAUSE,snmp_avtoreverse_pause_time);	
0005be  482f              LDR      r0,|L1.1660|
0005c0  f9b01022          LDRSH    r1,[r0,#0x22]  ; snmp_avtoreverse_pause_time
0005c4  f44f7087          MOV      r0,#0x10e
0005c8  f7ffbffe          B.W      lc640_write_int
                  |L1.1484|
;;;812    	}
;;;813    }
0005cc  4770              BX       lr
;;;814    
                          ENDP

                  snmp_avtoreverse_ff_i_write PROC
;;;815    //-----------------------------------------------
;;;816    void snmp_avtoreverse_ff_i_write(int mode)
0005ce  2801              CMP      r0,#1
;;;817    {
;;;818    if(mode==MIB_WRITE)
0005d0  d106              BNE      |L1.1504|
;;;819    	{
;;;820     	lc640_write_int(EE_AVT_REV_I_NOM_FF,snmp_avtoreverse_ff_i);
0005d2  482a              LDR      r0,|L1.1660|
0005d4  f9b01024          LDRSH    r1,[r0,#0x24]  ; snmp_avtoreverse_ff_i
0005d8  f44f7088          MOV      r0,#0x110
0005dc  f7ffbffe          B.W      lc640_write_int
                  |L1.1504|
;;;821    	}
;;;822    }
0005e0  4770              BX       lr
;;;823    
                          ENDP

                  snmp_avtoreverse_rew_i_write PROC
;;;824    //-----------------------------------------------
;;;825    void snmp_avtoreverse_rew_i_write(int mode)
0005e2  2801              CMP      r0,#1
;;;826    {
;;;827    if(mode==MIB_WRITE)
0005e4  d106              BNE      |L1.1524|
;;;828    	{
;;;829     	lc640_write_int(EE_AVT_REV_I_NOM_REW,snmp_avtoreverse_rew_i);
0005e6  4825              LDR      r0,|L1.1660|
0005e8  f9b01026          LDRSH    r1,[r0,#0x26]  ; snmp_avtoreverse_rew_i
0005ec  f44f7089          MOV      r0,#0x112
0005f0  f7ffbffe          B.W      lc640_write_int
                  |L1.1524|
;;;830    	}
;;;831    }
0005f4  4770              BX       lr
;;;832    
                          ENDP

                  snmp_avtoreverse_ff_u_write PROC
;;;833    //-----------------------------------------------
;;;834    void snmp_avtoreverse_ff_u_write(int mode)
0005f6  2801              CMP      r0,#1
;;;835    {
;;;836    if(mode==MIB_WRITE)
0005f8  d106              BNE      |L1.1544|
;;;837    	{
;;;838     	lc640_write_int(EE_AVT_REV_U_NOM_FF,snmp_avtoreverse_ff_u);
0005fa  4820              LDR      r0,|L1.1660|
0005fc  f9b01028          LDRSH    r1,[r0,#0x28]  ; snmp_avtoreverse_ff_u
000600  f44f708a          MOV      r0,#0x114
000604  f7ffbffe          B.W      lc640_write_int
                  |L1.1544|
;;;839    	}
;;;840    }
000608  4770              BX       lr
;;;841    
                          ENDP

                  snmp_avtoreverse_rew_u_write PROC
;;;842    //-----------------------------------------------
;;;843    void snmp_avtoreverse_rew_u_write(int mode)
00060a  2801              CMP      r0,#1
;;;844    {
;;;845    if(mode==MIB_WRITE)
00060c  d106              BNE      |L1.1564|
;;;846    	{
;;;847     	lc640_write_int(EE_AVT_REV_U_NOM_REW,snmp_avtoreverse_rew_u);
00060e  481b              LDR      r0,|L1.1660|
000610  f9b0102a          LDRSH    r1,[r0,#0x2a]  ; snmp_avtoreverse_rew_u
000614  f44f708b          MOV      r0,#0x116
000618  f7ffbffe          B.W      lc640_write_int
                  |L1.1564|
;;;848    	}
;;;849    }
00061c  4770              BX       lr
;;;850    
                          ENDP

                  snmp_command_execute PROC
;;;851    //-----------------------------------------------
;;;852    void snmp_command_execute (int mode)
00061e  b510              PUSH     {r4,lr}
;;;853    {
;;;854    if(mode==MIB_WRITE)
000620  2801              CMP      r0,#1
000622  d110              BNE      |L1.1606|
;;;855    	{
;;;856    	
;;;857    	//snmp_command=0x5555;
;;;858    
;;;859    	switch (snmp_command)
000624  4815              LDR      r0,|L1.1660|
;;;860    		{
;;;861    		case SNMP_PS_START:
;;;862    			{
;;;863    			snmp_command=COMMAND_OK;
000626  f2455155          MOV      r1,#0x5555
00062a  f9b0204a          LDRSH    r2,[r0,#0x4a]         ;859  ; snmp_command
00062e  2a03              CMP      r2,#3                 ;859
000630  d00a              BEQ      |L1.1608|
000632  2a04              CMP      r2,#4                 ;859
000634  d00e              BEQ      |L1.1620|
000636  2a05              CMP      r2,#5                 ;859
000638  d012              BEQ      |L1.1632|
00063a  2a06              CMP      r2,#6                 ;859
00063c  d016              BEQ      |L1.1644|
;;;864    
;;;865    			start_PS();
;;;866    			
;;;867    			break;
;;;868    			}
;;;869    
;;;870    		case SNMP_GS_START:
;;;871    			{
;;;872    			snmp_command=COMMAND_OK;
;;;873     			
;;;874    			start_GS();
;;;875    
;;;876    			break;
;;;877    			}
;;;878    
;;;879    		case SNMP_CAP_START:
;;;880    			{
;;;881    			snmp_command=COMMAND_OK;
;;;882    		 	
;;;883    			start_CAP();
;;;884    
;;;885    			break;
;;;886    			}
;;;887    
;;;888    
;;;889    		case SNMP_PROC_STOP:
;;;890    			{
;;;891    			snmp_command=COMMAND_OK;
;;;892    			
;;;893    			stop_CAP();
;;;894    			stop_proc();
;;;895    			break;
;;;896    			}
;;;897    
;;;898    
;;;899    		default:
;;;900    			{
;;;901    			snmp_command=COMMAND_INVALID;
00063e  f64e61ee          MOV      r1,#0xeeee
000642  f8a0104a          STRH     r1,[r0,#0x4a]
                  |L1.1606|
;;;902    			break;
;;;903    			}
;;;904    		}
;;;905    /*		else if((UIB2[1]==0x52)&&(UIB2[4]==5)&&(UIB2[5]==5)&&(UIB2[6])&&(UIB2[6]<=NUMIST)&&(UIB2[6]==UIB2[7])) 	//Выключение источника 
;;;906    		{
;;;907    	
;;;908    		if((UIB2[6]==1)&&(UIB2[7]==1)) 
;;;909    			{
;;;910    			St_[0]|=0x20;
;;;911    			St_[1]&=0xdf;
;;;912    			St&=0xfb;
;;;913    			cnt_src[1]=10;
;;;914    			}
;;;915    			
;;;916    		else if((UIB2[6]==2)&&(UIB2[7]==2))
;;;917    			{
;;;918    			St_[1]|=0x20;
;;;919    			St_[0]&=0xdf;
;;;920    			St&=0xfb;
;;;921    			cnt_src[0]=10;
;;;922    			}	
;;;923    		
;;;924         	memo_out2[0]=0x33;
;;;925         	memo_out2[1]=0x62;
;;;926         	memo_out2[2]=4;
;;;927         	memo_out2[3]=0x03;
;;;928         	
;;;929         	memo_out2[4]=5;
;;;930         	memo_out2[5]=5;
;;;931         	memo_out2[6]=UIB2[6];
;;;932         	memo_out2[7]=UIB2[6];
;;;933             	memo_out2[8]=crc_87(memo_out2,8);
;;;934    		memo_out2[9]=crc_95(memo_out2,8);
;;;935         	uart_out_adr2(memo_out2,10); 		
;;;936    		} */
;;;937    
;;;938    
;;;939    
;;;940    	}
;;;941    }
000646  bd10              POP      {r4,pc}
                  |L1.1608|
000648  f8a0104a          STRH     r1,[r0,#0x4a]         ;863
00064c  e8bd4010          POP      {r4,lr}               ;865
000650  f7ffbffe          B.W      start_PS
                  |L1.1620|
000654  f8a0104a          STRH     r1,[r0,#0x4a]         ;872
000658  e8bd4010          POP      {r4,lr}               ;874
00065c  f7ffbffe          B.W      start_GS
                  |L1.1632|
000660  f8a0104a          STRH     r1,[r0,#0x4a]         ;881
000664  e8bd4010          POP      {r4,lr}               ;883
000668  f7ffbffe          B.W      start_CAP
                  |L1.1644|
00066c  f8a0104a          STRH     r1,[r0,#0x4a]         ;891
000670  f7fffffe          BL       stop_CAP
000674  e8bd4010          POP      {r4,lr}               ;894
000678  f7ffbffe          B.W      stop_proc
;;;942    
                          ENDP

                  |L1.1660|
                          DCD      ||area_number.12||
                  |L1.1664|
                          DCD      T_PROC_GS_MODE
                  |L1.1668|
                          DCD      T_PROC_MAX

                          AREA ||area_number.2||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.2||, ||.text||
                  snmp_sernum_write PROC
;;;943    //-----------------------------------------------
;;;944    char* datatime2str(char day,char month,char year, char hour, char min, char sec)
000000  4770              BX       lr
;;;945    {
;;;946    
;;;947    memcpy(temp_str,"00/янв/00  00:00:00       ",20);
;;;948    
;;;949    temp_str[1]=(day%10)+0x30;
;;;950    temp_str[0]=(day/10)+0x30;
;;;951    
;;;952    memcpy(&temp_str[3],sm_mont[month],3);
;;;953    
;;;954    temp_str[8]=(year%10)+0x30;
;;;955    temp_str[7]=(year/10)+0x30;
;;;956    
;;;957    temp_str[12]=(hour%10)+0x30;
;;;958    temp_str[11]=(hour/10)+0x30;
;;;959    
;;;960    temp_str[15]=(min%10)+0x30;
;;;961    temp_str[14]=(min/10)+0x30;
;;;962    
;;;963    temp_str[18]=(sec%10)+0x30;
;;;964    temp_str[17]=(sec/10)+0x30;
;;;965    return temp_str;
;;;966    }
;;;967    
                          ENDP


                          AREA ||area_number.3||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.3||, ||.text||
                  snmp_location_write PROC
;;;943    //-----------------------------------------------
;;;944    char* datatime2str(char day,char month,char year, char hour, char min, char sec)
000000  4770              BX       lr
;;;945    {
;;;946    
;;;947    memcpy(temp_str,"00/янв/00  00:00:00       ",20);
;;;948    
;;;949    temp_str[1]=(day%10)+0x30;
;;;950    temp_str[0]=(day/10)+0x30;
;;;951    
;;;952    memcpy(&temp_str[3],sm_mont[month],3);
;;;953    
;;;954    temp_str[8]=(year%10)+0x30;
;;;955    temp_str[7]=(year/10)+0x30;
;;;956    
;;;957    temp_str[12]=(hour%10)+0x30;
;;;958    temp_str[11]=(hour/10)+0x30;
;;;959    
;;;960    temp_str[15]=(min%10)+0x30;
;;;961    temp_str[14]=(min/10)+0x30;
;;;962    
;;;963    temp_str[18]=(sec%10)+0x30;
;;;964    temp_str[17]=(sec/10)+0x30;
;;;965    return temp_str;
;;;966    }
;;;967    
                          ENDP


                          AREA ||area_number.4||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.4||, ||.text||
                  datatime2str PROC
;;;943    //-----------------------------------------------
;;;944    char* datatime2str(char day,char month,char year, char hour, char min, char sec)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;945    {
000004  4607              MOV      r7,r0
000006  e9dd8908          LDRD     r8,r9,[sp,#0x20]
00000a  460c              MOV      r4,r1
00000c  4615              MOV      r5,r2
00000e  461e              MOV      r6,r3
;;;946    
;;;947    memcpy(temp_str,"00/янв/00  00:00:00       ",20);
000010  2214              MOVS     r2,#0x14
000012  a11d              ADR      r1,|L4.136|
000014  4823              LDR      r0,|L4.164|
000016  f7fffffe          BL       __aeabi_memcpy
;;;948    
;;;949    temp_str[1]=(day%10)+0x30;
00001a  210a              MOVS     r1,#0xa
00001c  fbb7f2f1          UDIV     r2,r7,r1
000020  fb017312          MLS      r3,r1,r2,r7
000024  481f              LDR      r0,|L4.164|
000026  3330              ADDS     r3,r3,#0x30
;;;950    temp_str[0]=(day/10)+0x30;
000028  3230              ADDS     r2,r2,#0x30
00002a  7043              STRB     r3,[r0,#1]            ;949
00002c  7002              STRB     r2,[r0,#0]
;;;951    
;;;952    memcpy(&temp_str[3],sm_mont[month],3);
00002e  4a1e              LDR      r2,|L4.168|
000030  f1a00330          SUB      r3,r0,#0x30
000034  eb020284          ADD      r2,r2,r4,LSL #2
000038  8814              LDRH     r4,[r2,#0]
00003a  f8a34033          STRH     r4,[r3,#0x33]
00003e  7892              LDRB     r2,[r2,#2]
000040  f8832035          STRB     r2,[r3,#0x35]
;;;953    
;;;954    temp_str[8]=(year%10)+0x30;
000044  fbb5f2f1          UDIV     r2,r5,r1
000048  fb015312          MLS      r3,r1,r2,r5
00004c  3330              ADDS     r3,r3,#0x30
00004e  7203              STRB     r3,[r0,#8]
;;;955    temp_str[7]=(year/10)+0x30;
000050  3230              ADDS     r2,r2,#0x30
000052  71c2              STRB     r2,[r0,#7]
;;;956    
;;;957    temp_str[12]=(hour%10)+0x30;
000054  fbb6f2f1          UDIV     r2,r6,r1
000058  fb016312          MLS      r3,r1,r2,r6
00005c  3330              ADDS     r3,r3,#0x30
00005e  7303              STRB     r3,[r0,#0xc]
;;;958    temp_str[11]=(hour/10)+0x30;
000060  3230              ADDS     r2,r2,#0x30
000062  72c2              STRB     r2,[r0,#0xb]
;;;959    
;;;960    temp_str[15]=(min%10)+0x30;
000064  fbb8f2f1          UDIV     r2,r8,r1
000068  fb018312          MLS      r3,r1,r2,r8
00006c  3330              ADDS     r3,r3,#0x30
00006e  73c3              STRB     r3,[r0,#0xf]
;;;961    temp_str[14]=(min/10)+0x30;
000070  3230              ADDS     r2,r2,#0x30
000072  7382              STRB     r2,[r0,#0xe]
;;;962    
;;;963    temp_str[18]=(sec%10)+0x30;
000074  fbb9f2f1          UDIV     r2,r9,r1
000078  fb019112          MLS      r1,r1,r2,r9
00007c  3130              ADDS     r1,r1,#0x30
00007e  7481              STRB     r1,[r0,#0x12]
;;;964    temp_str[17]=(sec/10)+0x30;
000080  3230              ADDS     r2,r2,#0x30
000082  7442              STRB     r2,[r0,#0x11]
;;;965    return temp_str;
;;;966    }
000084  e8bd87f0          POP      {r4-r10,pc}
;;;967    
                          ENDP

                  |L4.136|
000088  30302fff          DCB      "00/",255,237,226,"/00  00:00:00       ",0
00008c  ede22f30
000090  30202030
000094  303a3030
000098  3a303020
00009c  20202020
0000a0  202000  
0000a3  00                DCB      0
                  |L4.164|
                          DCD      ||area_number.9||+0x130
                  |L4.168|
                          DCD      sm_mont

                          AREA ||area_number.5||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.5||, ||.text||
                  event2snmp PROC
;;;943    //-----------------------------------------------
;;;944    char* datatime2str(char day,char month,char year, char hour, char min, char sec)
000000  4770              BX       lr
;;;945    {
;;;946    
;;;947    memcpy(temp_str,"00/янв/00  00:00:00       ",20);
;;;948    
;;;949    temp_str[1]=(day%10)+0x30;
;;;950    temp_str[0]=(day/10)+0x30;
;;;951    
;;;952    memcpy(&temp_str[3],sm_mont[month],3);
;;;953    
;;;954    temp_str[8]=(year%10)+0x30;
;;;955    temp_str[7]=(year/10)+0x30;
;;;956    
;;;957    temp_str[12]=(hour%10)+0x30;
;;;958    temp_str[11]=(hour/10)+0x30;
;;;959    
;;;960    temp_str[15]=(min%10)+0x30;
;;;961    temp_str[14]=(min/10)+0x30;
;;;962    
;;;963    temp_str[18]=(sec%10)+0x30;
;;;964    temp_str[17]=(sec/10)+0x30;
;;;965    return temp_str;
;;;966    }
;;;967    
                          ENDP


                          AREA ||area_number.6||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.6||, ||.text||
                  snmp_trap_send PROC
;;;943    //-----------------------------------------------
;;;944    char* datatime2str(char day,char month,char year, char hour, char min, char sec)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;945    {
000004  4c79              LDR      r4,|L6.492|
000006  2700              MOVS     r7,#0
000008  f8dfc1e4          LDR      r12,|L6.496|
00000c  7027              STRB     r7,[r4,#0]
                  |L6.14|
00000e  7825              LDRB     r5,[r4,#0]  ; snmp_trap_send_i
;;;946    
;;;947    memcpy(temp_str,"00/янв/00  00:00:00       ",20);
000010  f80c7005          STRB     r7,[r12,r5]
000014  1c6d              ADDS     r5,r5,#1
000016  b2ed              UXTB     r5,r5
000018  7025              STRB     r5,[r4,#0]
;;;948    
;;;949    temp_str[1]=(day%10)+0x30;
00001a  2d64              CMP      r5,#0x64
00001c  d3f7              BCC      |L6.14|
00001e  4d74              LDR      r5,|L6.496|
000020  357c              ADDS     r5,r5,#0x7c
000022  2601              MOVS     r6,#1
000024  802f              STRH     r7,[r5,#0]
000026  7066              STRB     r6,[r4,#1]
;;;950    temp_str[0]=(day/10)+0x30;
000028  b1a0              CBZ      r0,|L6.84|
00002a  802e              STRH     r6,[r5,#0]            ;949
00002c  7027              STRB     r7,[r4,#0]
;;;951    
;;;952    memcpy(&temp_str[3],sm_mont[month],3);
00002e  e006              B        |L6.62|
                  |L6.48|
000030  f80ce007          STRB     lr,[r12,r7]
000034  1c7f              ADDS     r7,r7,#1
000036  b2ff              UXTB     r7,r7
000038  7027              STRB     r7,[r4,#0]
00003a  2f64              CMP      r7,#0x64
00003c  d205              BCS      |L6.74|
                  |L6.62|
00003e  b2ff              UXTB     r7,r7
000040  f810e007          LDRB     lr,[r0,r7]
;;;953    
;;;954    temp_str[8]=(year%10)+0x30;
000044  f1be0f00          CMP      lr,#0
000048  d1f2              BNE      |L6.48|
                  |L6.74|
00004a  2007              MOVS     r0,#7
00004c  f8250016          STRH     r0,[r5,r6,LSL #1]
;;;955    temp_str[7]=(year/10)+0x30;
000050  1c76              ADDS     r6,r6,#1
000052  7066              STRB     r6,[r4,#1]
                  |L6.84|
;;;956    
;;;957    temp_str[12]=(hour%10)+0x30;
000054  f64f76ff          MOV      r6,#0xffff
000058  42b1              CMP      r1,r6
00005a  d009              BEQ      |L6.112|
00005c  8828              LDRH     r0,[r5,#0]  ; obj
00005e  1c40              ADDS     r0,r0,#1
;;;958    temp_str[11]=(hour/10)+0x30;
000060  8028              STRH     r0,[r5,#0]
000062  86a1              STRH     r1,[r4,#0x34]
;;;959    
;;;960    temp_str[15]=(min%10)+0x30;
000064  7860              LDRB     r0,[r4,#1]  ; snmp_trap_send_ii
000066  2108              MOVS     r1,#8
000068  f8251010          STRH     r1,[r5,r0,LSL #1]
00006c  1c40              ADDS     r0,r0,#1
00006e  7060              STRB     r0,[r4,#1]
                  |L6.112|
;;;961    temp_str[14]=(min/10)+0x30;
000070  42b2              CMP      r2,r6
000072  d009              BEQ      |L6.136|
;;;962    
;;;963    temp_str[18]=(sec%10)+0x30;
000074  8828              LDRH     r0,[r5,#0]  ; obj
000076  2109              MOVS     r1,#9
000078  1c40              ADDS     r0,r0,#1
00007a  8028              STRH     r0,[r5,#0]
00007c  86e2              STRH     r2,[r4,#0x36]
00007e  7860              LDRB     r0,[r4,#1]  ; snmp_trap_send_ii
;;;964    temp_str[17]=(sec/10)+0x30;
000080  f8251010          STRH     r1,[r5,r0,LSL #1]
;;;965    return temp_str;
;;;966    }
000084  1c40              ADDS     r0,r0,#1
000086  7060              STRB     r0,[r4,#1]
                  |L6.136|
000088  42b3              CMP      r3,r6
00008a  d009              BEQ      |L6.160|
00008c  8828              LDRH     r0,[r5,#0]  ; obj
00008e  210a              MOVS     r1,#0xa
000090  1c40              ADDS     r0,r0,#1
000092  8028              STRH     r0,[r5,#0]
000094  8723              STRH     r3,[r4,#0x38]
000096  7860              LDRB     r0,[r4,#1]  ; snmp_trap_send_ii
000098  f8251010          STRH     r1,[r5,r0,LSL #1]
00009c  1c40              ADDS     r0,r0,#1
00009e  7060              STRB     r0,[r4,#1]
                  |L6.160|
0000a0  4854              LDR      r0,|L6.500|
0000a2  4c52              LDR      r4,|L6.492|
0000a4  f9b03000          LDRSH    r3,[r0,#0]  ; ETH_TRAP1_IP_1
0000a8  3460              ADDS     r4,r4,#0x60
0000aa  2bff              CMP      r3,#0xff
0000ac  d019              BEQ      |L6.226|
0000ae  4852              LDR      r0,|L6.504|
0000b0  f9b00000          LDRSH    r0,[r0,#0]  ; ETH_TRAP1_IP_2
0000b4  28ff              CMP      r0,#0xff
0000b6  d014              BEQ      |L6.226|
0000b8  4950              LDR      r1,|L6.508|
0000ba  f9b11000          LDRSH    r1,[r1,#0]  ; ETH_TRAP1_IP_3
0000be  29ff              CMP      r1,#0xff
0000c0  d00f              BEQ      |L6.226|
0000c2  4a4f              LDR      r2,|L6.512|
0000c4  f9b22000          LDRSH    r2,[r2,#0]  ; ETH_TRAP1_IP_4
0000c8  2aff              CMP      r2,#0xff
0000ca  d00a              BEQ      |L6.226|
0000cc  7023              STRB     r3,[r4,#0]
0000ce  7060              STRB     r0,[r4,#1]
0000d0  70a1              STRB     r1,[r4,#2]
0000d2  4b47              LDR      r3,|L6.496|
0000d4  70e2              STRB     r2,[r4,#3]
0000d6  337c              ADDS     r3,r3,#0x7c
0000d8  2203              MOVS     r2,#3
0000da  2106              MOVS     r1,#6
0000dc  4620              MOV      r0,r4
0000de  f7fffffe          BL       snmp_trap
                  |L6.226|
0000e2  4848              LDR      r0,|L6.516|
0000e4  f9b03000          LDRSH    r3,[r0,#0]  ; ETH_TRAP2_IP_1
0000e8  2bff              CMP      r3,#0xff
0000ea  d01a              BEQ      |L6.290|
0000ec  4846              LDR      r0,|L6.520|
0000ee  f9b00000          LDRSH    r0,[r0,#0]  ; ETH_TRAP2_IP_2
0000f2  28ff              CMP      r0,#0xff
0000f4  d015              BEQ      |L6.290|
0000f6  4945              LDR      r1,|L6.524|
0000f8  f9b12000          LDRSH    r2,[r1,#0]  ; ETH_TRAP2_IP_3
0000fc  2aff              CMP      r2,#0xff
0000fe  d010              BEQ      |L6.290|
000100  4943              LDR      r1,|L6.528|
000102  f9b11000          LDRSH    r1,[r1,#0]  ; ETH_TRAP2_IP_4
000106  29ff              CMP      r1,#0xff
000108  d00b              BEQ      |L6.290|
00010a  7023              STRB     r3,[r4,#0]
00010c  7060              STRB     r0,[r4,#1]
00010e  70a2              STRB     r2,[r4,#2]
000110  4b37              LDR      r3,|L6.496|
000112  4836              LDR      r0,|L6.492|
000114  70e1              STRB     r1,[r4,#3]
000116  337c              ADDS     r3,r3,#0x7c
000118  2203              MOVS     r2,#3
00011a  2106              MOVS     r1,#6
00011c  3060              ADDS     r0,r0,#0x60
00011e  f7fffffe          BL       snmp_trap
                  |L6.290|
000122  483c              LDR      r0,|L6.532|
000124  f9b03000          LDRSH    r3,[r0,#0]  ; ETH_TRAP3_IP_1
000128  2bff              CMP      r3,#0xff
00012a  d01a              BEQ      |L6.354|
00012c  483a              LDR      r0,|L6.536|
00012e  f9b00000          LDRSH    r0,[r0,#0]  ; ETH_TRAP3_IP_2
000132  28ff              CMP      r0,#0xff
000134  d015              BEQ      |L6.354|
000136  4939              LDR      r1,|L6.540|
000138  f9b11000          LDRSH    r1,[r1,#0]  ; ETH_TRAP3_IP_3
00013c  29ff              CMP      r1,#0xff
00013e  d010              BEQ      |L6.354|
000140  4a37              LDR      r2,|L6.544|
000142  f9b22000          LDRSH    r2,[r2,#0]  ; ETH_TRAP3_IP_4
000146  2aff              CMP      r2,#0xff
000148  d00b              BEQ      |L6.354|
00014a  7023              STRB     r3,[r4,#0]
00014c  7060              STRB     r0,[r4,#1]
00014e  70a1              STRB     r1,[r4,#2]
000150  4b27              LDR      r3,|L6.496|
000152  4826              LDR      r0,|L6.492|
000154  70e2              STRB     r2,[r4,#3]
000156  337c              ADDS     r3,r3,#0x7c
000158  2203              MOVS     r2,#3
00015a  2106              MOVS     r1,#6
00015c  3060              ADDS     r0,r0,#0x60
00015e  f7fffffe          BL       snmp_trap
                  |L6.354|
000162  4830              LDR      r0,|L6.548|
000164  f9b03000          LDRSH    r3,[r0,#0]  ; ETH_TRAP4_IP_1
000168  2bff              CMP      r3,#0xff
00016a  d01a              BEQ      |L6.418|
00016c  482e              LDR      r0,|L6.552|
00016e  f9b00000          LDRSH    r0,[r0,#0]  ; ETH_TRAP4_IP_2
000172  28ff              CMP      r0,#0xff
000174  d015              BEQ      |L6.418|
000176  492d              LDR      r1,|L6.556|
000178  f9b12000          LDRSH    r2,[r1,#0]  ; ETH_TRAP4_IP_3
00017c  2aff              CMP      r2,#0xff
00017e  d010              BEQ      |L6.418|
000180  492b              LDR      r1,|L6.560|
000182  f9b11000          LDRSH    r1,[r1,#0]  ; ETH_TRAP4_IP_4
000186  29ff              CMP      r1,#0xff
000188  d00b              BEQ      |L6.418|
00018a  7023              STRB     r3,[r4,#0]
00018c  7060              STRB     r0,[r4,#1]
00018e  70a2              STRB     r2,[r4,#2]
000190  4b17              LDR      r3,|L6.496|
000192  4816              LDR      r0,|L6.492|
000194  70e1              STRB     r1,[r4,#3]
000196  337c              ADDS     r3,r3,#0x7c
000198  2203              MOVS     r2,#3
00019a  2106              MOVS     r1,#6
00019c  3060              ADDS     r0,r0,#0x60
00019e  f7fffffe          BL       snmp_trap
                  |L6.418|
0001a2  4824              LDR      r0,|L6.564|
0001a4  f9b03000          LDRSH    r3,[r0,#0]  ; ETH_TRAP5_IP_1
0001a8  2bff              CMP      r3,#0xff
0001aa  d01c              BEQ      |L6.486|
0001ac  4822              LDR      r0,|L6.568|
0001ae  f9b00000          LDRSH    r0,[r0,#0]  ; ETH_TRAP5_IP_2
0001b2  28ff              CMP      r0,#0xff
0001b4  d017              BEQ      |L6.486|
0001b6  4921              LDR      r1,|L6.572|
0001b8  f9b12000          LDRSH    r2,[r1,#0]  ; ETH_TRAP5_IP_3
0001bc  2aff              CMP      r2,#0xff
0001be  d012              BEQ      |L6.486|
0001c0  491f              LDR      r1,|L6.576|
0001c2  f9b11000          LDRSH    r1,[r1,#0]  ; ETH_TRAP5_IP_4
0001c6  29ff              CMP      r1,#0xff
0001c8  d00d              BEQ      |L6.486|
0001ca  7023              STRB     r3,[r4,#0]
0001cc  7060              STRB     r0,[r4,#1]
0001ce  70a2              STRB     r2,[r4,#2]
0001d0  70e1              STRB     r1,[r4,#3]
0001d2  e8bd41f0          POP      {r4-r8,lr}
0001d6  4b06              LDR      r3,|L6.496|
0001d8  4804              LDR      r0,|L6.492|
0001da  337c              ADDS     r3,r3,#0x7c
0001dc  2203              MOVS     r2,#3
0001de  2106              MOVS     r1,#6
0001e0  3060              ADDS     r0,r0,#0x60
0001e2  f7ffbffe          B.W      snmp_trap
                  |L6.486|
0001e6  e8bd81f0          POP      {r4-r8,pc}
;;;967    
                          ENDP

0001ea  0000              DCW      0x0000
                  |L6.492|
                          DCD      ||area_number.12||
                  |L6.496|
                          DCD      ||area_number.9||+0xa0
                  |L6.500|
                          DCD      ETH_TRAP1_IP_1
                  |L6.504|
                          DCD      ETH_TRAP1_IP_2
                  |L6.508|
                          DCD      ETH_TRAP1_IP_3
                  |L6.512|
                          DCD      ETH_TRAP1_IP_4
                  |L6.516|
                          DCD      ETH_TRAP2_IP_1
                  |L6.520|
                          DCD      ETH_TRAP2_IP_2
                  |L6.524|
                          DCD      ETH_TRAP2_IP_3
                  |L6.528|
                          DCD      ETH_TRAP2_IP_4
                  |L6.532|
                          DCD      ETH_TRAP3_IP_1
                  |L6.536|
                          DCD      ETH_TRAP3_IP_2
                  |L6.540|
                          DCD      ETH_TRAP3_IP_3
                  |L6.544|
                          DCD      ETH_TRAP3_IP_4
                  |L6.548|
                          DCD      ETH_TRAP4_IP_1
                  |L6.552|
                          DCD      ETH_TRAP4_IP_2
                  |L6.556|
                          DCD      ETH_TRAP4_IP_3
                  |L6.560|
                          DCD      ETH_TRAP4_IP_4
                  |L6.564|
                          DCD      ETH_TRAP5_IP_1
                  |L6.568|
                          DCD      ETH_TRAP5_IP_2
                  |L6.572|
                          DCD      ETH_TRAP5_IP_3
                  |L6.576|
                          DCD      ETH_TRAP5_IP_4

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  snmp_community
                          %        10

                          AREA ||area_number.9||, DATA, NOINIT, ALIGN=1

                          EXPORTAS ||area_number.9||, ||.bss||
                  snmp_bps_number
                          %        32
                  snmp_bps_voltage
                          %        32
                  snmp_bps_current
                          %        32
                  snmp_bps_temperature
                          %        32
                  snmp_bps_stat
                          %        32
                  snmp_spc_trap_message
                          %        100
                  snmp_avt_number
                          %        12
                  snmp_avt_stat
                          %        12
                  obj
                          %        20
                  temp_str
                          %        20

                          AREA ||.data||, DATA, ALIGN=0

                  snmp_log
000000  30314061          DCB      0x30,0x31,0x40,0x61
000004  62636440          DCB      0x62,0x63,0x64,0x40
000008  65666768          DCB      0x65,0x66,0x67,0x68
00000c  40696a6b          DCB      0x40,0x69,0x6a,0x6b
000010  6c403031          DCB      0x6c,0x40,0x30,0x31
000014  40202020          DCB      0x40,0x20,0x20,0x20
000018  20202020          DCB      0x20,0x20,0x20,0x20
00001c  20000000          DCB      0x20,0x00,0x00,0x00
                          %        96
000080  30324061          DCB      0x30,0x32,0x40,0x61
000084  62636440          DCB      0x62,0x63,0x64,0x40
000088  65666768          DCB      0x65,0x66,0x67,0x68
00008c  40696a6b          DCB      0x40,0x69,0x6a,0x6b
000090  6c403032          DCB      0x6c,0x40,0x30,0x32
000094  40202020          DCB      0x40,0x20,0x20,0x20
000098  20202020          DCB      0x20,0x20,0x20,0x20
00009c  20000000          DCB      0x20,0x00,0x00,0x00
                          %        96
000100  30334061          DCB      0x30,0x33,0x40,0x61
000104  62636440          DCB      0x62,0x63,0x64,0x40
000108  65666768          DCB      0x65,0x66,0x67,0x68
00010c  40696a6b          DCB      0x40,0x69,0x6a,0x6b
000110  6c403033          DCB      0x6c,0x40,0x30,0x33
000114  40202020          DCB      0x40,0x20,0x20,0x20
000118  20202020          DCB      0x20,0x20,0x20,0x20
00011c  20000000          DCB      0x20,0x00,0x00,0x00
                          %        96
000180  30344061          DCB      0x30,0x34,0x40,0x61
000184  62636440          DCB      0x62,0x63,0x64,0x40
000188  65666768          DCB      0x65,0x66,0x67,0x68
00018c  40696a6b          DCB      0x40,0x69,0x6a,0x6b
000190  6c403034          DCB      0x6c,0x40,0x30,0x34
000194  40202020          DCB      0x40,0x20,0x20,0x20
000198  20202020          DCB      0x20,0x20,0x20,0x20
00019c  20000000          DCB      0x20,0x00,0x00,0x00
                          %        96
000200  30354061          DCB      0x30,0x35,0x40,0x61
000204  62636440          DCB      0x62,0x63,0x64,0x40
000208  65666768          DCB      0x65,0x66,0x67,0x68
00020c  40696a6b          DCB      0x40,0x69,0x6a,0x6b
000210  6c403035          DCB      0x6c,0x40,0x30,0x35
000214  40202020          DCB      0x40,0x20,0x20,0x20
000218  20202020          DCB      0x20,0x20,0x20,0x20
00021c  20000000          DCB      0x20,0x00,0x00,0x00
                          %        96
000280  30364061          DCB      0x30,0x36,0x40,0x61
000284  62636440          DCB      0x62,0x63,0x64,0x40
000288  65666768          DCB      0x65,0x66,0x67,0x68
00028c  40696a6b          DCB      0x40,0x69,0x6a,0x6b
000290  6c403036          DCB      0x6c,0x40,0x30,0x36
000294  40202020          DCB      0x40,0x20,0x20,0x20
000298  20202020          DCB      0x20,0x20,0x20,0x20
00029c  20000000          DCB      0x20,0x00,0x00,0x00
                          %        96
000300  30374061          DCB      0x30,0x37,0x40,0x61
000304  62636440          DCB      0x62,0x63,0x64,0x40
000308  65666768          DCB      0x65,0x66,0x67,0x68
00030c  40696a6b          DCB      0x40,0x69,0x6a,0x6b
000310  6c403037          DCB      0x6c,0x40,0x30,0x37
000314  40202020          DCB      0x40,0x20,0x20,0x20
000318  20202020          DCB      0x20,0x20,0x20,0x20
00031c  20000000          DCB      0x20,0x00,0x00,0x00
                          %        96
000380  30384061          DCB      0x30,0x38,0x40,0x61
000384  62636440          DCB      0x62,0x63,0x64,0x40
000388  65666768          DCB      0x65,0x66,0x67,0x68
00038c  40696a6b          DCB      0x40,0x69,0x6a,0x6b
000390  6c403038          DCB      0x6c,0x40,0x30,0x38
000394  40202020          DCB      0x40,0x20,0x20,0x20
000398  20202020          DCB      0x20,0x20,0x20,0x20
00039c  20000000          DCB      0x20,0x00,0x00,0x00
                          %        96
000400  30394061          DCB      0x30,0x39,0x40,0x61
000404  62636440          DCB      0x62,0x63,0x64,0x40
000408  65666768          DCB      0x65,0x66,0x67,0x68
00040c  40696a6b          DCB      0x40,0x69,0x6a,0x6b
000410  6c403039          DCB      0x6c,0x40,0x30,0x39
000414  40202020          DCB      0x40,0x20,0x20,0x20
000418  20202020          DCB      0x20,0x20,0x20,0x20
00041c  20000000          DCB      0x20,0x00,0x00,0x00
                          %        96
000480  31304061          DCB      0x31,0x30,0x40,0x61
000484  62636440          DCB      0x62,0x63,0x64,0x40
000488  65666768          DCB      0x65,0x66,0x67,0x68
00048c  40696a6b          DCB      0x40,0x69,0x6a,0x6b
000490  6c403130          DCB      0x6c,0x40,0x31,0x30
000494  40202020          DCB      0x40,0x20,0x20,0x20
000498  20202020          DCB      0x20,0x20,0x20,0x20
00049c  20000000          DCB      0x20,0x00,0x00,0x00
                          %        96
000500  31314061          DCB      0x31,0x31,0x40,0x61
000504  62636440          DCB      0x62,0x63,0x64,0x40
000508  65666768          DCB      0x65,0x66,0x67,0x68
00050c  40696a6b          DCB      0x40,0x69,0x6a,0x6b
000510  6c403131          DCB      0x6c,0x40,0x31,0x31
000514  40202020          DCB      0x40,0x20,0x20,0x20
000518  20202020          DCB      0x20,0x20,0x20,0x20
00051c  20000000          DCB      0x20,0x00,0x00,0x00
                          %        96
000580  31324061          DCB      0x31,0x32,0x40,0x61
000584  62636440          DCB      0x62,0x63,0x64,0x40
000588  65666768          DCB      0x65,0x66,0x67,0x68
00058c  40696a6b          DCB      0x40,0x69,0x6a,0x6b
000590  6c403132          DCB      0x6c,0x40,0x31,0x32
000594  40202020          DCB      0x40,0x20,0x20,0x20
000598  20202020          DCB      0x20,0x20,0x20,0x20
00059c  20000000          DCB      0x20,0x00,0x00,0x00
                          %        96
000600  31334061          DCB      0x31,0x33,0x40,0x61
000604  62636440          DCB      0x62,0x63,0x64,0x40
000608  65666768          DCB      0x65,0x66,0x67,0x68
00060c  40696a6b          DCB      0x40,0x69,0x6a,0x6b
000610  6c403133          DCB      0x6c,0x40,0x31,0x33
000614  40202020          DCB      0x40,0x20,0x20,0x20
000618  20202020          DCB      0x20,0x20,0x20,0x20
00061c  20000000          DCB      0x20,0x00,0x00,0x00
                          %        96
000680  31344061          DCB      0x31,0x34,0x40,0x61
000684  62636440          DCB      0x62,0x63,0x64,0x40
000688  65666768          DCB      0x65,0x66,0x67,0x68
00068c  40696a6b          DCB      0x40,0x69,0x6a,0x6b
000690  6c403134          DCB      0x6c,0x40,0x31,0x34
000694  40202020          DCB      0x40,0x20,0x20,0x20
000698  20202020          DCB      0x20,0x20,0x20,0x20
00069c  20000000          DCB      0x20,0x00,0x00,0x00
                          %        96
000700  31354061          DCB      0x31,0x35,0x40,0x61
000704  62636440          DCB      0x62,0x63,0x64,0x40
000708  65666768          DCB      0x65,0x66,0x67,0x68
00070c  40696a6b          DCB      0x40,0x69,0x6a,0x6b
000710  6c403135          DCB      0x6c,0x40,0x31,0x35
000714  40202020          DCB      0x40,0x20,0x20,0x20
000718  20202020          DCB      0x20,0x20,0x20,0x20
00071c  20000000          DCB      0x20,0x00,0x00,0x00
                          %        96
000780  31364061          DCB      0x31,0x36,0x40,0x61
000784  62636440          DCB      0x62,0x63,0x64,0x40
000788  65666768          DCB      0x65,0x66,0x67,0x68
00078c  40696a6b          DCB      0x40,0x69,0x6a,0x6b
000790  6c403136          DCB      0x6c,0x40,0x31,0x36
000794  40202020          DCB      0x40,0x20,0x20,0x20
000798  20202020          DCB      0x20,0x20,0x20,0x20
00079c  20000000          DCB      0x20,0x00,0x00,0x00
                          %        96
000800  31374061          DCB      0x31,0x37,0x40,0x61
000804  62636440          DCB      0x62,0x63,0x64,0x40
000808  65666768          DCB      0x65,0x66,0x67,0x68
00080c  40696a6b          DCB      0x40,0x69,0x6a,0x6b
000810  6c403137          DCB      0x6c,0x40,0x31,0x37
000814  40202020          DCB      0x40,0x20,0x20,0x20
000818  20202020          DCB      0x20,0x20,0x20,0x20
00081c  20000000          DCB      0x20,0x00,0x00,0x00
                          %        96
000880  31384061          DCB      0x31,0x38,0x40,0x61
000884  62636440          DCB      0x62,0x63,0x64,0x40
000888  65666768          DCB      0x65,0x66,0x67,0x68
00088c  40696a6b          DCB      0x40,0x69,0x6a,0x6b
000890  6c403138          DCB      0x6c,0x40,0x31,0x38
000894  40202020          DCB      0x40,0x20,0x20,0x20
000898  20202020          DCB      0x20,0x20,0x20,0x20
00089c  20000000          DCB      0x20,0x00,0x00,0x00
                          %        96
000900  31394061          DCB      0x31,0x39,0x40,0x61
000904  62636440          DCB      0x62,0x63,0x64,0x40
000908  65666768          DCB      0x65,0x66,0x67,0x68
00090c  40696a6b          DCB      0x40,0x69,0x6a,0x6b
000910  6c403139          DCB      0x6c,0x40,0x31,0x39
000914  40202020          DCB      0x40,0x20,0x20,0x20
000918  20202020          DCB      0x20,0x20,0x20,0x20
00091c  20000000          DCB      0x20,0x00,0x00,0x00
                          %        96
000980  32304061          DCB      0x32,0x30,0x40,0x61
000984  62636440          DCB      0x62,0x63,0x64,0x40
000988  65666768          DCB      0x65,0x66,0x67,0x68
00098c  40696a6b          DCB      0x40,0x69,0x6a,0x6b
000990  6c403230          DCB      0x6c,0x40,0x32,0x30
000994  40202020          DCB      0x40,0x20,0x20,0x20
000998  20202020          DCB      0x20,0x20,0x20,0x20
00099c  20000000          DCB      0x20,0x00,0x00,0x00
                          %        96
000a00  32314061          DCB      0x32,0x31,0x40,0x61
000a04  62636440          DCB      0x62,0x63,0x64,0x40
000a08  65666768          DCB      0x65,0x66,0x67,0x68
000a0c  40696a6b          DCB      0x40,0x69,0x6a,0x6b
000a10  6c403231          DCB      0x6c,0x40,0x32,0x31
000a14  40202020          DCB      0x40,0x20,0x20,0x20
000a18  20202020          DCB      0x20,0x20,0x20,0x20
000a1c  20000000          DCB      0x20,0x00,0x00,0x00
                          %        96
000a80  32324061          DCB      0x32,0x32,0x40,0x61
000a84  62636440          DCB      0x62,0x63,0x64,0x40
000a88  65666768          DCB      0x65,0x66,0x67,0x68
000a8c  40696a6b          DCB      0x40,0x69,0x6a,0x6b
000a90  6c403232          DCB      0x6c,0x40,0x32,0x32
000a94  40202020          DCB      0x40,0x20,0x20,0x20
000a98  20202020          DCB      0x20,0x20,0x20,0x20
000a9c  20000000          DCB      0x20,0x00,0x00,0x00
                          %        96
000b00  32334061          DCB      0x32,0x33,0x40,0x61
000b04  62636440          DCB      0x62,0x63,0x64,0x40
000b08  65666768          DCB      0x65,0x66,0x67,0x68
000b0c  40696a6b          DCB      0x40,0x69,0x6a,0x6b
000b10  6c403233          DCB      0x6c,0x40,0x32,0x33
000b14  40202020          DCB      0x40,0x20,0x20,0x20
000b18  20202020          DCB      0x20,0x20,0x20,0x20
000b1c  20000000          DCB      0x20,0x00,0x00,0x00
                          %        96
000b80  32344061          DCB      0x32,0x34,0x40,0x61
000b84  62636440          DCB      0x62,0x63,0x64,0x40
000b88  65666768          DCB      0x65,0x66,0x67,0x68
000b8c  40696a6b          DCB      0x40,0x69,0x6a,0x6b
000b90  6c403234          DCB      0x6c,0x40,0x32,0x34
000b94  40202020          DCB      0x40,0x20,0x20,0x20
000b98  20202020          DCB      0x20,0x20,0x20,0x20
000b9c  20000000          DCB      0x20,0x00,0x00,0x00
                          %        96
000c00  32354061          DCB      0x32,0x35,0x40,0x61
000c04  62636440          DCB      0x62,0x63,0x64,0x40
000c08  65666768          DCB      0x65,0x66,0x67,0x68
000c0c  40696a6b          DCB      0x40,0x69,0x6a,0x6b
000c10  6c403235          DCB      0x6c,0x40,0x32,0x35
000c14  40202020          DCB      0x40,0x20,0x20,0x20
000c18  20202020          DCB      0x20,0x20,0x20,0x20
000c1c  20000000          DCB      0x20,0x00,0x00,0x00
                          %        96
000c80  32364061          DCB      0x32,0x36,0x40,0x61
000c84  62636440          DCB      0x62,0x63,0x64,0x40
000c88  65666768          DCB      0x65,0x66,0x67,0x68
000c8c  40696a6b          DCB      0x40,0x69,0x6a,0x6b
000c90  6c403236          DCB      0x6c,0x40,0x32,0x36
000c94  40202020          DCB      0x40,0x20,0x20,0x20
000c98  20202020          DCB      0x20,0x20,0x20,0x20
000c9c  20000000          DCB      0x20,0x00,0x00,0x00
                          %        96
000d00  32374061          DCB      0x32,0x37,0x40,0x61
000d04  62636440          DCB      0x62,0x63,0x64,0x40
000d08  65666768          DCB      0x65,0x66,0x67,0x68
000d0c  40696a6b          DCB      0x40,0x69,0x6a,0x6b
000d10  6c403237          DCB      0x6c,0x40,0x32,0x37
000d14  40202020          DCB      0x40,0x20,0x20,0x20
000d18  20202020          DCB      0x20,0x20,0x20,0x20
000d1c  20000000          DCB      0x20,0x00,0x00,0x00
                          %        96
000d80  32384061          DCB      0x32,0x38,0x40,0x61
000d84  62636440          DCB      0x62,0x63,0x64,0x40
000d88  65666768          DCB      0x65,0x66,0x67,0x68
000d8c  40696a6b          DCB      0x40,0x69,0x6a,0x6b
000d90  6c403238          DCB      0x6c,0x40,0x32,0x38
000d94  40202020          DCB      0x40,0x20,0x20,0x20
000d98  20202020          DCB      0x20,0x20,0x20,0x20
000d9c  20000000          DCB      0x20,0x00,0x00,0x00
                          %        96
000e00  32394061          DCB      0x32,0x39,0x40,0x61
000e04  62636440          DCB      0x62,0x63,0x64,0x40
000e08  65666768          DCB      0x65,0x66,0x67,0x68
000e0c  40696a6b          DCB      0x40,0x69,0x6a,0x6b
000e10  6c403239          DCB      0x6c,0x40,0x32,0x39
000e14  40202020          DCB      0x40,0x20,0x20,0x20
000e18  20202020          DCB      0x20,0x20,0x20,0x20
000e1c  20000000          DCB      0x20,0x00,0x00,0x00
                          %        96
000e80  33304061          DCB      0x33,0x30,0x40,0x61
000e84  62636440          DCB      0x62,0x63,0x64,0x40
000e88  65666768          DCB      0x65,0x66,0x67,0x68
000e8c  40696a6b          DCB      0x40,0x69,0x6a,0x6b
000e90  6c403330          DCB      0x6c,0x40,0x33,0x30
000e94  40202020          DCB      0x40,0x20,0x20,0x20
000e98  20202020          DCB      0x20,0x20,0x20,0x20
000e9c  20000000          DCB      0x20,0x00,0x00,0x00
                          %        4448

                          AREA ||area_number.12||, DATA, ALIGN=2

                          EXPORTAS ||area_number.12||, ||.data||
                  snmp_trap_send_i
000000  00                DCB      0x00
                  snmp_trap_send_ii
000001  00                DCB      0x00
                  snmp_num_of_psu
000002  0000              DCB      0x00,0x00
                  snmp_max_time_of_process
000004  0000              DCB      0x00,0x00
                  snmp_time_visualisation
000006  0000              DCB      0x00,0x00
                  snmp_pult_time_mode
000008  0000              DCB      0x00,0x00
                  snmp_load_current_measure_mode
00000a  0000              DCB      0x00,0x00
                  snmp_main_menu_mode
00000c  0000              DCB      0x00,0x00
                  snmp_restart_enabled
00000e  0000              DCB      0x00,0x00
                  snmp_modbus_adress
000010  0000              DCB      0x00,0x00
                  snmp_U_up
000012  0000              DCB      0x00,0x00
                  snmp_I_ug
000014  0000              DCB      0x00,0x00
                  snmp_U_maxg
000016  0000              DCB      0x00,0x00
                  snmp_I_maxp
000018  0000              DCB      0x00,0x00
                  snmp_reverse_state
00001a  0000              DCB      0x00,0x00
                  snmp_avtoreverse_enable
00001c  0000              DCB      0x00,0x00
                  snmp_avtoreverse_ff_time
00001e  0000              DCB      0x00,0x00
                  snmp_avtoreverse_rew_time
000020  0000              DCB      0x00,0x00
                  snmp_avtoreverse_pause_time
000022  0000              DCB      0x00,0x00
                  snmp_avtoreverse_ff_i
000024  0000              DCB      0x00,0x00
                  snmp_avtoreverse_rew_i
000026  0000              DCB      0x00,0x00
                  snmp_avtoreverse_ff_u
000028  0000              DCB      0x00,0x00
                  snmp_avtoreverse_rew_u
00002a  0000              DCB      0x00,0x00
                  snmp_mains_power_voltage
00002c  0000              DCB      0x00,0x00
                  snmp_mains_power_frequency
00002e  0000              DCB      0x00,0x00
                  snmp_out_voltage
000030  0000              DCB      0x00,0x00
                  snmp_out_current
000032  0000              DCB      0x00,0x00
                  snmp_spc_trap_value_0
000034  0000              DCB      0x00,0x00
                  snmp_spc_trap_value_1
000036  0000              DCB      0x00,0x00
                  snmp_spc_trap_value_2
000038  0000              DCB      0x00,0x00
                  snmp_energy_vvod_phase_a
00003a  0000              DCB      0x00,0x00
                  snmp_energy_vvod_phase_b
00003c  0000              DCB      0x00,0x00
                  snmp_energy_vvod_phase_c
00003e  0000              DCB      0x00,0x00
                  snmp_energy_pes_phase_a
000040  0000              DCB      0x00,0x00
                  snmp_energy_pes_phase_b
000042  0000              DCB      0x00,0x00
                  snmp_energy_pes_phase_c
000044  0000              DCB      0x00,0x00
                  snmp_energy_current_energy
000046  0000              DCB      0x00,0x00
                  snmp_ips_state_flags
000048  0000              DCB      0x00,0x00
                  snmp_command
00004a  0000              DCB      0x00,0x00
                  snmp_max_current
00004c  0000              DCB      0x00,0x00
                  snmp_powerup_psu_timeout
00004e  0000              DCB      0x00,0x00
                  snmp_modbus_baudrate
                          DCD      0x00000000
                  snmp_time_p
                          DCD      0x00000000
                  snmp_time_g
                          DCD      0x00000000
                  snmp_energy_total_energy
                          DCD      0x00000000
                  temp_ip
                          DCD      0x00000000
                  snmp_sk_number
                          %        8
                  snmp_sk_state
                          %        8

                          AREA ||area_number.13||, DATA, ALIGN=1

                          EXPORTAS ||area_number.13||, ||.data||
                  snmp_mains_power_status
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.14||, DATA, ALIGN=1

                          EXPORTAS ||area_number.14||, ||.data||
                  snmp_mains_power_alarm
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.15||, DATA, ALIGN=1

                          EXPORTAS ||area_number.15||, ||.data||
                  snmp_spc_stat
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.16||, DATA, ALIGN=1

                          EXPORTAS ||area_number.16||, ||.data||
                  snmp_command_parametr
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.17||, DATA, ALIGN=1

                          EXPORTAS ||area_number.17||, ||.data||
                  snmp_main_bps
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.18||, DATA, ALIGN=1

                          EXPORTAS ||area_number.18||, ||.data||
                  snmp_zv_en
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.19||, DATA, ALIGN=1

                          EXPORTAS ||area_number.19||, ||.data||
                  snmp_alarm_auto_disable
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.20||, DATA, ALIGN=1

                          EXPORTAS ||area_number.20||, ||.data||
                  snmp_bat_test_time
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.21||, DATA, ALIGN=1

                          EXPORTAS ||area_number.21||, ||.data||
                  snmp_u_max
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.22||, DATA, ALIGN=1

                          EXPORTAS ||area_number.22||, ||.data||
                  snmp_u_0_grad
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.23||, DATA, ALIGN=1

                          EXPORTAS ||area_number.23||, ||.data||
                  snmp_u_20_grad
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.24||, DATA, ALIGN=1

                          EXPORTAS ||area_number.24||, ||.data||
                  snmp_u_sign
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.25||, DATA, ALIGN=1

                          EXPORTAS ||area_number.25||, ||.data||
                  snmp_u_min_power
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.26||, DATA, ALIGN=1

                          EXPORTAS ||area_number.26||, ||.data||
                  snmp_u_withouth_bat
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.27||, DATA, ALIGN=1

                          EXPORTAS ||area_number.27||, ||.data||
                  snmp_control_current
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.28||, DATA, ALIGN=1

                          EXPORTAS ||area_number.28||, ||.data||
                  snmp_max_charge_current
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.29||, DATA, ALIGN=1

                          EXPORTAS ||area_number.29||, ||.data||
                  snmp_max_current_koef
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.30||, DATA, ALIGN=1

                          EXPORTAS ||area_number.30||, ||.data||
                  snmp_up_charge_koef
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.31||, DATA, ALIGN=1

                          EXPORTAS ||area_number.31||, ||.data||
                  snmp_max_temperature
000000  0000              DCB      0x00,0x00
