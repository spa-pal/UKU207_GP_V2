; generated by ARM C/C++ Compiler, 4.1 [Build 644]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\EXE\mcp2515.o --asm_dir=.\ --list_dir=.\ --depend=.\EXE\mcp2515.d --feedback=.\EXE\UKU2071x_GALV_IBv2.fed --cpu=Cortex-M3 --apcs=interwork -O3 -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\INC\NXP\LPC17xx -D__MICROLIB -DUKU2071x -DEXT_BOARD_V_2 --omf_browse=.\EXE\mcp2515.crf mcp2515.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  spi1_config_mcp2515 PROC
;;;15     //настройка SPI1
;;;16     void spi1_config_mcp2515(void)
000000  48a7              LDR      r0,|L1.672|
;;;17     { 
;;;18     
;;;19     SET_REG( LPC_PINCON->PINSEL0, 3, 15*2, 2);
000002  6801              LDR      r1,[r0,#0]
000004  f0414140          ORR      r1,r1,#0xc0000000
000008  6001              STR      r1,[r0,#0]
;;;20     SET_REG( LPC_PINCON->PINSEL1, 0, (16-16)*2, 2);
00000a  6841              LDR      r1,[r0,#4]
00000c  f0210103          BIC      r1,r1,#3
000010  6041              STR      r1,[r0,#4]
;;;21     SET_REG( LPC_PINCON->PINSEL1, 3, (17-16)*2, 2);
000012  6841              LDR      r1,[r0,#4]
000014  f041010c          ORR      r1,r1,#0xc
000018  6041              STR      r1,[r0,#4]
;;;22     SET_REG( LPC_PINCON->PINSEL1, 3, (18-16)*2, 2); 
00001a  6841              LDR      r1,[r0,#4]
00001c  f0410130          ORR      r1,r1,#0x30
000020  6041              STR      r1,[r0,#4]
;;;23     /*
;;;24     S1SPCCR=100;
;;;25     S1SPCR=0x3f; */
;;;26     
;;;27     LPC_SPI->SPCCR=32;
000022  48a0              LDR      r0,|L1.676|
000024  2120              MOVS     r1,#0x20
000026  60c1              STR      r1,[r0,#0xc]
;;;28     LPC_SPI->SPCR=0x38;
000028  2138              MOVS     r1,#0x38
00002a  6001              STR      r1,[r0,#0]
;;;29     }
00002c  4770              BX       lr
;;;30     
                          ENDP

                  mcp2515_reset PROC
;;;31     //-----------------------------------------------
;;;32     void mcp2515_reset(void)
00002e  b510              PUSH     {r4,lr}
;;;33     {
;;;34     spi1_config_mcp2515();
000030  f7fffffe          BL       spi1_config_mcp2515
;;;35     MCP2515_CS_ON
000034  4c9c              LDR      r4,|L1.680|
000036  6820              LDR      r0,[r4,#0]
000038  f0400002          ORR      r0,r0,#2
00003c  6020              STR      r0,[r4,#0]
00003e  69e0              LDR      r0,[r4,#0x1c]
000040  f0400002          ORR      r0,r0,#2
000044  61e0              STR      r0,[r4,#0x1c]
;;;36     spi1(0xc0);
000046  20c0              MOVS     r0,#0xc0
000048  f7fffffe          BL       spi1
;;;37     MCP2515_CS_OFF
00004c  6820              LDR      r0,[r4,#0]
00004e  f0400002          ORR      r0,r0,#2
000052  6020              STR      r0,[r4,#0]
000054  69a0              LDR      r0,[r4,#0x18]
000056  f0400002          ORR      r0,r0,#2
00005a  61a0              STR      r0,[r4,#0x18]
;;;38     
;;;39     }
00005c  bd10              POP      {r4,pc}
;;;40     
                          ENDP

                  mcp2515_write PROC
;;;41     //-----------------------------------------------
;;;42     char mcp2515_write(char addr,char in)
00005e  e92d41f0          PUSH     {r4-r8,lr}
;;;43     {           
000062  4607              MOV      r7,r0
000064  460e              MOV      r6,r1
;;;44     char temp=0;
000066  2500              MOVS     r5,#0
;;;45     spi1_config_mcp2515();       
000068  f7fffffe          BL       spi1_config_mcp2515
;;;46     MCP2515_CS_ON
00006c  4c8e              LDR      r4,|L1.680|
00006e  6820              LDR      r0,[r4,#0]
000070  f0400002          ORR      r0,r0,#2
000074  6020              STR      r0,[r4,#0]
000076  69e0              LDR      r0,[r4,#0x1c]
000078  f0400002          ORR      r0,r0,#2
00007c  61e0              STR      r0,[r4,#0x1c]
;;;47     spi1(0x02);
00007e  2002              MOVS     r0,#2
000080  f7fffffe          BL       spi1
;;;48     spi1(addr);
000084  4638              MOV      r0,r7
000086  f7fffffe          BL       spi1
;;;49     spi1(in);
00008a  4630              MOV      r0,r6
00008c  f7fffffe          BL       spi1
;;;50     MCP2515_CS_OFF
000090  6820              LDR      r0,[r4,#0]
000092  f0400002          ORR      r0,r0,#2
000096  6020              STR      r0,[r4,#0]
000098  69a0              LDR      r0,[r4,#0x18]
00009a  f0400002          ORR      r0,r0,#2
00009e  61a0              STR      r0,[r4,#0x18]
;;;51     return temp;                
0000a0  4628              MOV      r0,r5
                  |L1.162|
;;;52     }
0000a2  e8bd81f0          POP      {r4-r8,pc}
;;;53     
                          ENDP

                  mcp2515_read PROC
;;;54     //-----------------------------------------------
;;;55     char mcp2515_read(char addr)
0000a6  b570              PUSH     {r4-r6,lr}
;;;56     {           
0000a8  4605              MOV      r5,r0
;;;57     char temp;
;;;58     
;;;59     spi1_config_mcp2515();       
0000aa  f7fffffe          BL       spi1_config_mcp2515
;;;60     MCP2515_CS_ON
0000ae  4c7e              LDR      r4,|L1.680|
0000b0  6820              LDR      r0,[r4,#0]
0000b2  f0400002          ORR      r0,r0,#2
0000b6  6020              STR      r0,[r4,#0]
0000b8  69e0              LDR      r0,[r4,#0x1c]
0000ba  f0400002          ORR      r0,r0,#2
0000be  61e0              STR      r0,[r4,#0x1c]
;;;61     delay_us(10);
0000c0  2178              MOVS     r1,#0x78
                  |L1.194|
0000c2  1e49              SUBS     r1,r1,#1
0000c4  d1fd              BNE      |L1.194|
;;;62     spi1(0x03);
0000c6  2003              MOVS     r0,#3
0000c8  f7fffffe          BL       spi1
;;;63     spi1(addr);
0000cc  4628              MOV      r0,r5
0000ce  f7fffffe          BL       spi1
;;;64     temp=spi1(0x55);
0000d2  2055              MOVS     r0,#0x55
0000d4  f7fffffe          BL       spi1
;;;65     MCP2515_CS_OFF   
0000d8  6821              LDR      r1,[r4,#0]
0000da  f0410102          ORR      r1,r1,#2
0000de  6021              STR      r1,[r4,#0]
0000e0  69a1              LDR      r1,[r4,#0x18]
0000e2  f0410102          ORR      r1,r1,#2
0000e6  61a1              STR      r1,[r4,#0x18]
;;;66     return temp;                
;;;67     }  
0000e8  bd70              POP      {r4-r6,pc}
;;;68     
                          ENDP

                  mcp2515_bit_modify PROC
;;;69     //-----------------------------------------------
;;;70     void mcp2515_bit_modify(char addr,char mask,char data)
0000ea  e92d41f0          PUSH     {r4-r8,lr}
;;;71     {           
0000ee  4607              MOV      r7,r0
0000f0  460d              MOV      r5,r1
0000f2  4616              MOV      r6,r2
;;;72     spi1_config_mcp2515();       
0000f4  f7fffffe          BL       spi1_config_mcp2515
;;;73     MCP2515_CS_ON
0000f8  4c6b              LDR      r4,|L1.680|
0000fa  6820              LDR      r0,[r4,#0]
0000fc  f0400002          ORR      r0,r0,#2
000100  6020              STR      r0,[r4,#0]
000102  69e0              LDR      r0,[r4,#0x1c]
000104  f0400002          ORR      r0,r0,#2
000108  61e0              STR      r0,[r4,#0x1c]
;;;74     spi1(0x05);
00010a  2005              MOVS     r0,#5
00010c  f7fffffe          BL       spi1
;;;75     spi1(addr);
000110  4638              MOV      r0,r7
000112  f7fffffe          BL       spi1
;;;76     spi1(mask);
000116  4628              MOV      r0,r5
000118  f7fffffe          BL       spi1
;;;77     spi1(data);
00011c  4630              MOV      r0,r6
00011e  f7fffffe          BL       spi1
;;;78     MCP2515_CS_OFF
000122  6820              LDR      r0,[r4,#0]
000124  f0400002          ORR      r0,r0,#2
000128  6020              STR      r0,[r4,#0]
00012a  69a0              LDR      r0,[r4,#0x18]
00012c  f0400002          ORR      r0,r0,#2
000130  61a0              STR      r0,[r4,#0x18]
;;;79     } 
000132  e7b6              B        |L1.162|
;;;80     
                          ENDP

                  can_mcp2515_init PROC
;;;110    //-----------------------------------------------
;;;111    void can_mcp2515_init(void)
000134  b510              PUSH     {r4,lr}
;;;112    {
;;;113    char spi_temp;                 
;;;114    
;;;115    mcp2515_reset();
000136  f7fffffe          BL       mcp2515_reset
;;;116    spi_temp=mcp2515_read(CANSTAT);
00013a  200e              MOVS     r0,#0xe
00013c  f7fffffe          BL       mcp2515_read
;;;117    if((spi_temp&0xe0)!=0x80)
000140  2104              MOVS     r1,#4
000142  ebb11f50          CMP      r1,r0,LSR #5
000146  d004              BEQ      |L1.338|
;;;118    	{
;;;119    	mcp2515_bit_modify(CANCTRL,0xe0,0x80);
000148  2280              MOVS     r2,#0x80
00014a  21e0              MOVS     r1,#0xe0
00014c  200f              MOVS     r0,#0xf
00014e  f7fffffe          BL       mcp2515_bit_modify
                  |L1.338|
;;;120    	}
;;;121    delay_us(10);		
000152  2078              MOVS     r0,#0x78
                  |L1.340|
000154  1e40              SUBS     r0,r0,#1
000156  d1fd              BNE      |L1.340|
;;;122    mcp2515_write(CNF1,CNF1_init);
000158  21c3              MOVS     r1,#0xc3
00015a  202a              MOVS     r0,#0x2a
00015c  f7fffffe          BL       mcp2515_write
;;;123    mcp2515_write(CNF2,CNF2_init);
000160  21fe              MOVS     r1,#0xfe
000162  2029              MOVS     r0,#0x29
000164  f7fffffe          BL       mcp2515_write
;;;124    mcp2515_write(CNF3,CNF3_init);
000168  2103              MOVS     r1,#3
00016a  2028              MOVS     r0,#0x28
00016c  f7fffffe          BL       mcp2515_write
;;;125    
;;;126    mcp2515_write(RXB0CTRL,0x20/*0b00100000*/);
000170  2120              MOVS     r1,#0x20
000172  2060              MOVS     r0,#0x60
000174  f7fffffe          BL       mcp2515_write
;;;127    mcp2515_write(RXB1CTRL,0x20/*0b00100000*/);
000178  2120              MOVS     r1,#0x20
00017a  2070              MOVS     r0,#0x70
00017c  f7fffffe          BL       mcp2515_write
;;;128    
;;;129    delay_ms(10);
000180  484a              LDR      r0,|L1.684|
                  |L1.386|
000182  1e40              SUBS     r0,r0,#1
000184  d1fd              BNE      |L1.386|
;;;130    
;;;131    mcp2515_write(RXM0SIDH, 0xFF); 
000186  21ff              MOVS     r1,#0xff
000188  2020              MOVS     r0,#0x20
00018a  f7fffffe          BL       mcp2515_write
;;;132    mcp2515_write(RXM0SIDL, 0xFF); 
00018e  21ff              MOVS     r1,#0xff
000190  2021              MOVS     r0,#0x21
000192  f7fffffe          BL       mcp2515_write
;;;133    mcp2515_write(RXF0SIDH, 0xFF); 
000196  21ff              MOVS     r1,#0xff
000198  2000              MOVS     r0,#0
00019a  f7fffffe          BL       mcp2515_write
;;;134    mcp2515_write(RXF0SIDL, 0xFF); 
00019e  21ff              MOVS     r1,#0xff
0001a0  2001              MOVS     r0,#1
0001a2  f7fffffe          BL       mcp2515_write
;;;135    mcp2515_write(RXF1SIDH, 0xFF);
0001a6  21ff              MOVS     r1,#0xff
0001a8  2004              MOVS     r0,#4
0001aa  f7fffffe          BL       mcp2515_write
;;;136    mcp2515_write(RXF1SIDL, 0xFF); 
0001ae  21ff              MOVS     r1,#0xff
0001b0  2005              MOVS     r0,#5
0001b2  f7fffffe          BL       mcp2515_write
;;;137    
;;;138    mcp2515_write(RXM1SIDH, 0xff); 
0001b6  21ff              MOVS     r1,#0xff
0001b8  2024              MOVS     r0,#0x24
0001ba  f7fffffe          BL       mcp2515_write
;;;139    mcp2515_write(RXM1SIDL, 0xe0); 
0001be  21e0              MOVS     r1,#0xe0
0001c0  2025              MOVS     r0,#0x25
0001c2  f7fffffe          BL       mcp2515_write
;;;140    
;;;141    mcp2515_write(RXF2SIDH, 0x31); 
0001c6  2131              MOVS     r1,#0x31
0001c8  2008              MOVS     r0,#8
0001ca  f7fffffe          BL       mcp2515_write
;;;142    mcp2515_write(RXF2SIDL, 0xc0); 
0001ce  21c0              MOVS     r1,#0xc0
0001d0  2009              MOVS     r0,#9
0001d2  f7fffffe          BL       mcp2515_write
;;;143    
;;;144    mcp2515_write(RXF3SIDH, 0x00); 
0001d6  2100              MOVS     r1,#0
0001d8  2010              MOVS     r0,#0x10
0001da  f7fffffe          BL       mcp2515_write
;;;145    mcp2515_write(RXF3SIDL, 0x00); 
0001de  2100              MOVS     r1,#0
0001e0  2011              MOVS     r0,#0x11
0001e2  f7fffffe          BL       mcp2515_write
;;;146    
;;;147    mcp2515_write(RXF4SIDH, 0x00); 
0001e6  2100              MOVS     r1,#0
0001e8  2014              MOVS     r0,#0x14
0001ea  f7fffffe          BL       mcp2515_write
;;;148    mcp2515_write(RXF4SIDL, 0x00); 
0001ee  2100              MOVS     r1,#0
0001f0  2015              MOVS     r0,#0x15
0001f2  f7fffffe          BL       mcp2515_write
;;;149    
;;;150    mcp2515_write(RXF5SIDH, 0x00); 
0001f6  2100              MOVS     r1,#0
0001f8  2018              MOVS     r0,#0x18
0001fa  f7fffffe          BL       mcp2515_write
;;;151    mcp2515_write(RXF5SIDL, 0x00); 
0001fe  2100              MOVS     r1,#0
000200  2019              MOVS     r0,#0x19
000202  f7fffffe          BL       mcp2515_write
;;;152    
;;;153    mcp2515_write(TXB2SIDH, 0x13); 
000206  2113              MOVS     r1,#0x13
000208  2051              MOVS     r0,#0x51
00020a  f7fffffe          BL       mcp2515_write
;;;154    mcp2515_write(TXB2SIDL, 0xc0); 
00020e  21c0              MOVS     r1,#0xc0
000210  2052              MOVS     r0,#0x52
000212  f7fffffe          BL       mcp2515_write
;;;155    
;;;156    mcp2515_write(TXB1SIDH, 0x13); 
000216  2113              MOVS     r1,#0x13
000218  2041              MOVS     r0,#0x41
00021a  f7fffffe          BL       mcp2515_write
;;;157    mcp2515_write(TXB1SIDL, 0xc0); 
00021e  21c0              MOVS     r1,#0xc0
000220  2042              MOVS     r0,#0x42
000222  f7fffffe          BL       mcp2515_write
;;;158    
;;;159    mcp2515_write(TXB0SIDH, 0x13); 
000226  2113              MOVS     r1,#0x13
000228  2031              MOVS     r0,#0x31
00022a  f7fffffe          BL       mcp2515_write
;;;160    mcp2515_write(TXB0SIDL, 0xc0); 
00022e  21c0              MOVS     r1,#0xc0
000230  2032              MOVS     r0,#0x32
000232  f7fffffe          BL       mcp2515_write
;;;161    
;;;162    
;;;163    
;;;164    mcp2515_bit_modify(CANCTRL,0xe7,0x05/*0b00000101*/);
000236  2205              MOVS     r2,#5
000238  21e7              MOVS     r1,#0xe7
00023a  200f              MOVS     r0,#0xf
00023c  f7fffffe          BL       mcp2515_bit_modify
;;;165    
;;;166    mcp2515_write(CANINTE,0x06/*0b00000110*/);
000240  2106              MOVS     r1,#6
000242  202b              MOVS     r0,#0x2b
000244  f7fffffe          BL       mcp2515_write
;;;167    delay_ms(100);
000248  4819              LDR      r0,|L1.688|
                  |L1.586|
00024a  1e40              SUBS     r0,r0,#1
00024c  d1fd              BNE      |L1.586|
;;;168    mcp2515_write(BFPCTRL,0x00/*0b00000000*/);  
00024e  2100              MOVS     r1,#0
000250  e8bd4010          POP      {r4,lr}
000254  200c              MOVS     r0,#0xc
000256  e7fe              B        mcp2515_write
;;;169    
;;;170    }
;;;171    
                          ENDP

                  mcp2515_transmit PROC
;;;172    //-----------------------------------------------
;;;173    void mcp2515_transmit(char data0,char data1,char data2,char data3,char data4,char data5,char data6,char data7)
000258  e92d47f0          PUSH     {r4-r10,lr}
;;;174    {
00025c  ac09              ADD      r4,sp,#0x24
;;;175    if(/*(mcp2515_buff_wr_ptr<0)||*/(mcp2515_buff_wr_ptr>7))mcp2515_buff_wr_ptr=0;
00025e  2600              MOVS     r6,#0
000260  e8b40700          LDM      r4!,{r8-r10}          ;174
000264  4c13              LDR      r4,|L1.692|
000266  f8ddc020          LDR      r12,[sp,#0x20]
00026a  78e5              LDRB     r5,[r4,#3]  ; mcp2515_buff_wr_ptr
00026c  2d07              CMP      r5,#7
00026e  d900              BLS      |L1.626|
000270  70e6              STRB     r6,[r4,#3]
                  |L1.626|
;;;176    
;;;177    mcp2515_out_buff[0][mcp2515_buff_wr_ptr]=data0;
000272  4f11              LDR      r7,|L1.696|
000274  78e5              LDRB     r5,[r4,#3]  ; mcp2515_buff_wr_ptr
000276  5578              STRB     r0,[r7,r5]
;;;178    mcp2515_out_buff[1][mcp2515_buff_wr_ptr]=data1;
000278  1978              ADDS     r0,r7,r5
;;;179    mcp2515_out_buff[2][mcp2515_buff_wr_ptr]=data2;
;;;180    mcp2515_out_buff[3][mcp2515_buff_wr_ptr]=data3;
;;;181    mcp2515_out_buff[4][mcp2515_buff_wr_ptr]=data4;
;;;182    mcp2515_out_buff[5][mcp2515_buff_wr_ptr]=data5;
;;;183    mcp2515_out_buff[6][mcp2515_buff_wr_ptr]=data6;
;;;184    mcp2515_out_buff[7][mcp2515_buff_wr_ptr]=data7;
;;;185    
;;;186    mcp2515_buff_wr_ptr++;
00027a  1c6d              ADDS     r5,r5,#1
00027c  7201              STRB     r1,[r0,#8]            ;178
00027e  7402              STRB     r2,[r0,#0x10]         ;179
000280  7603              STRB     r3,[r0,#0x18]         ;180
000282  f880c020          STRB     r12,[r0,#0x20]        ;181
000286  f8808028          STRB     r8,[r0,#0x28]         ;182
00028a  f8809030          STRB     r9,[r0,#0x30]         ;183
00028e  f880a038          STRB     r10,[r0,#0x38]        ;184
000292  b2e8              UXTB     r0,r5
000294  70e0              STRB     r0,[r4,#3]
;;;187    if(mcp2515_buff_wr_ptr>7)mcp2515_buff_wr_ptr=0;
000296  2807              CMP      r0,#7
000298  d900              BLS      |L1.668|
00029a  70e6              STRB     r6,[r4,#3]
                  |L1.668|
;;;188    } 
00029c  e8bd87f0          POP      {r4-r10,pc}
;;;189    
                          ENDP

                  |L1.672|
                          DCD      0x4002c000
                  |L1.676|
                          DCD      0x40020000
                  |L1.680|
                          DCD      0x2009c000
                  |L1.684|
                          DCD      0x0001d4c0
                  |L1.688|
                          DCD      0x00124f80
                  |L1.692|
                          DCD      ||.data||
                  |L1.696|
                          DCD      ||area_number.7||

                          AREA ||area_number.2||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.2||, ||.text||
                  mcp2515_read_status PROC
;;;190    //-----------------------------------------------
;;;191    void can_mcp2515_hndl(void)
000000  b510              PUSH     {r4,lr}
;;;192    {
;;;193    unsigned char /*temp,*/j/*,temp_index*//*,c_temp*/;
;;;194    //static char ch_cnt;
;;;195    //#asm("cli")
;;;196    mcp2515_can_st=mcp2515_read_status();
000002  f7fffffe          BL       spi1_config_mcp2515
000006  4c0d              LDR      r4,|L2.60|
;;;197    mcp2515_can_st_old=mcp2515_can_st;
;;;198    
;;;199    
;;;200    if(mcp2515_can_st&0x02/*0b00000010*/)
000008  6820              LDR      r0,[r4,#0]
00000a  f0400002          ORR      r0,r0,#2              ;196
00000e  6020              STR      r0,[r4,#0]
;;;201    	{
;;;202    	
;;;203    	for(j=0;j<8;j++)
;;;204    		{
;;;205    		/*MCP2515_*/RXBUFF[j]=mcp2515_read(RXB1D0+j);
000010  69e0              LDR      r0,[r4,#0x1c]
000012  f0400002          ORR      r0,r0,#2              ;203
000016  61e0              STR      r0,[r4,#0x1c]
000018  200c              MOVS     r0,#0xc
                  |L2.26|
00001a  1e40              SUBS     r0,r0,#1
00001c  d1fd              BNE      |L2.26|
00001e  20a0              MOVS     r0,#0xa0
000020  f7fffffe          BL       spi1
000024  2055              MOVS     r0,#0x55              ;203
000026  f7fffffe          BL       spi1
;;;206    		}
;;;207    	
;;;208    	mcp2515_bit_modify(CANINTF,0x02 /*0b00000010*/ ,0x00);
00002a  6821              LDR      r1,[r4,#0]
00002c  f0410102          ORR      r1,r1,#2
000030  6021              STR      r1,[r4,#0]
;;;209         bMCP2515_IN=1;
000032  69a1              LDR      r1,[r4,#0x18]
000034  f0410102          ORR      r1,r1,#2
;;;210    	}
;;;211               
;;;212               
;;;213    else if(/*(can_st1&0b10101000)&&*/(!(mcp2515_can_st&0x54/*0b01010100*/)))
000038  61a1              STR      r1,[r4,#0x18]
00003a  bd10              POP      {r4,pc}
;;;214    	{
;;;215    	char n;
;;;216         mcp2515_bit_modify(CANINTF,0x1c/*0b00011100*/,0x00);
;;;217         
;;;218         if(mcp2515_buff_rd_ptr!=mcp2515_buff_wr_ptr)
;;;219         	{
;;;220    //		can_plazma++;
;;;221             	for(n=0;n<8;n++)
;;;222    			{ 
;;;223    			mcp2515_write(TXB0D0+n,mcp2515_out_buff[n][mcp2515_buff_rd_ptr]);
;;;224    			} 
;;;225        		mcp2515_write(TXB0DLC,8);
;;;226        		mcp2515_rts(0); 
;;;227        		
;;;228        		mcp2515_buff_rd_ptr++;
;;;229        		if(mcp2515_buff_rd_ptr>7)mcp2515_buff_rd_ptr=0;
;;;230        		} 
;;;231     	} 	
;;;232    		
;;;233    //#asm("sei") 
;;;234    }
                          ENDP

                  |L2.60|
                          DCD      0x2009c000

                          AREA ||area_number.3||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.3||, ||.text||
                  mcp2515_rts PROC
;;;190    //-----------------------------------------------
;;;191    void can_mcp2515_hndl(void)
000000  b510              PUSH     {r4,lr}
;;;192    {
;;;193    unsigned char /*temp,*/j/*,temp_index*//*,c_temp*/;
;;;194    //static char ch_cnt;
;;;195    //#asm("cli")
;;;196    mcp2515_can_st=mcp2515_read_status();
000002  4602              MOV      r2,r0
000004  f7fffffe          BL       spi1_config_mcp2515
;;;197    mcp2515_can_st_old=mcp2515_can_st;
;;;198    
;;;199    
;;;200    if(mcp2515_can_st&0x02/*0b00000010*/)
000008  4c0f              LDR      r4,|L3.72|
00000a  6820              LDR      r0,[r4,#0]            ;196
00000c  f0400002          ORR      r0,r0,#2              ;197
;;;201    	{
;;;202    	
;;;203    	for(j=0;j<8;j++)
;;;204    		{
;;;205    		/*MCP2515_*/RXBUFF[j]=mcp2515_read(RXB1D0+j);
000010  6020              STR      r0,[r4,#0]
000012  69e0              LDR      r0,[r4,#0x1c]         ;203
000014  f0400002          ORR      r0,r0,#2
000018  61e0              STR      r0,[r4,#0x1c]
00001a  b122              CBZ      r2,|L3.38|
00001c  2a01              CMP      r2,#1
00001e  d004              BEQ      |L3.42|
000020  2a02              CMP      r2,#2                 ;203
000022  d004              BEQ      |L3.46|
000024  e004              B        |L3.48|
                  |L3.38|
000026  2281              MOVS     r2,#0x81              ;203
;;;206    		}
;;;207    	
;;;208    	mcp2515_bit_modify(CANINTF,0x02 /*0b00000010*/ ,0x00);
000028  e002              B        |L3.48|
                  |L3.42|
00002a  2282              MOVS     r2,#0x82
00002c  e000              B        |L3.48|
                  |L3.46|
00002e  2284              MOVS     r2,#0x84
                  |L3.48|
000030  4610              MOV      r0,r2
;;;209         bMCP2515_IN=1;
000032  f7fffffe          BL       spi1
;;;210    	}
;;;211               
;;;212               
;;;213    else if(/*(can_st1&0b10101000)&&*/(!(mcp2515_can_st&0x54/*0b01010100*/)))
;;;214    	{
;;;215    	char n;
;;;216         mcp2515_bit_modify(CANINTF,0x1c/*0b00011100*/,0x00);
;;;217         
;;;218         if(mcp2515_buff_rd_ptr!=mcp2515_buff_wr_ptr)
;;;219         	{
;;;220    //		can_plazma++;
;;;221             	for(n=0;n<8;n++)
;;;222    			{ 
;;;223    			mcp2515_write(TXB0D0+n,mcp2515_out_buff[n][mcp2515_buff_rd_ptr]);
;;;224    			} 
;;;225        		mcp2515_write(TXB0DLC,8);
;;;226        		mcp2515_rts(0); 
;;;227        		
;;;228        		mcp2515_buff_rd_ptr++;
;;;229        		if(mcp2515_buff_rd_ptr>7)mcp2515_buff_rd_ptr=0;
;;;230        		} 
;;;231     	} 	
;;;232    		
;;;233    //#asm("sei") 
;;;234    }
000036  6820              LDR      r0,[r4,#0]
000038  f0400002          ORR      r0,r0,#2              ;213
00003c  6020              STR      r0,[r4,#0]            ;213
00003e  69a0              LDR      r0,[r4,#0x18]         ;216
000040  f0400002          ORR      r0,r0,#2              ;216
000044  61a0              STR      r0,[r4,#0x18]         ;216
000046  bd10              POP      {r4,pc}               ;216
                          ENDP

                  |L3.72|
                          DCD      0x2009c000

                          AREA ||area_number.4||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.4||, ||.text||
                  can_mcp2515_hndl PROC
;;;190    //-----------------------------------------------
;;;191    void can_mcp2515_hndl(void)
000000  b570              PUSH     {r4-r6,lr}
;;;192    {
;;;193    unsigned char /*temp,*/j/*,temp_index*//*,c_temp*/;
;;;194    //static char ch_cnt;
;;;195    //#asm("cli")
;;;196    mcp2515_can_st=mcp2515_read_status();
000002  f7fffffe          BL       mcp2515_read_status
000006  4d22              LDR      r5,|L4.144|
;;;197    mcp2515_can_st_old=mcp2515_can_st;
;;;198    
;;;199    
;;;200    if(mcp2515_can_st&0x02/*0b00000010*/)
000008  0781              LSLS     r1,r0,#30
00000a  7028              STRB     r0,[r5,#0]            ;196
00000c  7068              STRB     r0,[r5,#1]            ;197
00000e  d513              BPL      |L4.56|
;;;201    	{
;;;202    	
;;;203    	for(j=0;j<8;j++)
;;;204    		{
;;;205    		/*MCP2515_*/RXBUFF[j]=mcp2515_read(RXB1D0+j);
000010  4e20              LDR      r6,|L4.148|
000012  2400              MOVS     r4,#0                 ;203
                  |L4.20|
000014  f1040076          ADD      r0,r4,#0x76
000018  b2c0              UXTB     r0,r0
00001a  f7fffffe          BL       mcp2515_read
00001e  5530              STRB     r0,[r6,r4]
000020  1c64              ADDS     r4,r4,#1              ;203
000022  b2e4              UXTB     r4,r4                 ;203
000024  2c08              CMP      r4,#8                 ;203
000026  d3f5              BCC      |L4.20|
;;;206    		}
;;;207    	
;;;208    	mcp2515_bit_modify(CANINTF,0x02 /*0b00000010*/ ,0x00);
000028  2200              MOVS     r2,#0
00002a  2102              MOVS     r1,#2
00002c  202c              MOVS     r0,#0x2c
00002e  f7fffffe          BL       mcp2515_bit_modify
;;;209         bMCP2515_IN=1;
000032  2001              MOVS     r0,#1
000034  70a8              STRB     r0,[r5,#2]
                  |L4.54|
;;;210    	}
;;;211               
;;;212               
;;;213    else if(/*(can_st1&0b10101000)&&*/(!(mcp2515_can_st&0x54/*0b01010100*/)))
;;;214    	{
;;;215    	char n;
;;;216         mcp2515_bit_modify(CANINTF,0x1c/*0b00011100*/,0x00);
;;;217         
;;;218         if(mcp2515_buff_rd_ptr!=mcp2515_buff_wr_ptr)
;;;219         	{
;;;220    //		can_plazma++;
;;;221             	for(n=0;n<8;n++)
;;;222    			{ 
;;;223    			mcp2515_write(TXB0D0+n,mcp2515_out_buff[n][mcp2515_buff_rd_ptr]);
;;;224    			} 
;;;225        		mcp2515_write(TXB0DLC,8);
;;;226        		mcp2515_rts(0); 
;;;227        		
;;;228        		mcp2515_buff_rd_ptr++;
;;;229        		if(mcp2515_buff_rd_ptr>7)mcp2515_buff_rd_ptr=0;
;;;230        		} 
;;;231     	} 	
;;;232    		
;;;233    //#asm("sei") 
;;;234    }
000036  bd70              POP      {r4-r6,pc}
                  |L4.56|
000038  f0100f54          TST      r0,#0x54              ;213
00003c  d1fb              BNE      |L4.54|
00003e  2200              MOVS     r2,#0                 ;216
000040  211c              MOVS     r1,#0x1c              ;216
000042  202c              MOVS     r0,#0x2c              ;216
000044  f7fffffe          BL       mcp2515_bit_modify
000048  7928              LDRB     r0,[r5,#4]            ;218  ; mcp2515_buff_rd_ptr
00004a  78e9              LDRB     r1,[r5,#3]            ;218  ; mcp2515_buff_wr_ptr
00004c  4288              CMP      r0,r1                 ;218
00004e  d0f2              BEQ      |L4.54|
000050  4e11              LDR      r6,|L4.152|
000052  2400              MOVS     r4,#0                 ;221
                  |L4.84|
000054  7929              LDRB     r1,[r5,#4]            ;223  ; mcp2515_buff_rd_ptr
000056  eb0600c4          ADD      r0,r6,r4,LSL #3       ;223
00005a  5c41              LDRB     r1,[r0,r1]            ;223
00005c  f1040036          ADD      r0,r4,#0x36           ;223
000060  b2c0              UXTB     r0,r0                 ;223
000062  f7fffffe          BL       mcp2515_write
000066  1c64              ADDS     r4,r4,#1              ;221
000068  b2e4              UXTB     r4,r4                 ;221
00006a  2c08              CMP      r4,#8                 ;221
00006c  d3f2              BCC      |L4.84|
00006e  2108              MOVS     r1,#8                 ;225
000070  2035              MOVS     r0,#0x35              ;225
000072  f7fffffe          BL       mcp2515_write
000076  2000              MOVS     r0,#0                 ;226
000078  f7fffffe          BL       mcp2515_rts
00007c  7928              LDRB     r0,[r5,#4]            ;228  ; mcp2515_buff_rd_ptr
00007e  1c40              ADDS     r0,r0,#1              ;228
000080  b2c0              UXTB     r0,r0                 ;228
000082  7128              STRB     r0,[r5,#4]            ;228
000084  2807              CMP      r0,#7                 ;229
000086  d9d6              BLS      |L4.54|
000088  2000              MOVS     r0,#0                 ;229
00008a  7128              STRB     r0,[r5,#4]            ;229
00008c  bd70              POP      {r4-r6,pc}
                          ENDP

00008e  0000              DCW      0x0000
                  |L4.144|
                          DCD      ||.data||
                  |L4.148|
                          DCD      RXBUFF
                  |L4.152|
                          DCD      ||area_number.7||

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  MCP2515_RXBUFF
                          %        40

                          AREA ||area_number.7||, DATA, NOINIT, ALIGN=0

                          EXPORTAS ||area_number.7||, ||.bss||
                  mcp2515_out_buff
                          %        64

                          AREA ||.data||, DATA, ALIGN=0

                  mcp2515_can_st
000000  00                DCB      0x00
                  mcp2515_can_st_old
000001  00                DCB      0x00
                  bMCP2515_IN
000002  00                DCB      0x00
                  mcp2515_buff_wr_ptr
000003  00                DCB      0x00
                  mcp2515_buff_rd_ptr
000004  00                DCB      0x00
