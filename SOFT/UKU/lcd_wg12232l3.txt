; generated by ARM C/C++ Compiler, 4.1 [Build 644]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\EXE\lcd_wg12232l3.o --asm_dir=.\ --list_dir=.\ --depend=.\EXE\lcd_wg12232l3.d --feedback=.\EXE\UKU2071x_GALV_IBv2_WG12232L3.fed --cpu=Cortex-M3 --apcs=interwork -O3 -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\INC\NXP\LPC17xx -D__MICROLIB -DUKU2071x -DEXT_BOARD_V_2 -DWG12232L3 --omf_browse=.\EXE\lcd_wg12232l3.crf lcd_WG12232L3.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  bitmap_hndl_2 PROC
;;;10     //-----------------------------------------------
;;;11     void bitmap_hndl_2(void)
000000  e92d4ff8          PUSH     {r3-r11,lr}
;;;12     {
;;;13     char row, row_;
;;;14     signed char col, col_;
;;;15     short ptr,ptr_;
;;;16     
;;;17     char i;
;;;18     short ii;
;;;19     
;;;20     /*char bh2_plazma[15];
;;;21     
;;;22     bh2_plazma[0]=3;
;;;23     bh2_plazma[1]=130;
;;;24     bh2_plazma[2]=4;
;;;25     bh2_plazma[3]=15;
;;;26     bh2_plazma[4]=7;
;;;27     bh2_plazma[5]=131;
;;;28     bh2_plazma[6]=5;
;;;29     bh2_plazma[3]=115;
;;;30     bh2_plazma[8]=33;
;;;31     bh2_plazma[9]=30;
;;;32     bh2_plazma[10]=3;
;;;33     bh2_plazma[11]=130;
;;;34     bh2_plazma[12]=4;
;;;35     bh2_plazma[13]=15;
;;;36     bh2_plazma[14]=7;*/
;;;37     
;;;38     /*for(i=0;i<32;i++)
;;;39     	{ 
;;;40     	lcd_bitmap[i]=(i&0x01) ? 0xff : 0x00;
;;;41     	}
;;;42     for(ii=32;ii<64;ii++)
;;;43     	{ 
;;;44     	lcd_bitmap[ii]=(ii&0x01) ? 0x55 : 0x02;
;;;45     	}
;;;46     for(ii=122;ii<154;ii++)
;;;47     	{ 
;;;48     	lcd_bitmap[ii]=(ii&0x01) ? 0xff : 0x00;
;;;49     	}
;;;50     for(ii=244;ii<276;ii++)
;;;51     	{ 
;;;52     	lcd_bitmap[ii]=(ii&0x01) ? 0x55 : 0xaa;
;;;53     	}  
;;;54     
;;;55     for(ii=366;ii<398;ii++)
;;;56     	{ 
;;;57     	lcd_bitmap[ii]=(ii&0x01) ? 0x33 : 0xcc;
;;;58     	} */
;;;59     
;;;60     /*
;;;61     lcd_buffer[0]='A';
;;;62     lcd_buffer[1]='B';
;;;63     lcd_buffer[2]='B'; */
;;;64     
;;;65     //lcd_buffer[20]='A';
;;;66     
;;;67     bitmap_hndl();
000004  f7fffffe          BL       bitmap_hndl
;;;68     /*
;;;69     lcd_bitmap[0]=0xf2;
;;;70     lcd_bitmap[1]=0x02;
;;;71     lcd_bitmap[2]=0x04;
;;;72     lcd_bitmap[3]=0x08;
;;;73     lcd_bitmap[4]=0x10;
;;;74     lcd_bitmap[5]=0x20;
;;;75     lcd_bitmap[6]=0x30;
;;;76     lcd_bitmap[7]=0x40;
;;;77     lcd_bitmap[8]=0xff;
;;;78     lcd_bitmap[9]=0x80;
;;;79     lcd_bitmap[10]=0x40;
;;;80     lcd_bitmap[11]=0x20;
;;;81     lcd_bitmap[12]=0x10;
;;;82     lcd_bitmap[13]=0x08;
;;;83     lcd_bitmap[14]=0x04;
;;;84     lcd_bitmap[15]=0xf3;
;;;85     lcd_bitmap[16]=0x33;*/
;;;86     
;;;87     /*for(ii=0;ii<512;ii++)
;;;88     	{ 
;;;89     	lcd_bitmap2[ii]=(char)ii;
;;;90     	}*/
;;;91     /*
;;;92     for(i=0;i<16;i++)
;;;93     	{ 
;;;94     	lcd_bitmap2[i]=lcd_bitmap[i];
;;;95     	}*/
;;;96     //LPC_GPIO0->FIODIR|=(1<<8);
;;;97     //LPC_GPIO0->FIOSET|=(1<<8);
;;;98     /*
;;;99     lcd_bitmap[0]=0xff;
;;;100    lcd_bitmap[1]=0xff;
;;;101    
;;;102    lcd_bitmap[7]=0xff;
;;;103    lcd_bitmap[8]=0xf4;
;;;104    lcd_bitmap[9]=0xf4;	*/
;;;105    
;;;106    /*lcd_bitmap[122]=0xff;
;;;107    lcd_bitmap[123]=0xff;
;;;108    
;;;109    lcd_bitmap[129]=0xff;
;;;110    lcd_bitmap[130]=0xf5;
;;;111    lcd_bitmap[131]=0xf5;*/
;;;112    
;;;113    /*
;;;114    lcd_bitmap[244]=0xff;
;;;115    lcd_bitmap[245]=0xff;
;;;116    
;;;117    lcd_bitmap[249]=0xfe;
;;;118    lcd_bitmap[250]=0xfd;
;;;119    lcd_bitmap[251]=0xff;
;;;120    lcd_bitmap[252]=0xf9;
;;;121    lcd_bitmap[253]=0xf9; */
;;;122    
;;;123    /*
;;;124    lcd_bitmap[366]=0xff;
;;;125    lcd_bitmap[367]=0xff;
;;;126    
;;;127    lcd_bitmap[371]=0xfe;
;;;128    lcd_bitmap[372]=0xfd;
;;;129    lcd_bitmap[373]=0xff;
;;;130    lcd_bitmap[374]=0xf7;
;;;131    lcd_bitmap[375]=0xf7;*/
;;;132    /*
;;;133    bh2_plazma[0]=lcd_bitmap[122+6];
;;;134    bh2_plazma[1]=lcd_bitmap[123+6];
;;;135    bh2_plazma[2]=lcd_bitmap[124+6];
;;;136    bh2_plazma[3]=lcd_bitmap[125+6];
;;;137    bh2_plazma[4]=lcd_bitmap[126+6]; */
;;;138    //bh2_plazma[5]=lcd_bitmap[127];
;;;139    
;;;140    for(row=0;row<4;row++)	 //по 4 текстовым строкам
;;;141    	{
;;;142    	for(col=0;col<15;col++)	 //по 16 8-битным столбикам
;;;143    		{
;;;144    		for(row_=0;row_<8;row_++)	 //по каждому из 8 пикселей в строке
;;;145    			{
;;;146    			ptr_=((short)row*128)+((short)row_*16)+((short)col);
;;;147    	
;;;148    			lcd_bitmap2[ptr_]=0;//0x0f+row_;//row+16;
000008  4bd6              LDR      r3,|L1.868|
;;;149    
;;;150    		   	ptr=((short)row*122)+((short)col*8);
;;;151    
;;;152    			if((row==1)&&(col==0))
;;;153    				{
;;;154    /*				bh2_plazma[10]=row;
;;;155    				bh2_plazma[11]=col;
;;;156    				bh2_plazma[12]=(char)ptr;
;;;157    				bh2_plazma[13]=(char)(ptr>>8);
;;;158    				bh2_plazma[5]=lcd_bitmap[128+0];
;;;159    				bh2_plazma[6]=lcd_bitmap[128+1];
;;;160    				bh2_plazma[7]=lcd_bitmap[128+2];
;;;161    				bh2_plazma[8]=lcd_bitmap[128+3];
;;;162    				bh2_plazma[9]=lcd_bitmap[128+4];  */
;;;163    				}
;;;164    			for(col_=7;col_>=0;col_--)	 //по каждому из 8 пикселей в этом столбике
;;;165    				{
;;;166    				//ptr=((short)row*128)+((short)col*8)+((short)col_);
;;;167    				//if(ptr_==384) lcd_bitmap2[ptr_]|=bit_mask_const[col_];
;;;168    				if(lcd_bitmap[ptr]&0x01) lcd_bitmap2[ptr_]|=bit_mask_const[col_];
00000a  f8dfa35c          LDR      r10,|L1.872|
00000e  2000              MOVS     r0,#0                 ;140
                  |L1.16|
000010  01c1              LSLS     r1,r0,#7              ;146
000012  468e              MOV      lr,r1                 ;146
000014  2400              MOVS     r4,#0                 ;142
000016  217a              MOVS     r1,#0x7a              ;150
000018  4341              MULS     r1,r0,r1              ;150
00001a  9100              STR      r1,[sp,#0]            ;150
                  |L1.28|
00001c  9900              LDR      r1,[sp,#0]            ;150
00001e  2500              MOVS     r5,#0                 ;144
000020  eb0101c4          ADD      r1,r1,r4,LSL #3       ;150
000024  b209              SXTH     r1,r1                 ;150
000026  468b              MOV      r11,r1                ;150
                  |L1.40|
000028  eb0e1105          ADD      r1,lr,r5,LSL #4       ;146
00002c  4421              ADD      r1,r1,r4              ;146
00002e  b20e              SXTH     r6,r1                 ;146
000030  2100              MOVS     r1,#0                 ;148
000032  5599              STRB     r1,[r3,r6]            ;148
000034  f8dfc334          LDR      r12,|L1.876|
000038  4659              MOV      r1,r11                ;148
00003a  2207              MOVS     r2,#7                 ;164
                  |L1.60|
00003c  f81a7001          LDRB     r7,[r10,r1]
000040  46b9              MOV      r9,r7
000042  07ff              LSLS     r7,r7,#31
000044  d005              BEQ      |L1.82|
000046  5d9f              LDRB     r7,[r3,r6]
000048  f81c8002          LDRB     r8,[r12,r2]
00004c  ea470708          ORR      r7,r7,r8
000050  559f              STRB     r7,[r3,r6]
                  |L1.82|
;;;169    				lcd_bitmap[ptr++]>>=1;
000052  ea4f0859          LSR      r8,r9,#1
000056  f80a8001          STRB     r8,[r10,r1]
00005a  1c49              ADDS     r1,r1,#1
00005c  1e52              SUBS     r2,r2,#1              ;164
00005e  b252              SXTB     r2,r2                 ;164
000060  b209              SXTH     r1,r1
000062  2a00              CMP      r2,#0                 ;164
000064  daea              BGE      |L1.60|
000066  1c6d              ADDS     r5,r5,#1              ;144
000068  b2ed              UXTB     r5,r5                 ;144
00006a  2d08              CMP      r5,#8                 ;144
00006c  d3dc              BCC      |L1.40|
00006e  1c64              ADDS     r4,r4,#1              ;142
000070  b264              SXTB     r4,r4                 ;142
000072  2c0f              CMP      r4,#0xf               ;142
000074  dbd2              BLT      |L1.28|
000076  1c40              ADDS     r0,r0,#1              ;140
000078  b2c0              UXTB     r0,r0                 ;140
00007a  2804              CMP      r0,#4                 ;140
00007c  d3c8              BCC      |L1.16|
;;;170    				}
;;;171    			}
;;;172    		}
;;;173    	}
;;;174    
;;;175    /*for(ii=0;ii<128;ii++)
;;;176    	{ 
;;;177    	lcd_bitmap2[ii]=0;
;;;178    	}
;;;179    
;;;180    lcd_bitmap2[5]=0x01;
;;;181    lcd_bitmap2[7]=0x05;
;;;182    lcd_bitmap2[9]=0x15;
;;;183    lcd_bitmap2[11]=0x55;
;;;184    lcd_bitmap2[12]=0x01;
;;;185    lcd_bitmap2[13]=0x55;
;;;186    
;;;187    lcd_bitmap2[5+32]=0x55;
;;;188    lcd_bitmap2[7+32]=0x55;
;;;189    lcd_bitmap2[9+32]=0x55;
;;;190    lcd_bitmap2[11+32]=0x55;
;;;191    lcd_bitmap2[13+32]=0x55;*/
;;;192    
;;;193    
;;;194    /*
;;;195    lcd_bitmap2[5+64]=bh2_plazma[0];
;;;196    lcd_bitmap2[7+64]=bh2_plazma[1];
;;;197    lcd_bitmap2[9+64]=bh2_plazma[2];
;;;198    lcd_bitmap2[11+64]=bh2_plazma[3];
;;;199    lcd_bitmap2[13+64]=bh2_plazma[4];
;;;200    lcd_bitmap2[5+96]=bh2_plazma[5];
;;;201    lcd_bitmap2[7+96]=bh2_plazma[6];
;;;202    lcd_bitmap2[9+96]=bh2_plazma[7];
;;;203    lcd_bitmap2[11+96]=bh2_plazma[8];
;;;204    lcd_bitmap2[13+96]=bh2_plazma[9];
;;;205    lcd_bitmap2[5+112]=bh2_plazma[10];
;;;206    lcd_bitmap2[7+112]=bh2_plazma[11];
;;;207    lcd_bitmap2[9+112]=bh2_plazma[12];
;;;208    lcd_bitmap2[11+112]=bh2_plazma[13];
;;;209    lcd_bitmap2[13+112]=bh2_plazma[14];	*/
;;;210    //lcd_bitmap2[0]|=0xff;
;;;211    //lcd_bitmap2[128]|=0xff;
;;;212    //lcd_bitmap2[256]|=0xff;
;;;213    //lcd_bitmap2[384]|=0xff;
;;;214    //LPC_GPIO0->FIOCLR|=(1<<8);
;;;215    }
00007e  e8bd8ff8          POP      {r3-r11,pc}
;;;216    
                          ENDP

                  strob_us PROC
;;;217    //-----------------------------------------------
;;;218    void strob_us(short in)
000082  49bb              LDR      r1,|L1.880|
;;;219    {
;;;220    LPC_GPIO0->FIODIR|=(1<<8);
000084  680a              LDR      r2,[r1,#0]
000086  f4427280          ORR      r2,r2,#0x100
00008a  600a              STR      r2,[r1,#0]
;;;221    LPC_GPIO0->FIOSET|=(1<<8);
00008c  698a              LDR      r2,[r1,#0x18]
00008e  f4427280          ORR      r2,r2,#0x100
000092  618a              STR      r2,[r1,#0x18]
;;;222    delay_us(in);
000094  eb000040          ADD      r0,r0,r0,LSL #1
000098  0080              LSLS     r0,r0,#2
00009a  e000              B        |L1.158|
                  |L1.156|
00009c  1e40              SUBS     r0,r0,#1
                  |L1.158|
00009e  2800              CMP      r0,#0
0000a0  d1fc              BNE      |L1.156|
;;;223    LPC_GPIO0->FIOCLR|=(1<<8);
0000a2  69c8              LDR      r0,[r1,#0x1c]
0000a4  f4407080          ORR      r0,r0,#0x100
0000a8  61c8              STR      r0,[r1,#0x1c]
;;;224    }
0000aa  4770              BX       lr
;;;225    
                          ENDP

                  lcd1_chk PROC
;;;262    //-----------------------------------------------
;;;263    void lcd1_chk(void)
0000ac  48b0              LDR      r0,|L1.880|
;;;264    {
;;;265    LPC_GPIO1->FIODIR&=(~((1<<D0)|(1<<D1)|(1<<D2)|(1<<D3)|(1<<D4)|(1<<D5)|(1<<D6)|(1<<D7)));
0000ae  6a01              LDR      r1,[r0,#0x20]
0000b0  f021517f          BIC      r1,r1,#0x3fc00000
0000b4  6201              STR      r1,[r0,#0x20]
;;;266    LPC_GPIO1->FIOSET|=(1<<RW);
0000b6  6b81              LDR      r1,[r0,#0x38]
0000b8  f4411100          ORR      r1,r1,#0x200000
0000bc  6381              STR      r1,[r0,#0x38]
;;;267    
;;;268    __nop();
0000be  bf00              NOP      
;;;269    __nop();
0000c0  bf00              NOP      
;;;270    __nop();
0000c2  bf00              NOP      
;;;271    __nop();
0000c4  bf00              NOP      
;;;272    __nop(); 
0000c6  bf00              NOP      
;;;273    __nop();
0000c8  bf00              NOP      
;;;274    __nop();
0000ca  bf00              NOP      
;;;275    __nop();
0000cc  bf00              NOP      
;;;276    __nop();
0000ce  bf00              NOP      
;;;277    __nop(); 
0000d0  bf00              NOP      
;;;278    
;;;279    LPC_GPIO1->FIOCLR|=(1<<A0);
0000d2  6bc1              LDR      r1,[r0,#0x3c]
0000d4  f4412180          ORR      r1,r1,#0x40000
0000d8  63c1              STR      r1,[r0,#0x3c]
;;;280    
;;;281    __nop();
0000da  bf00              NOP      
;;;282    __nop();
0000dc  bf00              NOP      
;;;283    __nop();
0000de  bf00              NOP      
;;;284    __nop();
0000e0  bf00              NOP      
;;;285    __nop();
0000e2  bf00              NOP      
;;;286    __nop();
0000e4  bf00              NOP      
;;;287    __nop();
0000e6  bf00              NOP      
;;;288    __nop();
0000e8  bf00              NOP      
;;;289    __nop();
0000ea  bf00              NOP      
;;;290    __nop(); 
0000ec  bf00              NOP      
;;;291    
;;;292    LPC_GPIO1->FIOSET|=(1<<E1);
0000ee  6b81              LDR      r1,[r0,#0x38]
0000f0  f4412100          ORR      r1,r1,#0x80000
0000f4  6381              STR      r1,[r0,#0x38]
;;;293    
;;;294    delay_us(1);
0000f6  f04f010c          MOV      r1,#0xc
                  |L1.250|
0000fa  1e49              SUBS     r1,r1,#1
0000fc  d1fd              BNE      |L1.250|
                  |L1.254|
;;;295    
;;;296    chk1:
;;;297    
;;;298    if(LPC_GPIO1->FIOPIN&(1<<D7)) goto chk1;
0000fe  6b41              LDR      r1,[r0,#0x34]
000100  0089              LSLS     r1,r1,#2
000102  d4fc              BMI      |L1.254|
;;;299    
;;;300    }
000104  4770              BX       lr
;;;301    
                          ENDP

                  data1_wr PROC
;;;494    //-----------------------------------------------
;;;495    char data1_wr(char in)
000106  4a9a              LDR      r2,|L1.880|
;;;496    {
000108  b500              PUSH     {lr}
00010a  4603              MOV      r3,r0
;;;497    //__disable_irq();
;;;498    LPC_GPIO1->FIODIR|=((1<<A0)|(1<<E1));
00010c  6a10              LDR      r0,[r2,#0x20]
00010e  f4402040          ORR      r0,r0,#0xc0000
000112  6210              STR      r0,[r2,#0x20]
;;;499    LPC_GPIO1->FIODIR|=(1<<RW);
000114  6a10              LDR      r0,[r2,#0x20]
000116  f4401000          ORR      r0,r0,#0x200000
00011a  6210              STR      r0,[r2,#0x20]
;;;500    
;;;501    lcd1_chk();
00011c  f7fffffe          BL       lcd1_chk
;;;502    
;;;503    __nop();
000120  bf00              NOP      
;;;504    __nop();
000122  bf00              NOP      
;;;505    __nop();
000124  bf00              NOP      
;;;506    __nop();
000126  bf00              NOP      
;;;507    __nop();
000128  bf00              NOP      
;;;508    __nop();
00012a  bf00              NOP      
;;;509    __nop();
00012c  bf00              NOP      
;;;510    __nop();
00012e  bf00              NOP      
;;;511    __nop();
000130  bf00              NOP      
;;;512    __nop(); /*_*/
000132  bf00              NOP      
;;;513    
;;;514    LPC_GPIO1->FIOSET|=(1<<A0);
000134  6b90              LDR      r0,[r2,#0x38]
000136  f4402080          ORR      r0,r0,#0x40000
00013a  6390              STR      r0,[r2,#0x38]
;;;515    
;;;516    __nop();
00013c  bf00              NOP      
;;;517    __nop();
00013e  bf00              NOP      
;;;518    __nop();
000140  bf00              NOP      
;;;519    __nop();
000142  bf00              NOP      
;;;520    __nop();
000144  bf00              NOP      
;;;521    __nop();
000146  bf00              NOP      
;;;522    __nop();
000148  bf00              NOP      
;;;523    __nop();
00014a  bf00              NOP      
;;;524    __nop();
00014c  bf00              NOP      
;;;525    __nop(); /**/
00014e  bf00              NOP      
;;;526    
;;;527    LPC_GPIO1->FIOCLR|=(1<<RW);
000150  6bd0              LDR      r0,[r2,#0x3c]
000152  f4401000          ORR      r0,r0,#0x200000
000156  63d0              STR      r0,[r2,#0x3c]
;;;528    
;;;529    __nop();
000158  bf00              NOP      
;;;530    __nop();
00015a  bf00              NOP      
;;;531    __nop();
00015c  bf00              NOP      
;;;532    __nop();
00015e  bf00              NOP      
;;;533    __nop();
000160  bf00              NOP      
;;;534    __nop();
000162  bf00              NOP      
;;;535    __nop();
000164  bf00              NOP      
;;;536    __nop();
000166  bf00              NOP      
;;;537    __nop();
000168  bf00              NOP      
;;;538    __nop(); /**/
00016a  bf00              NOP      
;;;539    
;;;540    LPC_GPIO1->FIODIR|=((1<<D0)|(1<<D1)|(1<<D2)|(1<<D3)|(1<<D4)|(1<<D5)|(1<<D6)|(1<<D7));
00016c  6a10              LDR      r0,[r2,#0x20]
00016e  f040507f          ORR      r0,r0,#0x3fc00000
000172  6210              STR      r0,[r2,#0x20]
;;;541    LPC_GPIO1->FIOSET|=(((long)in)<<D0);
000174  6b90              LDR      r0,[r2,#0x38]
000176  ea405083          ORR      r0,r0,r3,LSL #22
00017a  6390              STR      r0,[r2,#0x38]
;;;542    LPC_GPIO1->FIOCLR|=(((long)(~in))<<D0)&(0xffUL<<D0);
00017c  6bd0              LDR      r0,[r2,#0x3c]
00017e  ea6f0103          MVN      r1,r3
000182  b2c9              UXTB     r1,r1
000184  ea405081          ORR      r0,r0,r1,LSL #22
000188  63d0              STR      r0,[r2,#0x3c]
;;;543    
;;;544    __nop();
00018a  bf00              NOP      
;;;545    __nop();
00018c  bf00              NOP      
;;;546    __nop();
00018e  bf00              NOP      
;;;547    __nop();
000190  bf00              NOP      
;;;548    __nop();
000192  bf00              NOP      
;;;549    __nop();
000194  bf00              NOP      
;;;550    __nop();
000196  bf00              NOP      
;;;551    __nop();
000198  bf00              NOP      
;;;552    __nop();
00019a  bf00              NOP      
;;;553    __nop(); /**/
00019c  bf00              NOP      
;;;554    
;;;555    LPC_GPIO1->FIOCLR|=(1<<E1);
00019e  6bd0              LDR      r0,[r2,#0x3c]
0001a0  f4402000          ORR      r0,r0,#0x80000
0001a4  63d0              STR      r0,[r2,#0x3c]
;;;556    
;;;557    __nop();
0001a6  bf00              NOP      
;;;558    __nop();
0001a8  bf00              NOP      
;;;559    __nop();
0001aa  bf00              NOP      
;;;560    __nop();
0001ac  bf00              NOP      
;;;561    __nop();
0001ae  bf00              NOP      
;;;562    __nop();
0001b0  bf00              NOP      
;;;563    __nop();
0001b2  bf00              NOP      
;;;564    __nop();
0001b4  bf00              NOP      
;;;565    __nop();
0001b6  bf00              NOP      
;;;566    __nop(); /**/
0001b8  bf00              NOP      
;;;567    
;;;568    return in;
0001ba  4618              MOV      r0,r3
;;;569    }
0001bc  bd00              POP      {pc}
;;;570    
                          ENDP

                  lcd1_wr PROC
;;;340    //-----------------------------------------------
;;;341    void lcd1_wr(char in)
0001be  4a6c              LDR      r2,|L1.880|
;;;342    {
0001c0  b500              PUSH     {lr}
0001c2  4603              MOV      r3,r0
;;;343    
;;;344    LPC_GPIO1->FIODIR|=((1UL<<A0)|(1UL<<E1)|(1UL<<RW));
0001c4  6a10              LDR      r0,[r2,#0x20]
0001c6  f4401030          ORR      r0,r0,#0x2c0000
0001ca  6210              STR      r0,[r2,#0x20]
;;;345    
;;;346    lcd1_chk();
0001cc  f7fffffe          BL       lcd1_chk
;;;347    
;;;348    __nop();
0001d0  bf00              NOP      
;;;349    __nop();
0001d2  bf00              NOP      
;;;350    __nop();
0001d4  bf00              NOP      
;;;351    __nop();
0001d6  bf00              NOP      
;;;352    __nop();
0001d8  bf00              NOP      
;;;353    __nop();
0001da  bf00              NOP      
;;;354    __nop();
0001dc  bf00              NOP      
;;;355    __nop();
0001de  bf00              NOP      
;;;356    __nop();
0001e0  bf00              NOP      
;;;357    __nop();
0001e2  bf00              NOP      
;;;358    
;;;359    LPC_GPIO1->FIOCLR|=(1UL<<A0);
0001e4  6bd0              LDR      r0,[r2,#0x3c]
0001e6  f4402080          ORR      r0,r0,#0x40000
0001ea  63d0              STR      r0,[r2,#0x3c]
;;;360    
;;;361    __nop();
0001ec  bf00              NOP      
;;;362    __nop();
0001ee  bf00              NOP      
;;;363    __nop();
0001f0  bf00              NOP      
;;;364    __nop();
0001f2  bf00              NOP      
;;;365    __nop();
0001f4  bf00              NOP      
;;;366    __nop();
0001f6  bf00              NOP      
;;;367    __nop();
0001f8  bf00              NOP      
;;;368    __nop();
0001fa  bf00              NOP      
;;;369    __nop();
0001fc  bf00              NOP      
;;;370    __nop();
0001fe  bf00              NOP      
;;;371    
;;;372    LPC_GPIO1->FIOCLR|=(1UL<<RW);
000200  6bd0              LDR      r0,[r2,#0x3c]
000202  f4401000          ORR      r0,r0,#0x200000
000206  63d0              STR      r0,[r2,#0x3c]
;;;373    
;;;374    __nop();
000208  bf00              NOP      
;;;375    __nop();
00020a  bf00              NOP      
;;;376    __nop();
00020c  bf00              NOP      
;;;377    __nop();
00020e  bf00              NOP      
;;;378    __nop();
000210  bf00              NOP      
;;;379    __nop();
000212  bf00              NOP      
;;;380    __nop();
000214  bf00              NOP      
;;;381    __nop();
000216  bf00              NOP      
;;;382    __nop();
000218  bf00              NOP      
;;;383    __nop();
00021a  bf00              NOP      
;;;384    
;;;385    LPC_GPIO1->FIODIR|=((1<<D0)|(1<<D1)|(1<<D2)|(1<<D3)|(1<<D4)|(1<<D5)|(1<<D6)|(1<<D7));
00021c  6a10              LDR      r0,[r2,#0x20]
00021e  f040507f          ORR      r0,r0,#0x3fc00000
000222  6210              STR      r0,[r2,#0x20]
;;;386    LPC_GPIO1->FIOSET|=(((long)in)<<D0);
000224  6b90              LDR      r0,[r2,#0x38]
000226  ea405083          ORR      r0,r0,r3,LSL #22
00022a  6390              STR      r0,[r2,#0x38]
;;;387    LPC_GPIO1->FIOCLR|=(((long)(~in))<<D0)&(0xffUL<<D0);
00022c  6bd0              LDR      r0,[r2,#0x3c]
00022e  ea6f0103          MVN      r1,r3
000232  b2c9              UXTB     r1,r1
000234  ea405081          ORR      r0,r0,r1,LSL #22
000238  63d0              STR      r0,[r2,#0x3c]
;;;388    
;;;389    __nop();
00023a  bf00              NOP      
;;;390    __nop();
00023c  bf00              NOP      
;;;391    __nop();
00023e  bf00              NOP      
;;;392    __nop();
000240  bf00              NOP      
;;;393    __nop();
000242  bf00              NOP      
;;;394    __nop();
000244  bf00              NOP      
;;;395    __nop();
000246  bf00              NOP      
;;;396    __nop();
000248  bf00              NOP      
;;;397    __nop();
00024a  bf00              NOP      
;;;398    __nop();
00024c  bf00              NOP      
;;;399    
;;;400    LPC_GPIO1->FIOCLR|=(1<<E1);
00024e  6bd0              LDR      r0,[r2,#0x3c]
000250  f4402000          ORR      r0,r0,#0x80000
000254  63d0              STR      r0,[r2,#0x3c]
;;;401    
;;;402    __nop();
000256  bf00              NOP      
;;;403    __nop();
000258  bf00              NOP      
;;;404    __nop();
00025a  bf00              NOP      
;;;405    __nop();
00025c  bf00              NOP      
;;;406    __nop();
00025e  bf00              NOP      
;;;407    __nop();
000260  bf00              NOP      
;;;408    __nop();
000262  bf00              NOP      
;;;409    __nop();
000264  bf00              NOP      
;;;410    __nop();
000266  bf00              NOP      
;;;411    __nop();
000268  bf00              NOP      
;;;412    
;;;413    }
00026a  bd00              POP      {pc}
;;;414    
                          ENDP

                  lcd_clear PROC
;;;1015   //-----------------------------------------------
;;;1016   void lcd_clear(void)
00026c  b530              PUSH     {r4,r5,lr}
;;;1017   {
;;;1018   char row,col,i;
;;;1019   
;;;1020   for(row=0;row<32;row++)
00026e  2400              MOVS     r4,#0
                  |L1.624|
;;;1021   	{
;;;1022   	lcd1_wr(0x80+row);
000270  f1040080          ADD      r0,r4,#0x80
000274  b2c0              UXTB     r0,r0
000276  f7fffffe          BL       lcd1_wr
;;;1023   	lcd1_wr(0x80);
00027a  2080              MOVS     r0,#0x80
00027c  f7fffffe          BL       lcd1_wr
;;;1024   
;;;1025   /*for(page=0;page<=Max_page;page++)
;;;1026   
;;;1027   	{
;;;1028   	lcd_set_page(page);
;;;1029   	lcd_set_col(0);
;;;1030   	for(col=0;col<=Max_Col;col++)
;;;1031            	{
;;;1032            	data1_wr(0x01);
;;;1033   	    	//data2_wr(0x00);
;;;1034        	}
;;;1035        }  */
;;;1036   
;;;1037   for (i=0;i<8;i++)
000280  2500              MOVS     r5,#0
                  |L1.642|
;;;1038   	{
;;;1039   	data1_wr(0x00);
000282  2000              MOVS     r0,#0
000284  f7fffffe          BL       data1_wr
;;;1040   	data1_wr(0x00);
000288  2000              MOVS     r0,#0
00028a  f7fffffe          BL       data1_wr
00028e  1c6d              ADDS     r5,r5,#1              ;1037
000290  b2ed              UXTB     r5,r5                 ;1037
000292  2d08              CMP      r5,#8                 ;1037
000294  d3f5              BCC      |L1.642|
000296  1c64              ADDS     r4,r4,#1              ;1020
000298  b2e4              UXTB     r4,r4                 ;1020
00029a  2c20              CMP      r4,#0x20              ;1020
00029c  d3e8              BCC      |L1.624|
;;;1041   	}
;;;1042   }
;;;1043   /*
;;;1044   data1_wr(0x01);
;;;1045   data1_wr(0x00);
;;;1046   data1_wr(0x00);
;;;1047   data1_wr(0x00);
;;;1048   data1_wr(0x00);
;;;1049   data1_wr(0x05);
;;;1050   data1_wr(0x15);*/
;;;1051   }
00029e  bd30              POP      {r4,r5,pc}
;;;1052   
                          ENDP

                  lcd_init PROC
;;;667    //-----------------------------------------------
;;;668    void lcd_init(void) 
0002a0  b570              PUSH     {r4-r6,lr}
;;;669    {
;;;670    int i/*,ii*/;
;;;671    
;;;672    
;;;673    
;;;674    delay_ms(100);
0002a2  4834              LDR      r0,|L1.884|
                  |L1.676|
0002a4  1e40              SUBS     r0,r0,#1
0002a6  d1fd              BNE      |L1.676|
;;;675    
;;;676    
;;;677    //SET_REG(LPC_GPIO0->FIODIR,1,29,1);
;;;678    //LPC_GPIO0->FIODIR|=(1<<RES)|(1<<29);
;;;679    
;;;680    //SET_REG(LPC_GPIO0->FIOSET,1,29,1);
;;;681    
;;;682    //delay_us(10);	
;;;683    //LPC_GPIO0->FIODIR|=(1<<RES)/*|(1<<29)*/;
;;;684    //strob_us(10);
;;;685    //SET_REG(LPC_GPIO0->FIOSET,1,29,1);
;;;686    //delay_us(1);
;;;687    //SET_REG(LPC_GPIO0->FIOCLR,1,29,1); 
;;;688    
;;;689    					
;;;690    LPC_GPIO1->FIODIR|=(1<<D0)|(1<<D1)|(1<<D2)|(1<<D3)|(1<<D4)|(1<<D5)|(1<<D6)|(1<<D7);
0002a8  4831              LDR      r0,|L1.880|
0002aa  6a01              LDR      r1,[r0,#0x20]
0002ac  f041517f          ORR      r1,r1,#0x3fc00000
0002b0  6201              STR      r1,[r0,#0x20]
;;;691    LPC_GPIO1->FIODIR|=(1<<E1)|(1<<A0)|(1<<E2)|(1<<RW);
0002b2  6a01              LDR      r1,[r0,#0x20]
0002b4  f4411170          ORR      r1,r1,#0x3c0000
0002b8  6201              STR      r1,[r0,#0x20]
;;;692    LPC_GPIO0->FIODIR|=(1<<RES)|(1<<29);
0002ba  6801              LDR      r1,[r0,#0]
0002bc  f04141c0          ORR      r1,r1,#0x60000000
0002c0  6001              STR      r1,[r0,#0]
;;;693    
;;;694    
;;;695    
;;;696    //for(i=0;i<2;i++)
;;;697    //SET_REG(LPC_GPIO0->FIOSET,1,29,1);
;;;698    //delay_us(1);
;;;699    //SET_REG(LPC_GPIO0->FIOCLR,1,29,1); 
;;;700    //SET_REG(LPC_GPIO0->FIOSET,1,29,1);
;;;701    //SET_REG(LPC_GPIO0->FIOCLR,1,30,1);
;;;702    /*for(i=0;i<100;i++)
;;;703    	{*/											 //SET_REG(LPC_GPIO0->FIOCLR,1,29,1);
;;;704    LPC_GPIO0->FIOCLR|=(1<<RES);
0002c2  69c1              LDR      r1,[r0,#0x1c]
0002c4  f0414180          ORR      r1,r1,#0x40000000
0002c8  61c1              STR      r1,[r0,#0x1c]
;;;705    delay_us(50);
0002ca  f44f7416          MOV      r4,#0x258
0002ce  4621              MOV      r1,r4
                  |L1.720|
0002d0  1e49              SUBS     r1,r1,#1
0002d2  d1fd              BNE      |L1.720|
;;;706    LPC_GPIO0->FIOSET|=(1<<RES);
0002d4  6981              LDR      r1,[r0,#0x18]
0002d6  f0414180          ORR      r1,r1,#0x40000000
0002da  6181              STR      r1,[r0,#0x18]
;;;707    delay_us(50);
0002dc  4620              MOV      r0,r4
                  |L1.734|
0002de  1e40              SUBS     r0,r0,#1
0002e0  d1fd              BNE      |L1.734|
;;;708    /*	SET_REG(LPC_GPIO0->FIOCLR,1,29,1); */
;;;709    	//}	
;;;710    
;;;711    //SET_REG(LPC_GPIO0->FIOCLR,1,29,1);
;;;712    
;;;713    /*for(i=0;i<166000;i++)
;;;714    	{
;;;715    	__nop();
;;;716    	}*/
;;;717    
;;;718    lcd1_wr(0x3f);
0002e2  203f              MOVS     r0,#0x3f
0002e4  f7fffffe          BL       lcd1_wr
;;;719    delay_us(150);
0002e8  f44f66e1          MOV      r6,#0x708
0002ec  4635              MOV      r5,r6
                  |L1.750|
0002ee  1e6d              SUBS     r5,r5,#1
0002f0  d1fd              BNE      |L1.750|
;;;720    //strob_us(10);	
;;;721    /*
;;;722    for(i=0;i<166000;i++)
;;;723    	{
;;;724    	__nop();
;;;725    	}*/
;;;726    
;;;727    lcd1_wr(0x3f);
0002f2  203f              MOVS     r0,#0x3f
0002f4  f7fffffe          BL       lcd1_wr
                  |L1.760|
;;;728    
;;;729    delay_us(50);
0002f8  1e64              SUBS     r4,r4,#1
0002fa  d1fd              BNE      |L1.760|
;;;730    //strob_us(10);
;;;731    /*
;;;732    for(i=0;i<166000;i++)
;;;733    	{
;;;734    	__nop();
;;;735    	}	*/
;;;736    
;;;737    lcd1_wr(0x0c);
0002fc  200c              MOVS     r0,#0xc
0002fe  f7fffffe          BL       lcd1_wr
                  |L1.770|
;;;738    
;;;739    delay_us(150);
000302  1e76              SUBS     r6,r6,#1
000304  d1fd              BNE      |L1.770|
;;;740    //strob_us(10);
;;;741    
;;;742    //for(i=0;i<166000;i++)
;;;743    /*	{
;;;744    	__nop();
;;;745    	}*/
;;;746    
;;;747    
;;;748    
;;;749    /*
;;;750    for(i=0;i<166000;i++)
;;;751    	{
;;;752    	__nop();
;;;753    	}*/
;;;754    
;;;755    /*lcd1_wr(0x01);
;;;756    
;;;757    for(i=0;i<166000;i++)
;;;758    	{
;;;759    	__nop();
;;;760    	} */
;;;761    
;;;762    /*lcd1_wr(0x04);
;;;763    
;;;764    for(i=0;i<166000;i++)
;;;765    	{
;;;766    	__nop();
;;;767    	}*/
;;;768    //lcd_reset();
;;;769    //E1d=1;
;;;770    //E2d=1;
;;;771    //A0d=1;
;;;772    //RWd=1;
;;;773    
;;;774    //E1=0;
;;;775    //E2=0;
;;;776    /*IO1CLR|=(1<<E1);
;;;777    IO1CLR|=(1<<E2);
;;;778    //A0=1;
;;;779    IO1SET|=(1<<A0);
;;;780    //RW=1;
;;;781    IO1SET|=(1<<RW);
;;;782    
;;;783    lcd1_wr(_RESET_);
;;;784    lcd2_wr(_RESET_);*/
;;;785         //LCD_PORTc=0xFF;
;;;786         //LCD_PORT=0xFF;
;;;787    //disp_page0(); 
;;;788    
;;;789    //IO0CLR|=(1<<A0)|(1<<RW);
;;;790    }
000306  bd70              POP      {r4-r6,pc}
;;;791    
                          ENDP

                  lcd_out PROC
;;;1071   //-----------------------------------------------
;;;1072   void lcd_out(char* adr)
000308  e92d41f0          PUSH     {r4-r8,lr}
;;;1073   {
;;;1074   static char mem;
;;;1075   short lcd_ptr;
;;;1076   
;;;1077   char d1,d2;
;;;1078   char row,col,i;
;;;1079   //strob_us(1);
;;;1080   
;;;1081   bitmap_hndl_2();
00030c  f7fffffe          BL       bitmap_hndl_2
;;;1082   
;;;1083   if(mem)
000310  4819              LDR      r0,|L1.888|
000312  7801              LDRB     r1,[r0,#0]  ; mem
000314  b109              CBZ      r1,|L1.794|
;;;1084   	{
;;;1085   	mem=0;
000316  2100              MOVS     r1,#0
;;;1086   	d1=0x55;
;;;1087   	d2=0xff;
000318  e000              B        |L1.796|
                  |L1.794|
;;;1088   	}
;;;1089   else 
;;;1090   	{
;;;1091   	mem=1;
00031a  2101              MOVS     r1,#1
                  |L1.796|
;;;1092   	d2=0x55;
;;;1093   	d1=0xff;
;;;1094   	} 
;;;1095   
;;;1096   lcd_ptr=0;
00031c  2600              MOVS     r6,#0
00031e  7001              STRB     r1,[r0,#0]            ;1091
;;;1097   
;;;1098   for(row=0;row<32;row++)
000320  ea4f0406          MOV.W    r4,r6
                  |L1.804|
;;;1099   	{
;;;1100   	//strob_us(10);
;;;1101   	lcd1_wr(0x80+row);
000324  f1040080          ADD      r0,r4,#0x80
000328  b2c0              UXTB     r0,r0
00032a  f7fffffe          BL       lcd1_wr
;;;1102   	//strob_us(10);
;;;1103   	lcd1_wr(0x80);
00032e  2080              MOVS     r0,#0x80
000330  f7fffffe          BL       lcd1_wr
;;;1104      	//strob_us(10);
;;;1105   /*for(page=0;page<=Max_page;page++)
;;;1106   
;;;1107   	{
;;;1108   	lcd_set_page(page);
;;;1109   	lcd_set_col(0);
;;;1110   	for(col=0;col<=Max_Col;col++)
;;;1111            	{
;;;1112            	data1_wr(0x01);
;;;1113   	    	//data2_wr(0x00);
;;;1114        	}
;;;1115        }  */
;;;1116   
;;;1117   	/*for (i=0;i<8;i++)
;;;1118   		{
;;;1119   		if(i==0) strob_us(10);
;;;1120   		data1_wr(d1);
;;;1121   		if(i==0) strob_us(10);
;;;1122   		data1_wr(d2);
;;;1123   		} */
;;;1124   
;;;1125   	for (i=0;i<16;i++)
000334  2500              MOVS     r5,#0
;;;1126   		{
;;;1127   		if(i==0) strob_us(1);
;;;1128   		data1_wr(lcd_bitmap2[lcd_ptr++]);
000336  4f0b              LDR      r7,|L1.868|
000338  e000              B        |L1.828|
                  |L1.826|
00033a  b915              CBNZ     r5,|L1.834|
                  |L1.828|
00033c  2001              MOVS     r0,#1                 ;1127
00033e  f7fffffe          BL       strob_us
                  |L1.834|
000342  5db8              LDRB     r0,[r7,r6]
000344  1c76              ADDS     r6,r6,#1
000346  b236              SXTH     r6,r6
000348  f7fffffe          BL       data1_wr
00034c  1c6d              ADDS     r5,r5,#1              ;1125
00034e  b2ed              UXTB     r5,r5                 ;1125
000350  2d10              CMP      r5,#0x10              ;1125
000352  d3f2              BCC      |L1.826|
000354  1c64              ADDS     r4,r4,#1              ;1098
000356  b2e4              UXTB     r4,r4                 ;1098
000358  2c20              CMP      r4,#0x20              ;1098
00035a  d3e3              BCC      |L1.804|
;;;1129   		//data1_wr(0x01);
;;;1130   		}
;;;1131   
;;;1132   	}
;;;1133   
;;;1134   }
00035c  e8bd81f0          POP      {r4-r8,pc}
;;;1135   
                          ENDP

                  lcd_on PROC
;;;1057   //-----------------------------------------------
;;;1058   void lcd_on(void) 
000360  20af              MOVS     r0,#0xaf
;;;1059   {
;;;1060   lcd1_wr(_DISPLAY_ON_);
000362  e7fe              B        lcd1_wr
;;;1061   //lcd2_wr(_DISPLAY_ON_);
;;;1062   }
;;;1063   
                          ENDP

                  |L1.868|
                          DCD      ||.bss||
                  |L1.872|
                          DCD      lcd_bitmap
                  |L1.876|
                          DCD      ||.constdata||
                  |L1.880|
                          DCD      0x2009c000
                  |L1.884|
                          DCD      0x00124f80
                  |L1.888|
                          DCD      ||.data||

                          AREA ||area_number.2||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.2||, ||.text||
                  strob_ms PROC
;;;1064   //-----------------------------------------------
;;;1065   void lcd_off(void)
000000  490a              LDR      r1,|L2.44|
;;;1066   {
;;;1067   lcd1_wr(_DISPLAY_OFF_);
000002  680a              LDR      r2,[r1,#0]
000004  f4427280          ORR      r2,r2,#0x100
000008  600a              STR      r2,[r1,#0]
00000a  698a              LDR      r2,[r1,#0x18]
00000c  f4427280          ORR      r2,r2,#0x100
000010  618a              STR      r2,[r1,#0x18]
000012  f64262e0          MOV      r2,#0x2ee0
000016  4350              MULS     r0,r2,r0
000018  e000              B        |L2.28|
                  |L2.26|
00001a  1e40              SUBS     r0,r0,#1
                  |L2.28|
00001c  2800              CMP      r0,#0
00001e  d1fc              BNE      |L2.26|
000020  69c8              LDR      r0,[r1,#0x1c]
000022  f4407080          ORR      r0,r0,#0x100
000026  61c8              STR      r0,[r1,#0x1c]
000028  4770              BX       lr
;;;1068   //lcd2_wr(_DISPLAY_OFF_);
;;;1069   }
;;;1070   
                          ENDP

00002a  0000              DCW      0x0000
                  |L2.44|
                          DCD      0x2009c000

                          AREA ||area_number.3||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.3||, ||.text||
                  lcd_debug_start PROC
;;;1064   //-----------------------------------------------
;;;1065   void lcd_off(void)
000000  b500              PUSH     {lr}
;;;1066   {
;;;1067   lcd1_wr(_DISPLAY_OFF_);
000002  f7fffffe          BL       lcd_init
000006  f85deb04          POP      {lr}
00000a  f7ffbffe          B.W      lcd_clear
;;;1068   //lcd2_wr(_DISPLAY_OFF_);
;;;1069   }
;;;1070   
                          ENDP


                          AREA ||area_number.4||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.4||, ||.text||
                  lcd_debug_loop PROC
;;;1064   //-----------------------------------------------
;;;1065   void lcd_off(void)
000000  b510              PUSH     {r4,lr}
;;;1066   {
;;;1067   lcd1_wr(_DISPLAY_OFF_);
000002  4809              LDR      r0,|L4.40|
                  |L4.4|
000004  1e40              SUBS     r0,r0,#1
000006  d1fd              BNE      |L4.4|
000008  a308              ADR      r3,|L4.44|
00000a  a20e              ADR      r2,|L4.68|
00000c  a113              ADR      r1,|L4.92|
00000e  a019              ADR      r0,|L4.116|
000010  f7fffffe          BL       bgnd_par
000014  2200              MOVS     r2,#0
000016  217b              MOVS     r1,#0x7b
000018  2023              MOVS     r0,#0x23
00001a  f7fffffe          BL       int2lcd
00001e  e8bd4010          POP      {r4,lr}
000022  2000              MOVS     r0,#0
000024  f7ffbffe          B.W      lcd_out
;;;1068   //lcd2_wr(_DISPLAY_OFF_);
;;;1069   }
;;;1070   
                          ENDP

                  |L4.40|
                          DCD      0x00124f80
                  |L4.44|
00002c  35362020          DCB      "56  ",200,237,232,246,232,224,235,232,231,224,246,232,255
000030  c8ede8f6
000034  e8e0ebe8
000038  e7e0f6e8
00003c  ff      
00003d  20203800          DCB      "  8",0
000041  00                DCB      0
000042  00                DCB      0
000043  00                DCB      0
                  |L4.68|
000044  35202020          DCB      "5   ",237,229," ",239,238,228,234,235,254,247,229,237,224
000048  ede520ef
00004c  eee4eaeb
000050  fef7e5ed
000054  e0      
000055  20203600          DCB      "  6",0
000059  00                DCB      0
00005a  00                DCB      0
00005b  00                DCB      0
                  |L4.92|
00005c  33202020          DCB      "3    ",193,224,242,224,240,229,255," ",185,"#    4",0
000060  20c1e0f2
000064  e0f0e5ff
000068  20b92320
00006c  20202034
000070  00      
000071  00                DCB      0
000072  00                DCB      0
000073  00                DCB      0
                  |L4.116|
000074  31202020          DCB      "1      ",192,194,192,208,200,223,"!     2",0
000078  202020c0
00007c  c2c0d0c8
000080  df212020
000084  20202032
000088  00      
000089  00                DCB      0
00008a  00                DCB      0
00008b  00                DCB      0

                          AREA ||area_number.5||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.5||, ||.text||
                  lcd2_chk PROC
;;;1064   //-----------------------------------------------
;;;1065   void lcd_off(void)
000000  4814              LDR      r0,|L5.84|
;;;1066   {
;;;1067   lcd1_wr(_DISPLAY_OFF_);
000002  6a01              LDR      r1,[r0,#0x20]
000004  f021517f          BIC      r1,r1,#0x3fc00000
000008  6201              STR      r1,[r0,#0x20]
00000a  6b81              LDR      r1,[r0,#0x38]
00000c  f4411100          ORR      r1,r1,#0x200000
000010  6381              STR      r1,[r0,#0x38]
000012  bf00              NOP      
000014  bf00              NOP      
000016  bf00              NOP      
000018  bf00              NOP      
00001a  bf00              NOP      
00001c  bf00              NOP      
00001e  bf00              NOP      
000020  bf00              NOP      
000022  bf00              NOP      
000024  bf00              NOP      
000026  6bc1              LDR      r1,[r0,#0x3c]
000028  f4412180          ORR      r1,r1,#0x40000
00002c  63c1              STR      r1,[r0,#0x3c]
00002e  bf00              NOP      
000030  bf00              NOP      
000032  bf00              NOP      
000034  bf00              NOP      
000036  bf00              NOP      
000038  bf00              NOP      
00003a  bf00              NOP      
00003c  bf00              NOP      
00003e  bf00              NOP      
000040  bf00              NOP      
000042  6b81              LDR      r1,[r0,#0x38]
000044  f4411180          ORR      r1,r1,#0x100000
000048  6381              STR      r1,[r0,#0x38]
                  |L5.74|
00004a  6b41              LDR      r1,[r0,#0x34]
00004c  0089              LSLS     r1,r1,#2
00004e  d4fc              BMI      |L5.74|
000050  4770              BX       lr
;;;1068   //lcd2_wr(_DISPLAY_OFF_);
;;;1069   }
;;;1070   
                          ENDP

000052  0000              DCW      0x0000
                  |L5.84|
                          DCD      0x2009c000

                          AREA ||area_number.6||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.6||, ||.text||
                  lcd2_wr_ PROC
;;;1064   //-----------------------------------------------
;;;1065   void lcd_off(void)
000000  4a2d              LDR      r2,|L6.184|
;;;1066   {
;;;1067   lcd1_wr(_DISPLAY_OFF_);
000002  b500              PUSH     {lr}
000004  4603              MOV      r3,r0
000006  6a10              LDR      r0,[r2,#0x20]
000008  f4402080          ORR      r0,r0,#0x40000
00000c  6210              STR      r0,[r2,#0x20]
00000e  6a10              LDR      r0,[r2,#0x20]
000010  f4401040          ORR      r0,r0,#0x300000
000014  6210              STR      r0,[r2,#0x20]
000016  f7fffffe          BL       lcd2_chk
00001a  bf00              NOP      
00001c  bf00              NOP      
00001e  bf00              NOP      
000020  bf00              NOP      
000022  bf00              NOP      
000024  bf00              NOP      
000026  bf00              NOP      
000028  bf00              NOP      
00002a  bf00              NOP      
00002c  bf00              NOP      
00002e  6bd0              LDR      r0,[r2,#0x3c]
000030  f4402080          ORR      r0,r0,#0x40000
000034  63d0              STR      r0,[r2,#0x3c]
000036  bf00              NOP      
000038  bf00              NOP      
00003a  bf00              NOP      
00003c  bf00              NOP      
00003e  bf00              NOP      
000040  bf00              NOP      
000042  bf00              NOP      
000044  bf00              NOP      
000046  bf00              NOP      
000048  bf00              NOP      
00004a  6bd0              LDR      r0,[r2,#0x3c]
00004c  f4401000          ORR      r0,r0,#0x200000
000050  63d0              STR      r0,[r2,#0x3c]
000052  bf00              NOP      
000054  bf00              NOP      
000056  bf00              NOP      
000058  bf00              NOP      
00005a  bf00              NOP      
00005c  bf00              NOP      
00005e  bf00              NOP      
000060  bf00              NOP      
000062  bf00              NOP      
000064  bf00              NOP      
000066  6a10              LDR      r0,[r2,#0x20]
000068  f040507f          ORR      r0,r0,#0x3fc00000
00006c  6210              STR      r0,[r2,#0x20]
00006e  6b90              LDR      r0,[r2,#0x38]
000070  ea405083          ORR      r0,r0,r3,LSL #22
000074  6390              STR      r0,[r2,#0x38]
000076  6bd0              LDR      r0,[r2,#0x3c]
000078  ea6f0103          MVN      r1,r3
00007c  b2c9              UXTB     r1,r1
00007e  ea405081          ORR      r0,r0,r1,LSL #22
000082  63d0              STR      r0,[r2,#0x3c]
000084  bf00              NOP      
000086  bf00              NOP      
000088  bf00              NOP      
00008a  bf00              NOP      
00008c  bf00              NOP      
00008e  bf00              NOP      
000090  bf00              NOP      
000092  bf00              NOP      
000094  bf00              NOP      
000096  bf00              NOP      
000098  6bd0              LDR      r0,[r2,#0x3c]
00009a  f4401080          ORR      r0,r0,#0x100000
00009e  63d0              STR      r0,[r2,#0x3c]
0000a0  bf00              NOP      
0000a2  bf00              NOP      
0000a4  bf00              NOP      
0000a6  bf00              NOP      
0000a8  bf00              NOP      
0000aa  bf00              NOP      
0000ac  bf00              NOP      
0000ae  bf00              NOP      
0000b0  bf00              NOP      
0000b2  bf00              NOP      
0000b4  bd00              POP      {pc}
;;;1068   //lcd2_wr(_DISPLAY_OFF_);
;;;1069   }
;;;1070   
                          ENDP

0000b6  0000              DCW      0x0000
                  |L6.184|
                          DCD      0x2009c000

                          AREA ||area_number.7||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.7||, ||.text||
                  data2_wr_ PROC
;;;1064   //-----------------------------------------------
;;;1065   void lcd_off(void)
000000  4a2d              LDR      r2,|L7.184|
;;;1066   {
;;;1067   lcd1_wr(_DISPLAY_OFF_);
000002  b500              PUSH     {lr}
000004  4603              MOV      r3,r0
000006  6a10              LDR      r0,[r2,#0x20]
000008  f4402080          ORR      r0,r0,#0x40000
00000c  6210              STR      r0,[r2,#0x20]
00000e  6a10              LDR      r0,[r2,#0x20]
000010  f4401040          ORR      r0,r0,#0x300000
000014  6210              STR      r0,[r2,#0x20]
000016  f7fffffe          BL       lcd2_chk
00001a  bf00              NOP      
00001c  bf00              NOP      
00001e  bf00              NOP      
000020  bf00              NOP      
000022  bf00              NOP      
000024  bf00              NOP      
000026  bf00              NOP      
000028  bf00              NOP      
00002a  bf00              NOP      
00002c  bf00              NOP      
00002e  6b90              LDR      r0,[r2,#0x38]
000030  f4402080          ORR      r0,r0,#0x40000
000034  6390              STR      r0,[r2,#0x38]
000036  bf00              NOP      
000038  bf00              NOP      
00003a  bf00              NOP      
00003c  bf00              NOP      
00003e  bf00              NOP      
000040  bf00              NOP      
000042  bf00              NOP      
000044  bf00              NOP      
000046  bf00              NOP      
000048  bf00              NOP      
00004a  6bd0              LDR      r0,[r2,#0x3c]
00004c  f4401000          ORR      r0,r0,#0x200000
000050  63d0              STR      r0,[r2,#0x3c]
000052  bf00              NOP      
000054  bf00              NOP      
000056  bf00              NOP      
000058  bf00              NOP      
00005a  bf00              NOP      
00005c  bf00              NOP      
00005e  bf00              NOP      
000060  bf00              NOP      
000062  bf00              NOP      
000064  bf00              NOP      
000066  6a10              LDR      r0,[r2,#0x20]
000068  f040507f          ORR      r0,r0,#0x3fc00000
00006c  6210              STR      r0,[r2,#0x20]
00006e  6b90              LDR      r0,[r2,#0x38]
000070  ea405083          ORR      r0,r0,r3,LSL #22
000074  6390              STR      r0,[r2,#0x38]
000076  6bd0              LDR      r0,[r2,#0x3c]
000078  ea6f0103          MVN      r1,r3
00007c  b2c9              UXTB     r1,r1
00007e  ea405081          ORR      r0,r0,r1,LSL #22
000082  63d0              STR      r0,[r2,#0x3c]
000084  bf00              NOP      
000086  bf00              NOP      
000088  bf00              NOP      
00008a  bf00              NOP      
00008c  bf00              NOP      
00008e  bf00              NOP      
000090  bf00              NOP      
000092  bf00              NOP      
000094  bf00              NOP      
000096  bf00              NOP      
000098  6bd0              LDR      r0,[r2,#0x3c]
00009a  f4401080          ORR      r0,r0,#0x100000
00009e  63d0              STR      r0,[r2,#0x3c]
0000a0  bf00              NOP      
0000a2  bf00              NOP      
0000a4  bf00              NOP      
0000a6  bf00              NOP      
0000a8  bf00              NOP      
0000aa  bf00              NOP      
0000ac  bf00              NOP      
0000ae  bf00              NOP      
0000b0  bf00              NOP      
0000b2  bf00              NOP      
0000b4  bd00              POP      {pc}
;;;1068   //lcd2_wr(_DISPLAY_OFF_);
;;;1069   }
;;;1070   
                          ENDP

0000b6  0000              DCW      0x0000
                  |L7.184|
                          DCD      0x2009c000

                          AREA ||area_number.8||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.8||, ||.text||
                  lcd_set_page PROC
;;;1064   //-----------------------------------------------
;;;1065   void lcd_off(void)
000000  f04000b8          ORR      r0,r0,#0xb8
;;;1066   {
;;;1067   lcd1_wr(_DISPLAY_OFF_);
000004  f7ffbffe          B.W      lcd1_wr
;;;1068   //lcd2_wr(_DISPLAY_OFF_);
;;;1069   }
;;;1070   
                          ENDP


                          AREA ||area_number.9||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.9||, ||.text||
                  lcd_set_col PROC
;;;1064   //-----------------------------------------------
;;;1065   void lcd_off(void)
000000  f7ffbffe          B.W      lcd1_wr
;;;1066   {
;;;1067   lcd1_wr(_DISPLAY_OFF_);
;;;1068   //lcd2_wr(_DISPLAY_OFF_);
;;;1069   }
;;;1070   
                          ENDP


                          AREA ||area_number.10||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.10||, ||.text||
                  lcd_set_raw PROC
;;;1064   //-----------------------------------------------
;;;1065   void lcd_off(void)
000000  f04000c0          ORR      r0,r0,#0xc0
;;;1066   {
;;;1067   lcd1_wr(_DISPLAY_OFF_);
000004  f7ffbffe          B.W      lcd1_wr
;;;1068   //lcd2_wr(_DISPLAY_OFF_);
;;;1069   }
;;;1070   
                          ENDP


                          AREA ||area_number.11||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.11||, ||.text||
                  status PROC
;;;1064   //-----------------------------------------------
;;;1065   void lcd_off(void)
000000  4809              LDR      r0,|L11.40|
;;;1066   {
;;;1067   lcd1_wr(_DISPLAY_OFF_);
000002  f44f2180          MOV      r1,#0x40000
000006  63c1              STR      r1,[r0,#0x3c]
000008  f44f1100          MOV      r1,#0x200000
00000c  6381              STR      r1,[r0,#0x38]
00000e  f44f2100          MOV      r1,#0x80000
000012  6381              STR      r1,[r0,#0x38]
000014  bf00              NOP      
                  |L11.22|
000016  bf00              NOP      
000018  bf00              NOP      
00001a  bf00              NOP      
00001c  6b42              LDR      r2,[r0,#0x34]
00001e  0092              LSLS     r2,r2,#2
000020  d4f9              BMI      |L11.22|
000022  63c1              STR      r1,[r0,#0x3c]
000024  4770              BX       lr
;;;1068   //lcd2_wr(_DISPLAY_OFF_);
;;;1069   }
;;;1070   
                          ENDP

000026  0000              DCW      0x0000
                  |L11.40|
                          DCD      0x2009c000

                          AREA ||area_number.12||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.12||, ||.text||
                  delay PROC
;;;1064   //-----------------------------------------------
;;;1065   void lcd_off(void)
000000  f04f0000          MOV      r0,#0
                  |L12.4|
;;;1066   {
;;;1067   lcd1_wr(_DISPLAY_OFF_);
000004  bf00              NOP      
000006  1c40              ADDS     r0,r0,#1
000008  b200              SXTH     r0,r0
00000a  2864              CMP      r0,#0x64
00000c  dbfa              BLT      |L12.4|
00000e  4770              BX       lr
;;;1068   //lcd2_wr(_DISPLAY_OFF_);
;;;1069   }
;;;1070   
                          ENDP


                          AREA ||area_number.13||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.13||, ||.text||
                  ltstrobe PROC
;;;1064   //-----------------------------------------------
;;;1065   void lcd_off(void)
000000  b530              PUSH     {r4,r5,lr}
;;;1066   {
;;;1067   lcd1_wr(_DISPLAY_OFF_);
000002  4603              MOV      r3,r0
000004  f7fffffe          BL       status
000008  490b              LDR      r1,|L13.56|
00000a  f44f1000          MOV      r0,#0x200000
00000e  6388              STR      r0,[r1,#0x38]
000010  10c2              ASRS     r2,r0,#3
000012  63ca              STR      r2,[r1,#0x3c]
000014  1082              ASRS     r2,r0,#2
000016  638a              STR      r2,[r1,#0x38]
000018  1044              ASRS     r4,r0,#1
00001a  638c              STR      r4,[r1,#0x38]
00001c  6b8d              LDR      r5,[r1,#0x38]
00001e  ea455583          ORR      r5,r5,r3,LSL #22
000022  638d              STR      r5,[r1,#0x38]
000024  6bcd              LDR      r5,[r1,#0x3c]
000026  43db              MVNS     r3,r3
000028  b2db              UXTB     r3,r3
00002a  ea455383          ORR      r3,r5,r3,LSL #22
00002e  63cb              STR      r3,[r1,#0x3c]
000030  63ca              STR      r2,[r1,#0x3c]
000032  63cc              STR      r4,[r1,#0x3c]
000034  63c8              STR      r0,[r1,#0x3c]
000036  bd30              POP      {r4,r5,pc}
;;;1068   //lcd2_wr(_DISPLAY_OFF_);
;;;1069   }
;;;1070   
                          ENDP

                  |L13.56|
                          DCD      0x2009c000

                          AREA ||area_number.14||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.14||, ||.text||
                  lcd_init_ PROC
;;;1064   //-----------------------------------------------
;;;1065   void lcd_off(void)
000000  482d              LDR      r0,|L14.184|
;;;1066   {
;;;1067   lcd1_wr(_DISPLAY_OFF_);
000002  6841              LDR      r1,[r0,#4]
000004  f0215140          BIC      r1,r1,#0x30000000
000008  6041              STR      r1,[r0,#4]
00000a  6881              LDR      r1,[r0,#8]
00000c  f0210130          BIC      r1,r1,#0x30
000010  6081              STR      r1,[r0,#8]
000012  6881              LDR      r1,[r0,#8]
000014  f02101c0          BIC      r1,r1,#0xc0
000018  6081              STR      r1,[r0,#8]
00001a  6881              LDR      r1,[r0,#8]
00001c  f4217140          BIC      r1,r1,#0x300
000020  6081              STR      r1,[r0,#8]
000022  6881              LDR      r1,[r0,#8]
000024  f4216140          BIC      r1,r1,#0xc00
000028  6081              STR      r1,[r0,#8]
00002a  6841              LDR      r1,[r0,#4]
00002c  f4215140          BIC      r1,r1,#0x3000
000030  6041              STR      r1,[r0,#4]
000032  6841              LDR      r1,[r0,#4]
000034  f4214140          BIC      r1,r1,#0xc000
000038  6041              STR      r1,[r0,#4]
00003a  6841              LDR      r1,[r0,#4]
00003c  f4213140          BIC      r1,r1,#0x30000
000040  6041              STR      r1,[r0,#4]
000042  6841              LDR      r1,[r0,#4]
000044  f4212140          BIC      r1,r1,#0xc0000
000048  6041              STR      r1,[r0,#4]
00004a  6841              LDR      r1,[r0,#4]
00004c  f4211140          BIC      r1,r1,#0x300000
000050  6041              STR      r1,[r0,#4]
000052  6841              LDR      r1,[r0,#4]
000054  f4210140          BIC      r1,r1,#0xc00000
000058  6041              STR      r1,[r0,#4]
00005a  6841              LDR      r1,[r0,#4]
00005c  f0217140          BIC      r1,r1,#0x3000000
000060  6041              STR      r1,[r0,#4]
000062  6841              LDR      r1,[r0,#4]
000064  f0216140          BIC      r1,r1,#0xc000000
000068  6041              STR      r1,[r0,#4]
00006a  4814              LDR      r0,|L14.188|
00006c  6a01              LDR      r1,[r0,#0x20]
00006e  4a14              LDR      r2,|L14.192|
000070  4311              ORRS     r1,r1,r2
000072  6201              STR      r1,[r0,#0x20]
000074  6801              LDR      r1,[r0,#0]
000076  f4411170          ORR      r1,r1,#0x3c0000
00007a  6001              STR      r1,[r0,#0]
00007c  2100              MOVS     r1,#0
                  |L14.126|
00007e  6bc2              LDR      r2,[r0,#0x3c]
000080  f0424280          ORR      r2,r2,#0x40000000
000084  63c2              STR      r2,[r0,#0x3c]
000086  1c49              ADDS     r1,r1,#1
000088  290a              CMP      r1,#0xa
00008a  dbf8              BLT      |L14.126|
00008c  f04f0100          MOV      r1,#0
000090  f44f72fa          MOV      r2,#0x1f4
                  |L14.148|
000094  bf00              NOP      
000096  1c49              ADDS     r1,r1,#1
000098  4291              CMP      r1,r2
00009a  dbfb              BLT      |L14.148|
00009c  2100              MOVS     r1,#0
00009e  f24c3250          MOV      r2,#0xc350
                  |L14.162|
0000a2  6b83              LDR      r3,[r0,#0x38]
0000a4  f0434380          ORR      r3,r3,#0x40000000
0000a8  6383              STR      r3,[r0,#0x38]
0000aa  1c49              ADDS     r1,r1,#1
0000ac  4291              CMP      r1,r2
0000ae  dbf8              BLT      |L14.162|
0000b0  20e2              MOVS     r0,#0xe2
0000b2  f7ffbffe          B.W      ltstrobe
;;;1068   //lcd2_wr(_DISPLAY_OFF_);
;;;1069   }
;;;1070   
                          ENDP

0000b6  0000              DCW      0x0000
                  |L14.184|
                          DCD      0x4002c000
                  |L14.188|
                          DCD      0x2009c000
                  |L14.192|
                          DCD      0x7fc00000

                          AREA ||area_number.15||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.15||, ||.text||
                  lcd_off PROC
;;;1064   //-----------------------------------------------
;;;1065   void lcd_off(void)
000000  20ae              MOVS     r0,#0xae
;;;1066   {
;;;1067   lcd1_wr(_DISPLAY_OFF_);
000002  f7ffbffe          B.W      lcd1_wr
;;;1068   //lcd2_wr(_DISPLAY_OFF_);
;;;1069   }
;;;1070   
                          ENDP


                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  lcd_bitmap2
                          %        512

                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  bit_mask_const
000000  01020408          DCB      0x01,0x02,0x04,0x08
000004  10204080          DCB      0x10,0x20,0x40,0x80

                          AREA ||.data||, DATA, ALIGN=0

                  mem
000000  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "lcd_WG12232L3.c"
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___15_lcd_WG12232L3_c_6c37cc07____REV16|
#line 112 "C:\\Keil\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___15_lcd_WG12232L3_c_6c37cc07____REV16| PROC
#line 113

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___15_lcd_WG12232L3_c_6c37cc07____REVSH|
#line 130
|__asm___15_lcd_WG12232L3_c_6c37cc07____REVSH| PROC
#line 131

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
